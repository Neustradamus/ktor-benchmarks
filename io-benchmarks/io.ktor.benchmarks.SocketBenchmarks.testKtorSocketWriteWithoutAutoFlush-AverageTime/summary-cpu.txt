--- Execution profile ---
Total samples       : 2243
unknown_Java        : 1 (0.04%)

--- 21461025932 ns (26.66%), 365 samples
  [ 0] write
  [ 1] sun.nio.ch.FileDispatcherImpl.write0
  [ 2] sun.nio.ch.SocketDispatcher.write
  [ 3] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 4] sun.nio.ch.IOUtil.write
  [ 5] sun.nio.ch.IOUtil.write
  [ 6] sun.nio.ch.SocketChannelImpl.write
  [ 7] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [11] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [12] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [13] io.ktor.utils.io.ByteBufferChannel.flush
  [14] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [15] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [16] io.ktor.utils.io.ByteBufferChannel.writeFully
  [17] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [18] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [19] kotlinx.coroutines.DispatchedTask.run
  [20] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [21] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [23] kotlinx.coroutines.BuildersKt.runBlocking
  [24] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [25] kotlinx.coroutines.BuildersKt.runBlocking$default
  [26] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [27] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [28] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [29] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [30] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [31] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [32] java.lang.reflect.Method.invoke
  [33] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [34] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.Executors$RunnableAdapter.call
  [37] java.util.concurrent.FutureTask.run
  [38] java.util.concurrent.ThreadPoolExecutor.runWorker
  [39] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [40] java.lang.Thread.run

--- 14681478165 ns (18.24%), 646 samples
  [ 0] __recv
  [ 1] java.net.SocketInputStream.socketRead0
  [ 2] java.net.SocketInputStream.socketRead
  [ 3] java.net.SocketInputStream.read
  [ 4] java.net.SocketInputStream.read
  [ 5] java.net.SocketInputStream.read
  [ 6] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 7] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 8] java.util.concurrent.Executors$RunnableAdapter.call
  [ 9] java.util.concurrent.FutureTask.run
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

--- 6892633828 ns (8.56%), 341 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libc-2.33.so
  [ 1] Java_java_net_SocketInputStream_socketRead0
  [ 2] java.net.SocketInputStream.socketRead0
  [ 3] java.net.SocketInputStream.socketRead
  [ 4] java.net.SocketInputStream.read
  [ 5] java.net.SocketInputStream.read
  [ 6] java.net.SocketInputStream.read
  [ 7] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 8] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 9] java.util.concurrent.Executors$RunnableAdapter.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 3280102516 ns (4.07%), 47 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 4] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 2290079176 ns (2.85%), 44 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 4] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 2080095503 ns (2.58%), 31 samples
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.tryWriteAtMost
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 4] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 1796377566 ns (2.23%), 83 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] Java_java_net_SocketInputStream_socketRead0
  [ 3] java.net.SocketInputStream.socketRead0
  [ 4] java.net.SocketInputStream.socketRead
  [ 5] java.net.SocketInputStream.read
  [ 6] java.net.SocketInputStream.read
  [ 7] java.net.SocketInputStream.read
  [ 8] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 9] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [10] java.util.concurrent.Executors$RunnableAdapter.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.ThreadPoolExecutor.runWorker
  [13] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [14] java.lang.Thread.run

--- 1626223908 ns (2.02%), 66 samples
  [ 0] __GI___pthread_mutex_lock
  [ 1] Java_java_net_SocketInputStream_socketRead0
  [ 2] java.net.SocketInputStream.socketRead0
  [ 3] java.net.SocketInputStream.socketRead
  [ 4] java.net.SocketInputStream.read
  [ 5] java.net.SocketInputStream.read
  [ 6] java.net.SocketInputStream.read
  [ 7] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 8] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 9] java.util.concurrent.Executors$RunnableAdapter.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 1110054953 ns (1.38%), 20 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libc-2.33.so
  [ 1] sun.nio.ch.FileDispatcherImpl.write0
  [ 2] sun.nio.ch.SocketDispatcher.write
  [ 3] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 4] sun.nio.ch.IOUtil.write
  [ 5] sun.nio.ch.IOUtil.write
  [ 6] sun.nio.ch.SocketChannelImpl.write
  [ 7] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [11] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [12] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [13] io.ktor.utils.io.ByteBufferChannel.flush
  [14] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [15] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [16] io.ktor.utils.io.ByteBufferChannel.writeFully
  [17] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [18] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [19] kotlinx.coroutines.DispatchedTask.run
  [20] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [21] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [23] kotlinx.coroutines.BuildersKt.runBlocking
  [24] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [25] kotlinx.coroutines.BuildersKt.runBlocking$default
  [26] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [27] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [28] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [29] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [30] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [31] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [32] java.lang.reflect.Method.invoke
  [33] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [34] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.Executors$RunnableAdapter.call
  [37] java.util.concurrent.FutureTask.run
  [38] java.util.concurrent.ThreadPoolExecutor.runWorker
  [39] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [40] java.lang.Thread.run

--- 1098406350 ns (1.36%), 52 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] Java_java_net_SocketInputStream_socketRead0
  [ 2] java.net.SocketInputStream.socketRead0
  [ 3] java.net.SocketInputStream.socketRead
  [ 4] java.net.SocketInputStream.read
  [ 5] java.net.SocketInputStream.read
  [ 6] java.net.SocketInputStream.read
  [ 7] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 8] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 9] java.util.concurrent.Executors$RunnableAdapter.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 1060044554 ns (1.32%), 15 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.request
  [ 1] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.flush
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully
  [11] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 1030042307 ns (1.28%), 13 samples
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.tryWriteAtMost
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 4] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 1019047844 ns (1.27%), 46 samples
  [ 0] __GI___pthread_mutex_unlock
  [ 1] Java_java_net_SocketInputStream_socketRead0
  [ 2] java.net.SocketInputStream.socketRead0
  [ 3] java.net.SocketInputStream.socketRead
  [ 4] java.net.SocketInputStream.read
  [ 5] java.net.SocketInputStream.read
  [ 6] java.net.SocketInputStream.read
  [ 7] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 8] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 9] java.util.concurrent.Executors$RunnableAdapter.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 830027484 ns (1.03%), 16 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForWrite$ktor_io
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 4] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 820032634 ns (1.02%), 11 samples
  [ 0] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.flush
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully
  [10] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [20] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 800050001 ns (0.99%), 19 samples
  [ 0] [vdso]
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 3] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 6] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 7] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 8] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.flush
  [10] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [12] io.ktor.utils.io.ByteBufferChannel.writeFully
  [13] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [17] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [21] kotlinx.coroutines.BuildersKt.runBlocking$default
  [22] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [24] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 740022913 ns (0.92%), 6 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 3] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 7] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [11] kotlinx.coroutines.BuildersKt.runBlocking$default
  [12] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [13] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 630022787 ns (0.78%), 20 samples
  [ 0] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.flush
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully
  [10] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [20] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 620061544 ns (0.77%), 10 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 1] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.flush
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully
  [11] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 560032859 ns (0.70%), 11 samples
  [ 0] sun.nio.ch.FileDispatcherImpl.write0
  [ 1] sun.nio.ch.SocketDispatcher.write
  [ 2] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 3] sun.nio.ch.IOUtil.write
  [ 4] sun.nio.ch.IOUtil.write
  [ 5] sun.nio.ch.SocketChannelImpl.write
  [ 6] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [11] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [12] io.ktor.utils.io.ByteBufferChannel.flush
  [13] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [14] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [15] io.ktor.utils.io.ByteBufferChannel.writeFully
  [16] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [17] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [18] kotlinx.coroutines.DispatchedTask.run
  [19] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [20] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt.runBlocking
  [23] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [24] kotlinx.coroutines.BuildersKt.runBlocking$default
  [25] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [26] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [27] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [29] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [30] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [31] java.lang.reflect.Method.invoke
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.Executors$RunnableAdapter.call
  [36] java.util.concurrent.FutureTask.run
  [37] java.util.concurrent.ThreadPoolExecutor.runWorker
  [38] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [39] java.lang.Thread.run

--- 560029169 ns (0.70%), 5 samples
  [ 0] java.nio.DirectByteBuffer.put
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 4] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 542633800 ns (0.67%), 17 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libc-2.33.so
  [ 1] java.net.SocketInputStream.socketRead0
  [ 2] java.net.SocketInputStream.socketRead
  [ 3] java.net.SocketInputStream.read
  [ 4] java.net.SocketInputStream.read
  [ 5] java.net.SocketInputStream.read
  [ 6] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 7] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 8] java.util.concurrent.Executors$RunnableAdapter.call
  [ 9] java.util.concurrent.FutureTask.run
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

--- 471268696 ns (0.59%), 19 samples
  [ 0] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 1] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 2] java.util.concurrent.Executors$RunnableAdapter.call
  [ 3] java.util.concurrent.FutureTask.run
  [ 4] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 5] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 6] java.lang.Thread.run

--- 470013588 ns (0.58%), 4 samples
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.tryWriteAtMost
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 4] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 445207448 ns (0.55%), 23 samples
  [ 0] Java_java_net_SocketInputStream_socketRead0
  [ 1] java.net.SocketInputStream.socketRead0
  [ 2] java.net.SocketInputStream.socketRead
  [ 3] java.net.SocketInputStream.read
  [ 4] java.net.SocketInputStream.read
  [ 5] java.net.SocketInputStream.read
  [ 6] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 7] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 8] java.util.concurrent.Executors$RunnableAdapter.call
  [ 9] java.util.concurrent.FutureTask.run
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

--- 414102579 ns (0.51%), 18 samples
  [ 0] java.net.SocketInputStream.socketRead0
  [ 1] java.net.SocketInputStream.socketRead
  [ 2] java.net.SocketInputStream.read
  [ 3] java.net.SocketInputStream.read
  [ 4] java.net.SocketInputStream.read
  [ 5] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 6] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 7] java.util.concurrent.Executors$RunnableAdapter.call
  [ 8] java.util.concurrent.FutureTask.run
  [ 9] java.util.concurrent.ThreadPoolExecutor.runWorker
  [10] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [11] java.lang.Thread.run

--- 380032672 ns (0.47%), 4 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 2] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.flush
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully
  [12] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 377209554 ns (0.47%), 22 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/libnet.so
  [ 1] Java_java_net_SocketInputStream_socketRead0
  [ 2] java.net.SocketInputStream.socketRead0
  [ 3] java.net.SocketInputStream.socketRead
  [ 4] java.net.SocketInputStream.read
  [ 5] java.net.SocketInputStream.read
  [ 6] java.net.SocketInputStream.read
  [ 7] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 8] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 9] java.util.concurrent.Executors$RunnableAdapter.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 350011214 ns (0.43%), 9 samples
  [ 0] jshort_disjoint_arraycopy
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 4] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 340024354 ns (0.42%), 3 samples
  [ 0] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.flush
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 7] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [17] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 340013283 ns (0.42%), 4 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 3] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 7] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [11] kotlinx.coroutines.BuildersKt.runBlocking$default
  [12] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [13] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 330008435 ns (0.41%), 6 samples
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.getContext
  [ 1] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 2] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 3] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 4] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.flush
  [ 6] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 9] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [13] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [17] kotlinx.coroutines.BuildersKt.runBlocking$default
  [18] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [19] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [20] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 320014330 ns (0.40%), 4 samples
  [ 0] kotlin.Result.exceptionOrNull-impl
  [ 1] kotlinx.coroutines.CompletionStateKt.toState
  [ 2] kotlinx.coroutines.CompletionStateKt.toState$default
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.flush
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully
  [11] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 320013240 ns (0.40%), 6 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$getState
  [ 2] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 5] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [10] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [11] io.ktor.utils.io.ByteBufferChannel.flush
  [12] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.writeFully
  [15] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [25] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 290022301 ns (0.36%), 4 samples
  [ 0] java.nio.Buffer.hasRemaining
  [ 1] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.flush
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully
  [11] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 290010717 ns (0.36%), 4 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 1] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.flush
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully
  [11] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 280012362 ns (0.35%), 1 sample
  [ 0] java.lang.ref.Reference.reachabilityFence
  [ 1] java.nio.DirectByteBuffer.put
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 5] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 270006492 ns (0.34%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.prepareBuffer
  [ 1] io.ktor.utils.io.ByteBufferChannel.setupStateForWrite$ktor_io
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 5] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 260029779 ns (0.32%), 3 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 3] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 7] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [11] kotlinx.coroutines.BuildersKt.runBlocking$default
  [12] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [13] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 250010778 ns (0.31%), 2 samples
  [ 0] kotlinx.coroutines.CoroutineDispatcher.get
  [ 1] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.flush
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully
  [11] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 220012725 ns (0.27%), 5 samples
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.<init>
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.<init>
  [ 2] kotlin.coroutines.jvm.internal.SuspendLambda.<init>
  [ 3] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1$timeout$1.<init>
  [ 4] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 7] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 8] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 9] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [10] io.ktor.utils.io.ByteBufferChannel.flush
  [11] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.writeFully
  [14] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [24] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 220006411 ns (0.27%), 2 samples
  [ 0] kotlinx.coroutines.JobSupport.get
  [ 1] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.flush
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully
  [11] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 220001919 ns (0.27%), 5 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 1] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.flush
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 6] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 212939215 ns (0.26%), 2 samples
  [ 0] pthread_mutex_unlock
  [ 1] Java_java_net_SocketInputStream_socketRead0
  [ 2] java.net.SocketInputStream.socketRead0
  [ 3] java.net.SocketInputStream.socketRead
  [ 4] java.net.SocketInputStream.read
  [ 5] java.net.SocketInputStream.read
  [ 6] java.net.SocketInputStream.read
  [ 7] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 8] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 9] java.util.concurrent.Executors$RunnableAdapter.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 210006324 ns (0.26%), 1 sample
  [ 0] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.flush
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 7] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [17] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 190004972 ns (0.24%), 2 samples
  [ 0] java.nio.Buffer.position
  [ 1] java.nio.ByteBuffer.position
  [ 2] java.nio.MappedByteBuffer.position
  [ 3] java.nio.MappedByteBuffer.position
  [ 4] io.ktor.utils.io.ByteBufferChannel.prepareBuffer
  [ 5] io.ktor.utils.io.ByteBufferChannel.request
  [ 6] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [11] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [12] io.ktor.utils.io.ByteBufferChannel.flush
  [13] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [14] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [15] io.ktor.utils.io.ByteBufferChannel.writeFully
  [16] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [17] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [18] kotlinx.coroutines.DispatchedTask.run
  [19] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [20] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt.runBlocking
  [23] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [24] kotlinx.coroutines.BuildersKt.runBlocking$default
  [25] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [26] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [27] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [29] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [30] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [31] java.lang.reflect.Method.invoke
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.Executors$RunnableAdapter.call
  [36] java.util.concurrent.FutureTask.run
  [37] java.util.concurrent.ThreadPoolExecutor.runWorker
  [38] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [39] java.lang.Thread.run

--- 190003917 ns (0.24%), 3 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForWrite$ktor_io
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 4] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 180009318 ns (0.22%), 5 samples
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 1] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 4] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 7] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 8] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 9] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [10] io.ktor.utils.io.ByteBufferChannel.flush
  [11] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.writeFully
  [14] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [24] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 180003853 ns (0.22%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.prepareBuffer
  [ 1] io.ktor.utils.io.ByteBufferChannel.request
  [ 2] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.flush
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully
  [12] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 170005796 ns (0.21%), 2 samples
  [ 0] java.nio.Buffer.checkBounds
  [ 1] java.nio.DirectByteBuffer.put
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 5] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 170004212 ns (0.21%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getWriteOp
  [ 1] io.ktor.utils.io.ByteBufferChannel.setupStateForWrite$ktor_io
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 5] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 164569476 ns (0.20%), 5 samples
  [ 0] java.net.AbstractPlainSocketImpl.releaseFD
  [ 1] java.net.SocketInputStream.read
  [ 2] java.net.SocketInputStream.read
  [ 3] java.net.SocketInputStream.read
  [ 4] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 5] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 6] java.util.concurrent.Executors$RunnableAdapter.call
  [ 7] java.util.concurrent.FutureTask.run
  [ 8] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 9] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [10] java.lang.Thread.run

--- 160010126 ns (0.20%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 1] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.flush
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 6] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 160009452 ns (0.20%), 3 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 3] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 7] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [11] kotlinx.coroutines.BuildersKt.runBlocking$default
  [12] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [13] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 160003782 ns (0.20%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 2] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 6] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [10] kotlinx.coroutines.BuildersKt.runBlocking$default
  [11] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [12] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [13] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 160003782 ns (0.20%), 3 samples
  [ 0] java.nio.DirectByteBuffer.put
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 4] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 160002156 ns (0.20%), 5 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getClosed
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$getClosed
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 5] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 150014096 ns (0.19%), 1 sample
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.getContext
  [ 1] kotlinx.coroutines.internal.DispatchedContinuation.getContext
  [ 2] io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 5] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [10] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [11] io.ktor.utils.io.ByteBufferChannel.flush
  [12] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.writeFully
  [15] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [25] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 140002952 ns (0.17%), 1 sample
  [ 0] sun.nio.ch.SocketChannelImpl.connect
  [ 1] io.ktor.network.sockets.SocketImpl.connect$ktor_network
  [ 2] io.ktor.network.sockets.ConnectUtilsJvmKt.connect
  [ 3] io.ktor.network.sockets.TcpSocketBuilder.connect
  [ 4] io.ktor.network.sockets.TcpSocketBuilder.connect
  [ 5] io.ktor.network.sockets.TcpSocketBuilder.connect$default
  [ 6] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 130006908 ns (0.16%), 2 samples
  [ 0] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.flush
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully
  [10] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [20] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 130005771 ns (0.16%), 3 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.prepareBuffer
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 4] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 130005031 ns (0.16%), 1 sample
  [ 0] java.nio.ByteBuffer.order
  [ 1] io.ktor.utils.io.ByteBufferChannel.prepareBuffer
  [ 2] io.ktor.utils.io.ByteBufferChannel.request
  [ 3] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 6] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 7] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 8] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.flush
  [10] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [12] io.ktor.utils.io.ByteBufferChannel.writeFully
  [13] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [17] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [21] kotlinx.coroutines.BuildersKt.runBlocking$default
  [22] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [24] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 130004367 ns (0.16%), 3 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 2] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.flush
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully
  [12] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 130004351 ns (0.16%), 1 sample
  [ 0] io.ktor.network.selector.SelectorManagerSupport.<init>
  [ 1] io.ktor.network.selector.ActorSelectorManager.<init>
  [ 2] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 6] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [10] kotlinx.coroutines.BuildersKt.runBlocking$default
  [11] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [12] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [13] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 124406321 ns (0.15%), 6 samples
  [ 0] java.net.SocketInputStream.read
  [ 1] java.net.SocketInputStream.read
  [ 2] java.net.SocketInputStream.read
  [ 3] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 4] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 5] java.util.concurrent.Executors$RunnableAdapter.call
  [ 6] java.util.concurrent.FutureTask.run
  [ 7] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 8] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 9] java.lang.Thread.run

--- 120015732 ns (0.15%), 1 sample
  [ 0] io.ktor.utils.io.ChannelScope.<init>
  [ 1] io.ktor.utils.io.CoroutinesKt$launchChannel$job$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.internal.DispatchedContinuationKt.resumeCancellableWith
  [ 4] kotlinx.coroutines.intrinsics.CancellableKt.startCoroutineCancellable
  [ 5] kotlinx.coroutines.BuildersKt__Builders_commonKt.startCoroutineImpl
  [ 6] kotlinx.coroutines.BuildersKt.startCoroutineImpl
  [ 7] kotlinx.coroutines.AbstractCoroutine.start
  [ 8] kotlinx.coroutines.BuildersKt__Builders_commonKt.launch
  [ 9] kotlinx.coroutines.BuildersKt.launch
  [10] kotlinx.coroutines.BuildersKt__Builders_commonKt.launch$default
  [11] kotlinx.coroutines.BuildersKt.launch$default
  [12] io.ktor.utils.io.CoroutinesKt.launchChannel
  [13] io.ktor.utils.io.CoroutinesKt.reader
  [14] io.ktor.network.sockets.CIOWriterKt.attachForWritingDirectImpl
  [15] io.ktor.network.sockets.NIOSocketImpl$attachForWriting$1.invoke
  [16] io.ktor.network.sockets.NIOSocketImpl$attachForWriting$1.invoke
  [17] io.ktor.network.sockets.NIOSocketImpl.attachFor
  [18] io.ktor.network.sockets.NIOSocketImpl.attachForWriting
  [19] io.ktor.network.sockets.SocketsKt.openWriteChannel
  [20] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [21] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [22] kotlinx.coroutines.DispatchedTask.run
  [23] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [24] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [25] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [26] kotlinx.coroutines.BuildersKt.runBlocking
  [27] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [28] kotlinx.coroutines.BuildersKt.runBlocking$default
  [29] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [30] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [31] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [32] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [33] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [34] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [35] java.lang.reflect.Method.invoke
  [36] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [37] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [38] java.util.concurrent.FutureTask.run
  [39] java.util.concurrent.Executors$RunnableAdapter.call
  [40] java.util.concurrent.FutureTask.run
  [41] java.util.concurrent.ThreadPoolExecutor.runWorker
  [42] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [43] java.lang.Thread.run

--- 120008062 ns (0.15%), 1 sample
  [ 0] io.ktor.network.sockets.SocketOptions$TCPClientSocketOptions.getSocketTimeout
  [ 1] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.flush
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully
  [11] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 120002635 ns (0.15%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 3] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 7] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [11] kotlinx.coroutines.BuildersKt.runBlocking$default
  [12] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [13] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 110027615 ns (0.14%), 4 samples
  [ 0] Java_sun_nio_ch_FileDispatcherImpl_write0
  [ 1] sun.nio.ch.FileDispatcherImpl.write0
  [ 2] sun.nio.ch.SocketDispatcher.write
  [ 3] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 4] sun.nio.ch.IOUtil.write
  [ 5] sun.nio.ch.IOUtil.write
  [ 6] sun.nio.ch.SocketChannelImpl.write
  [ 7] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [11] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [12] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [13] io.ktor.utils.io.ByteBufferChannel.flush
  [14] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [15] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [16] io.ktor.utils.io.ByteBufferChannel.writeFully
  [17] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [18] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [19] kotlinx.coroutines.DispatchedTask.run
  [20] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [21] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [23] kotlinx.coroutines.BuildersKt.runBlocking
  [24] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [25] kotlinx.coroutines.BuildersKt.runBlocking$default
  [26] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [27] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [28] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [29] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [30] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [31] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [32] java.lang.reflect.Method.invoke
  [33] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [34] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.Executors$RunnableAdapter.call
  [37] java.util.concurrent.FutureTask.run
  [38] java.util.concurrent.ThreadPoolExecutor.runWorker
  [39] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [40] java.lang.Thread.run

--- 110010491 ns (0.14%), 2 samples
  [ 0] java.nio.Buffer.limit
  [ 1] java.nio.DirectByteBuffer.put
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 5] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 110005496 ns (0.14%), 1 sample
  [ 0] java.util.concurrent.atomic.AtomicReference.<init>
  [ 1] io.ktor.network.selector.ActorSelectorManager$ContinuationHolder.<init>
  [ 2] io.ktor.network.selector.ActorSelectorManager.<init>
  [ 3] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 7] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [11] kotlinx.coroutines.BuildersKt.runBlocking$default
  [12] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [13] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 90011684 ns (0.11%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.request
  [ 1] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.flush
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully
  [11] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 90007721 ns (0.11%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 1] io.ktor.network.selector.ActorSelectorManager.<init>
  [ 2] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 6] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [10] kotlinx.coroutines.BuildersKt.runBlocking$default
  [11] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [12] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [13] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 90004972 ns (0.11%), 2 samples
  [ 0] jdk.internal.misc.Unsafe.copyMemoryChecks
  [ 1] jdk.internal.misc.Unsafe.copyMemory
  [ 2] java.nio.DirectByteBuffer.put
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 6] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 90004077 ns (0.11%), 4 samples
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.tryWriteAtMost
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 4] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 90004055 ns (0.11%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.prepareBuffer
  [ 1] io.ktor.utils.io.ByteBufferChannel.request
  [ 2] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.flush
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully
  [12] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 90003216 ns (0.11%), 1 sample
  [ 0] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.flush
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully
  [10] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [20] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 90002048 ns (0.11%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 1] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 2] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.flush
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully
  [12] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 80015284 ns (0.10%), 1 sample
  [ 0] getsockopt
  [ 1] sun.nio.ch.SocketChannelImpl.checkConnect
  [ 2] sun.nio.ch.SocketChannelImpl.finishConnect
  [ 3] io.ktor.network.sockets.SocketImpl.connect$ktor_network
  [ 4] io.ktor.network.sockets.SocketImpl$connect$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 80007031 ns (0.10%), 1 sample
  [ 0] java.nio.ByteBuffer.put
  [ 1] java.nio.DirectByteBuffer.put
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 5] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 80005774 ns (0.10%), 1 sample
  [ 0] jlong_arraycopy
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 4] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 80002705 ns (0.10%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getClosed
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.flush
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 7] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [17] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 80001879 ns (0.10%), 1 sample
  [ 0] kotlinx.coroutines.JobSupport.makeCompleting$kotlinx_coroutines_core
  [ 1] kotlinx.coroutines.JobImpl.complete
  [ 2] io.ktor.network.sockets.NIOSocketImpl.checkChannels
  [ 3] io.ktor.network.sockets.NIOSocketImpl.close
  [ 4] kotlin.io.CloseableKt.closeFinally
  [ 5] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 70005492 ns (0.09%), 1 sample
  [ 0] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.flush
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully
  [10] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [20] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 70004188 ns (0.09%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.prepareBuffer
  [ 1] io.ktor.utils.io.ByteBufferChannel.request
  [ 2] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.flush
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully
  [12] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 70001992 ns (0.09%), 1 sample
  [ 0] kotlin.coroutines.CoroutineContext$Element$DefaultImpls.get
  [ 1] kotlinx.coroutines.Job$DefaultImpls.get
  [ 2] kotlinx.coroutines.JobSupport.get
  [ 3] kotlin.coroutines.CombinedContext.get
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.parent
  [ 5] io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
  [ 6] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 8] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [11] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [12] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [13] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [14] io.ktor.utils.io.ByteBufferChannel.flush
  [15] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [16] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [17] io.ktor.utils.io.ByteBufferChannel.writeFully
  [18] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [19] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [20] kotlinx.coroutines.DispatchedTask.run
  [21] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [22] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [23] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [24] kotlinx.coroutines.BuildersKt.runBlocking
  [25] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [26] kotlinx.coroutines.BuildersKt.runBlocking$default
  [27] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [28] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [29] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [30] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [31] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [32] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [33] java.lang.reflect.Method.invoke
  [34] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [35] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [36] java.util.concurrent.FutureTask.run
  [37] java.util.concurrent.Executors$RunnableAdapter.call
  [38] java.util.concurrent.FutureTask.run
  [39] java.util.concurrent.ThreadPoolExecutor.runWorker
  [40] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [41] java.lang.Thread.run

--- 70001806 ns (0.09%), 1 sample
  [ 0] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.flush
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully
  [10] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [20] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 69999716 ns (0.09%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 1] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 3] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 6] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 7] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 8] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.flush
  [10] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [12] io.ktor.utils.io.ByteBufferChannel.writeFully
  [13] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [17] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [21] kotlinx.coroutines.BuildersKt.runBlocking$default
  [22] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [24] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 60052874 ns (0.07%), 5 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [12] start_thread

--- 60008283 ns (0.07%), 1 sample
  [ 0] java.lang.invoke.VarHandleGuards.guard_LL_L
  [ 1] java.util.concurrent.atomic.AtomicReference.getAndSet
  [ 2] io.ktor.network.selector.ActorSelectorManager$ContinuationHolder.resume
  [ 3] io.ktor.network.selector.ActorSelectorManager.publishInterest
  [ 4] io.ktor.network.selector.SelectorManagerSupport.select
  [ 5] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [10] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [11] io.ktor.utils.io.ByteBufferChannel.flush
  [12] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.writeFully
  [15] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [25] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 60003799 ns (0.07%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.request
  [ 1] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.flush
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully
  [11] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 60003484 ns (0.07%), 1 sample
  [ 0] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [10] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 60001814 ns (0.07%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 3] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 7] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [11] kotlinx.coroutines.BuildersKt.runBlocking$default
  [12] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [13] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 60001718 ns (0.07%), 1 sample
  [ 0] java.lang.Class.getComponentType
  [ 1] jdk.internal.misc.Unsafe.checkPrimitiveArray
  [ 2] jdk.internal.misc.Unsafe.checkPrimitivePointer
  [ 3] jdk.internal.misc.Unsafe.copyMemoryChecks
  [ 4] jdk.internal.misc.Unsafe.copyMemory
  [ 5] java.nio.DirectByteBuffer.put
  [ 6] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 9] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [13] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [17] kotlinx.coroutines.BuildersKt.runBlocking$default
  [18] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [19] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [20] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 60001398 ns (0.07%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForWrite$ktor_io
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 4] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 60000517 ns (0.07%), 2 samples
  [ 0] jbyte_disjoint_arraycopy
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 4] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 51492844 ns (0.06%), 2 samples
  [ 0] pthread_self
  [ 1] Java_java_net_SocketInputStream_socketRead0
  [ 2] java.net.SocketInputStream.socketRead0
  [ 3] java.net.SocketInputStream.socketRead
  [ 4] java.net.SocketInputStream.read
  [ 5] java.net.SocketInputStream.read
  [ 6] java.net.SocketInputStream.read
  [ 7] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 8] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 9] java.util.concurrent.Executors$RunnableAdapter.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 50031594 ns (0.06%), 5 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [12] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [13] start_thread

--- 50006780 ns (0.06%), 1 sample
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] io.ktor.network.selector.ActorSelectorManager.<init>
  [ 8] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [18] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 50005224 ns (0.06%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$getState
  [ 2] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 5] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [10] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [11] io.ktor.utils.io.ByteBufferChannel.flush
  [12] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.writeFully
  [15] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [25] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 50004231 ns (0.06%), 1 sample
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.dispatchYield$kotlinx_coroutines_core
  [ 1] kotlinx.coroutines.YieldKt.yield
  [ 2] io.ktor.network.selector.ActorSelectorManager.select
  [ 3] io.ktor.network.selector.ActorSelectorManager.process
  [ 4] io.ktor.network.selector.ActorSelectorManager.access$process
  [ 5] io.ktor.network.selector.ActorSelectorManager$process$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] io.ktor.network.selector.ActorSelectorManager$ContinuationHolder.resume
  [ 8] io.ktor.network.selector.ActorSelectorManager.publishInterest
  [ 9] io.ktor.network.selector.SelectorManagerSupport.select
  [10] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [13] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [14] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [15] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [16] io.ktor.utils.io.ByteBufferChannel.flush
  [17] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [18] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [19] io.ktor.utils.io.ByteBufferChannel.writeFully
  [20] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [21] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [22] kotlinx.coroutines.DispatchedTask.run
  [23] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [24] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [25] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [26] kotlinx.coroutines.BuildersKt.runBlocking
  [27] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [28] kotlinx.coroutines.BuildersKt.runBlocking$default
  [29] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [30] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [31] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [32] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [33] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [34] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [35] java.lang.reflect.Method.invoke
  [36] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [37] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [38] java.util.concurrent.FutureTask.run
  [39] java.util.concurrent.Executors$RunnableAdapter.call
  [40] java.util.concurrent.FutureTask.run
  [41] java.util.concurrent.ThreadPoolExecutor.runWorker
  [42] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [43] java.lang.Thread.run

--- 50003916 ns (0.06%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.request
  [ 1] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.flush
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully
  [11] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 50003815 ns (0.06%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getClosed
  [ 1] io.ktor.utils.io.ByteBufferChannel.setupStateForWrite$ktor_io
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 5] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 49999364 ns (0.06%), 1 sample
  [ 0] java.nio.Buffer.position
  [ 1] java.nio.ByteBuffer.position
  [ 2] java.nio.MappedByteBuffer.position
  [ 3] java.nio.DirectByteBuffer.put
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 7] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [17] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 49998940 ns (0.06%), 2 samples
  [ 0] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.flush
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully
  [10] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [20] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 40029430 ns (0.05%), 4 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] start_thread

--- 40007061 ns (0.05%), 1 sample
  [ 0] java.lang.Thread.interrupted
  [ 1] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 2] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 3] kotlinx.coroutines.BuildersKt.runBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 6] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [ 7] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [ 8] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 40005956 ns (0.05%), 1 sample
  [ 0] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 1] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 2] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 3] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.flush
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 6] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 8] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [18] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 40004436 ns (0.05%), 1 sample
  [ 0] kotlinx.coroutines.JobSupport.startInternal
  [ 1] kotlinx.coroutines.JobSupport.start
  [ 2] kotlinx.coroutines.JobSupport.initParentJob$kotlinx_coroutines_core
  [ 3] kotlinx.coroutines.AbstractCoroutine.<init>
  [ 4] kotlinx.coroutines.StandaloneCoroutine.<init>
  [ 5] kotlinx.coroutines.BuildersKt__Builders_commonKt.launch
  [ 6] kotlinx.coroutines.BuildersKt.launch
  [ 7] kotlinx.coroutines.BuildersKt__Builders_commonKt.launch$default
  [ 8] kotlinx.coroutines.BuildersKt.launch$default
  [ 9] io.ktor.utils.io.CoroutinesKt.launchChannel
  [10] io.ktor.utils.io.CoroutinesKt.reader
  [11] io.ktor.network.sockets.CIOWriterKt.attachForWritingDirectImpl
  [12] io.ktor.network.sockets.NIOSocketImpl$attachForWriting$1.invoke
  [13] io.ktor.network.sockets.NIOSocketImpl$attachForWriting$1.invoke
  [14] io.ktor.network.sockets.NIOSocketImpl.attachFor
  [15] io.ktor.network.sockets.NIOSocketImpl.attachForWriting
  [16] io.ktor.network.sockets.SocketsKt.openWriteChannel
  [17] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [18] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [19] kotlinx.coroutines.DispatchedTask.run
  [20] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [21] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [23] kotlinx.coroutines.BuildersKt.runBlocking
  [24] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [25] kotlinx.coroutines.BuildersKt.runBlocking$default
  [26] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [27] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [28] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [29] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [30] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [31] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [32] java.lang.reflect.Method.invoke
  [33] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [34] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.Executors$RunnableAdapter.call
  [37] java.util.concurrent.FutureTask.run
  [38] java.util.concurrent.ThreadPoolExecutor.runWorker
  [39] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [40] java.lang.Thread.run

--- 40003638 ns (0.05%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 1] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 2] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.flush
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully
  [12] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 40003103 ns (0.05%), 1 sample
  [ 0] java.nio.Buffer.checkBounds
  [ 1] java.nio.DirectByteBuffer.put
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 5] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 40003093 ns (0.05%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 2] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.flush
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully
  [12] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 40002374 ns (0.05%), 1 sample
  [ 0] jdk.internal.misc.Unsafe.copyMemory
  [ 1] java.nio.DirectByteBuffer.put
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 5] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 40000492 ns (0.05%), 1 sample
  [ 0] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1$timeout$1.<init>
  [ 1] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.flush
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully
  [11] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 39999877 ns (0.05%), 1 sample
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.<init>
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.<init>
  [ 2] kotlin.coroutines.jvm.internal.SuspendLambda.<init>
  [ 3] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1$timeout$1.<init>
  [ 4] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 7] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 8] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 9] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [10] io.ktor.utils.io.ByteBufferChannel.flush
  [11] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.writeFully
  [14] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [24] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 39999848 ns (0.05%), 1 sample
  [ 0] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.flush
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully
  [10] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [20] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 39999206 ns (0.05%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForWrite$ktor_io
  [ 1] java.nio.Buffer.position
  [ 2] java.nio.ByteBuffer.position
  [ 3] java.nio.MappedByteBuffer.position
  [ 4] java.nio.DirectByteBuffer.put
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 6] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 8] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [18] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 30006155 ns (0.04%), 3 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] start_thread

--- 30005298 ns (0.04%), 2 samples
  [ 0] __vdso_gettimeofday
  [ 1] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 2] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.flush
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully
  [12] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 30005130 ns (0.04%), 1 sample
  [ 0] jshort_disjoint_arraycopy
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 4] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 30003719 ns (0.04%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 1] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 3] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 6] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 7] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 8] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.flush
  [10] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [12] io.ktor.utils.io.ByteBufferChannel.writeFully
  [13] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [17] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [21] kotlinx.coroutines.BuildersKt.runBlocking$default
  [22] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [24] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 30003389 ns (0.04%), 1 sample
  [ 0] kotlin.coroutines.ContinuationInterceptor$DefaultImpls.get
  [ 1] kotlinx.coroutines.CoroutineDispatcher.get
  [ 2] kotlin.coroutines.CombinedContext.get
  [ 3] io.ktor.utils.io.internal.CancellableReusableContinuation.parent
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
  [ 5] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 7] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [11] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [12] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [13] io.ktor.utils.io.ByteBufferChannel.flush
  [14] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [15] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [16] io.ktor.utils.io.ByteBufferChannel.writeFully
  [17] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [18] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [19] kotlinx.coroutines.DispatchedTask.run
  [20] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [21] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [23] kotlinx.coroutines.BuildersKt.runBlocking
  [24] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [25] kotlinx.coroutines.BuildersKt.runBlocking$default
  [26] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [27] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [28] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [29] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [30] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [31] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [32] java.lang.reflect.Method.invoke
  [33] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [34] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.Executors$RunnableAdapter.call
  [37] java.util.concurrent.FutureTask.run
  [38] java.util.concurrent.ThreadPoolExecutor.runWorker
  [39] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [40] java.lang.Thread.run

--- 30003313 ns (0.04%), 1 sample
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 1] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 4] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 7] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 8] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 9] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [10] io.ktor.utils.io.ByteBufferChannel.flush
  [11] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.writeFully
  [14] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [24] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 30002763 ns (0.04%), 1 sample
  [ 0] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.flush
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully
  [10] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [20] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 30001912 ns (0.04%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getClosed
  [ 1] io.ktor.utils.io.ByteBufferChannel.setupStateForWrite$ktor_io
  [ 2] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend

--- 30001388 ns (0.04%), 1 sample
  [ 0] jint_disjoint_arraycopy
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 4] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 30000985 ns (0.04%), 1 sample
  [ 0] io.ktor.network.selector.ActorSelectorManager.<init>
  [ 1] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [11] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 30000895 ns (0.04%), 1 sample
  [ 0] io.ktor.network.sockets.SocketOptions$TCPClientSocketOptions.getSocketTimeout
  [ 1] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.flush
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully
  [11] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 30000710 ns (0.04%), 1 sample
  [ 0] [vdso]
  [ 1] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 2] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.flush
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully
  [12] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 29999867 ns (0.04%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getReadByteOrder
  [ 1] io.ktor.utils.io.ByteBufferChannel.request
  [ 2] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.flush
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully
  [12] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 29999525 ns (0.04%), 1 sample
  [ 0] unsafe_arraycopy
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 4] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 29999438 ns (0.04%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 1] io.ktor.utils.io.ByteBufferChannel.flush
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 5] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 21090409 ns (0.03%), 1 sample
  [ 0] __recv
  [ 1] Java_java_net_SocketInputStream_socketRead0
  [ 2] java.net.SocketInputStream.socketRead0
  [ 3] java.net.SocketInputStream.socketRead
  [ 4] java.net.SocketInputStream.read
  [ 5] java.net.SocketInputStream.read
  [ 6] java.net.SocketInputStream.read
  [ 7] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 8] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 9] java.util.concurrent.Executors$RunnableAdapter.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 20757958 ns (0.03%), 2 samples
  [ 0] pthread_mutex_lock
  [ 1] Java_java_net_SocketInputStream_socketRead0
  [ 2] java.net.SocketInputStream.socketRead0
  [ 3] java.net.SocketInputStream.socketRead
  [ 4] java.net.SocketInputStream.read
  [ 5] java.net.SocketInputStream.read
  [ 6] java.net.SocketInputStream.read
  [ 7] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 8] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 9] java.util.concurrent.Executors$RunnableAdapter.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 20112758 ns (0.02%), 2 samples
  [ 0] java.util.concurrent.ConcurrentHashMap.size
  [ 1] java.util.concurrent.ConcurrentHashMap$CollectionView.size
  [ 2] java.util.Collections$UnmodifiableCollection.size
  [ 3] io.ktor.network.selector.SelectorManagerSupport.handleSelectedKeys
  [ 4] io.ktor.network.selector.ActorSelectorManager.process
  [ 5] io.ktor.network.selector.ActorSelectorManager.access$process
  [ 6] io.ktor.network.selector.ActorSelectorManager$process$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely
  [10] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask
  [11] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker
  [12] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run

--- 20096891 ns (0.02%), 1 sample
  [ 0] Interpreter
  [ 1] [unknown_Java]

--- 20009503 ns (0.02%), 2 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [12] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [13] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [14] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [15] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [16] start_thread

--- 20002264 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 1] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.flush
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully
  [11] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 20001348 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.carryIndex
  [ 1] io.ktor.utils.io.ByteBufferChannel.request
  [ 2] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.flush
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully
  [12] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 20001186 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.request
  [ 2] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.flush
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully
  [12] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 20000875 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.flush
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 7] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [17] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 20000783 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
  [ 1] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 3] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 6] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 7] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 8] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.flush
  [10] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [12] io.ktor.utils.io.ByteBufferChannel.writeFully
  [13] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [17] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [21] kotlinx.coroutines.BuildersKt.runBlocking$default
  [22] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [24] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 20000769 ns (0.02%), 1 sample
  [ 0] io.ktor.network.util.UtilsKt.createTimeout
  [ 1] io.ktor.network.util.UtilsKt.createTimeout$default
  [ 2] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 3] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invoke
  [ 4] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invoke
  [ 5] io.ktor.utils.io.ByteBufferChannel.lookAheadSuspend$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.lookAheadSuspend
  [ 7] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1.invokeSuspend
  [ 8] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1.invoke
  [ 9] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1.invoke
  [10] io.ktor.utils.io.CoroutinesKt$launchChannel$job$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.internal.DispatchedContinuationKt.resumeCancellableWith
  [13] kotlinx.coroutines.intrinsics.CancellableKt.startCoroutineCancellable
  [14] kotlinx.coroutines.BuildersKt__Builders_commonKt.startCoroutineImpl
  [15] kotlinx.coroutines.BuildersKt.startCoroutineImpl
  [16] kotlinx.coroutines.AbstractCoroutine.start
  [17] kotlinx.coroutines.BuildersKt__Builders_commonKt.launch
  [18] kotlinx.coroutines.BuildersKt.launch
  [19] kotlinx.coroutines.BuildersKt__Builders_commonKt.launch$default
  [20] kotlinx.coroutines.BuildersKt.launch$default
  [21] io.ktor.utils.io.CoroutinesKt.launchChannel
  [22] io.ktor.utils.io.CoroutinesKt.reader
  [23] io.ktor.network.sockets.CIOWriterKt.attachForWritingDirectImpl
  [24] io.ktor.network.sockets.NIOSocketImpl$attachForWriting$1.invoke
  [25] io.ktor.network.sockets.NIOSocketImpl$attachForWriting$1.invoke
  [26] io.ktor.network.sockets.NIOSocketImpl.attachFor
  [27] io.ktor.network.sockets.NIOSocketImpl.attachForWriting
  [28] io.ktor.network.sockets.SocketsKt.openWriteChannel
  [29] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [30] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [31] kotlinx.coroutines.DispatchedTask.run
  [32] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [33] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [34] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [35] kotlinx.coroutines.BuildersKt.runBlocking
  [36] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [37] kotlinx.coroutines.BuildersKt.runBlocking$default
  [38] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [39] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [40] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [41] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [42] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [43] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [44] java.lang.reflect.Method.invoke
  [45] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [46] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [47] java.util.concurrent.FutureTask.run
  [48] java.util.concurrent.Executors$RunnableAdapter.call
  [49] java.util.concurrent.FutureTask.run
  [50] java.util.concurrent.ThreadPoolExecutor.runWorker
  [51] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [52] java.lang.Thread.run

--- 20000733 ns (0.02%), 1 sample
  [ 0] java.nio.MappedByteBuffer.limit
  [ 1] io.ktor.utils.io.ByteBufferChannel.prepareBuffer
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 5] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 19999783 ns (0.02%), 1 sample
  [ 0] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.flush
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully
  [10] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [20] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 19999621 ns (0.02%), 1 sample
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.getContext
  [ 1] io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 4] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 7] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 8] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 9] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [10] io.ktor.utils.io.ByteBufferChannel.flush
  [11] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.writeFully
  [14] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [24] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 19999597 ns (0.02%), 1 sample
  [ 0] kotlin.Result.exceptionOrNull-impl
  [ 1] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 2] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 3] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.flush
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 6] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 8] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [18] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 19999580 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.flush
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 7] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [17] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 19998842 ns (0.02%), 2 samples
  [ 0] jbyte_disjoint_arraycopy
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 4] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 10490819 ns (0.01%), 1 sample
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] java.net.SocketInputStream.socketRead0
  [ 2] java.net.SocketInputStream.socketRead
  [ 3] java.net.SocketInputStream.read
  [ 4] java.net.SocketInputStream.read
  [ 5] java.net.SocketInputStream.read
  [ 6] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 7] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 8] java.util.concurrent.Executors$RunnableAdapter.call
  [ 9] java.util.concurrent.FutureTask.run
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

--- 10488193 ns (0.01%), 1 sample
  [ 0] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 1] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 2] java.util.concurrent.Executors$RunnableAdapter.call
  [ 3] java.util.concurrent.FutureTask.run
  [ 4] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 5] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 6] java.lang.Thread.run

--- 10063367 ns (0.01%), 1 sample
  [ 0] itable stub
  [ 1] kotlin.coroutines.CombinedContext.get
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely
  [ 4] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask
  [ 5] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker
  [ 6] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run

--- 10050255 ns (0.01%), 1 sample
  [ 0] I2C/C2I adapters
  [ 1] kotlinx.coroutines.DispatchedTaskKt.resume
  [ 2] kotlinx.coroutines.DispatchedTaskKt.resumeUnconfined
  [ 3] kotlinx.coroutines.DispatchedTaskKt.dispatch
  [ 4] kotlinx.coroutines.CancellableContinuationImpl.dispatchResume
  [ 5] kotlinx.coroutines.CancellableContinuationImpl.resumeImpl
  [ 6] kotlinx.coroutines.CancellableContinuationImpl.resumeImpl$default
  [ 7] kotlinx.coroutines.CancellableContinuationImpl.resumeWith
  [ 8] io.ktor.network.selector.SelectorManagerSupport.handleSelectedKey
  [ 9] io.ktor.network.selector.SelectorManagerSupport.handleSelectedKeys
  [10] io.ktor.network.selector.ActorSelectorManager.process
  [11] io.ktor.network.selector.ActorSelectorManager.access$process
  [12] io.ktor.network.selector.ActorSelectorManager$process$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely
  [16] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask
  [17] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker
  [18] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run

--- 10049994 ns (0.01%), 1 sample
  [ 0] kotlinx.coroutines.scheduling.CoroutineScheduler.signalCpuWork
  [ 1] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.beforeTask
  [ 2] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask
  [ 3] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker
  [ 4] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run

--- 10048585 ns (0.01%), 1 sample
  [ 0] sun.nio.ch.EPoll.allocatePollArray
  [ 1] sun.nio.ch.EPollSelectorImpl.<init>
  [ 2] sun.nio.ch.EPollSelectorProvider.openSelector
  [ 3] io.ktor.network.selector.ActorSelectorManager$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely
  [ 7] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask
  [ 8] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker
  [ 9] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run

--- 10008741 ns (0.01%), 1 sample
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [12] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [13] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [14] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [15] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [16] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [17] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [18] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [19] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [20] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [21] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [22] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [23] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [24] start_thread

--- 10005897 ns (0.01%), 1 sample
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [12] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [13] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [14] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [15] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [16] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [17] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [18] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [19] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [20] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [21] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [22] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [23] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [24] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [25] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [26] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [27] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [28] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [29] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [30] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [31] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [32] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [33] start_thread

--- 10005279 ns (0.01%), 1 sample
  [ 0] kotlinx.coroutines.AbstractCoroutine.<init>
  [ 1] kotlinx.coroutines.StandaloneCoroutine.<init>
  [ 2] kotlinx.coroutines.BuildersKt__Builders_commonKt.launch
  [ 3] kotlinx.coroutines.BuildersKt.launch
  [ 4] kotlinx.coroutines.BuildersKt__Builders_commonKt.launch$default
  [ 5] kotlinx.coroutines.BuildersKt.launch$default
  [ 6] io.ktor.utils.io.CoroutinesKt.launchChannel
  [ 7] io.ktor.utils.io.CoroutinesKt.reader
  [ 8] io.ktor.network.sockets.CIOWriterKt.attachForWritingDirectImpl
  [ 9] io.ktor.network.sockets.NIOSocketImpl$attachForWriting$1.invoke
  [10] io.ktor.network.sockets.NIOSocketImpl$attachForWriting$1.invoke
  [11] io.ktor.network.sockets.NIOSocketImpl.attachFor
  [12] io.ktor.network.sockets.NIOSocketImpl.attachForWriting
  [13] io.ktor.network.sockets.SocketsKt.openWriteChannel
  [14] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [24] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 10004378 ns (0.01%), 1 sample
  [ 0] __tls_get_addr
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [12] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [13] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [14] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [15] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [16] start_thread

--- 10002976 ns (0.01%), 1 sample
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [12] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [13] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [14] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [15] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [16] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [17] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [18] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [19] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [20] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [21] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [22] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [23] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [24] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [25] start_thread

--- 10002968 ns (0.01%), 1 sample
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [12] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [13] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [14] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [15] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [16] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [17] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [18] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [19] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [20] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [21] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [22] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [23] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [24] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [25] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [26] start_thread

--- 10002920 ns (0.01%), 1 sample
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] java.nio.channels.spi.AbstractSelectableChannel.addKey
  [ 4] java.nio.channels.spi.AbstractSelectableChannel.register
  [ 5] io.ktor.network.selector.SelectorManagerSupport.applyInterest
  [ 6] io.ktor.network.selector.ActorSelectorManager.process
  [ 7] io.ktor.network.selector.ActorSelectorManager.access$process
  [ 8] io.ktor.network.selector.ActorSelectorManager$process$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] io.ktor.network.selector.ActorSelectorManager$ContinuationHolder.resume
  [11] io.ktor.network.selector.ActorSelectorManager.publishInterest
  [12] io.ktor.network.selector.SelectorManagerSupport.select
  [13] io.ktor.network.sockets.SocketImpl.connect$ktor_network
  [14] io.ktor.network.sockets.ConnectUtilsJvmKt.connect
  [15] io.ktor.network.sockets.TcpSocketBuilder.connect
  [16] io.ktor.network.sockets.TcpSocketBuilder.connect
  [17] io.ktor.network.sockets.TcpSocketBuilder.connect$default
  [18] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [19] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [20] kotlinx.coroutines.DispatchedTask.run
  [21] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [22] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [23] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [24] kotlinx.coroutines.BuildersKt.runBlocking
  [25] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [26] kotlinx.coroutines.BuildersKt.runBlocking$default
  [27] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [28] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [29] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [30] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [31] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [32] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [33] java.lang.reflect.Method.invoke
  [34] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [35] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [36] java.util.concurrent.FutureTask.run
  [37] java.util.concurrent.Executors$RunnableAdapter.call
  [38] java.util.concurrent.FutureTask.run
  [39] java.util.concurrent.ThreadPoolExecutor.runWorker
  [40] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [41] java.lang.Thread.run

--- 10002446 ns (0.01%), 1 sample
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [12] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [13] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [14] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [15] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [16] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [17] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [18] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [19] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [20] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [21] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [22] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [23] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [24] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [25] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [26] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [27] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [28] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [29] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [30] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [31] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [32] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [33] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [34] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [35] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [36] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [37] start_thread

--- 10002284 ns (0.01%), 1 sample
  [ 0] I2C/C2I adapters
  [ 1] kotlinx.coroutines.internal.LockFreeLinkedListNode.tryCondAddNext
  [ 2] kotlinx.coroutines.JobSupport.addLastAtomic
  [ 3] kotlinx.coroutines.JobSupport.invokeOnCompletion
  [ 4] kotlinx.coroutines.Job$DefaultImpls.invokeOnCompletion$default
  [ 5] kotlinx.coroutines.CancellableContinuationImpl.installParentHandle
  [ 6] kotlinx.coroutines.CancellableContinuationImpl.initCancellability
  [ 7] io.ktor.network.selector.SelectorManagerSupport.select
  [ 8] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [11] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [12] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [13] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [14] io.ktor.utils.io.ByteBufferChannel.flush
  [15] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [16] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [17] io.ktor.utils.io.ByteBufferChannel.writeFully
  [18] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [19] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [20] kotlinx.coroutines.DispatchedTask.run
  [21] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [22] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [23] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [24] kotlinx.coroutines.BuildersKt.runBlocking
  [25] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [26] kotlinx.coroutines.BuildersKt.runBlocking$default
  [27] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [28] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [29] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [30] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [31] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [32] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [33] java.lang.reflect.Method.invoke
  [34] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [35] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [36] java.util.concurrent.FutureTask.run
  [37] java.util.concurrent.Executors$RunnableAdapter.call
  [38] java.util.concurrent.FutureTask.run
  [39] java.util.concurrent.ThreadPoolExecutor.runWorker
  [40] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [41] java.lang.Thread.run

--- 10001660 ns (0.01%), 1 sample
  [ 0] kotlin.jvm.internal.Intrinsics.checkNotNull
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.getContext
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.flush
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully
  [10] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [20] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 10001581 ns (0.01%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 3] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 7] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [11] kotlinx.coroutines.BuildersKt.runBlocking$default
  [12] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [13] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 10001291 ns (0.01%), 1 sample
  [ 0] io.ktor.network.sockets.NIOSocketImpl.getCoroutineContext
  [ 1] kotlinx.coroutines.CoroutineContextKt.newCoroutineContext
  [ 2] kotlinx.coroutines.BuildersKt__Builders_commonKt.launch
  [ 3] kotlinx.coroutines.BuildersKt.launch
  [ 4] kotlinx.coroutines.BuildersKt__Builders_commonKt.launch$default
  [ 5] kotlinx.coroutines.BuildersKt.launch$default
  [ 6] io.ktor.utils.io.CoroutinesKt.launchChannel
  [ 7] io.ktor.utils.io.CoroutinesKt.reader
  [ 8] io.ktor.network.sockets.CIOWriterKt.attachForWritingDirectImpl
  [ 9] io.ktor.network.sockets.NIOSocketImpl$attachForWriting$1.invoke
  [10] io.ktor.network.sockets.NIOSocketImpl$attachForWriting$1.invoke
  [11] io.ktor.network.sockets.NIOSocketImpl.attachFor
  [12] io.ktor.network.sockets.NIOSocketImpl.attachForWriting
  [13] io.ktor.network.sockets.SocketsKt.openWriteChannel
  [14] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [24] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 10000859 ns (0.01%), 1 sample
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] java.lang.IllegalStateException.<init>
  [10] java.util.concurrent.CancellationException.<init>
  [11] io.ktor.utils.io.ClosedWriteChannelException.<init>
  [12] io.ktor.utils.io.ByteBufferChannel.close
  [13] io.ktor.utils.io.ByteWriteChannelKt.close
  [14] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [24] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 10000830 ns (0.01%), 1 sample
  [ 0] kotlinx.coroutines.internal.ThreadContextKt$countAll$1.invoke
  [ 1] kotlin.coroutines.AbstractCoroutineContextElement.fold
  [ 2] kotlin.coroutines.CombinedContext.fold
  [ 3] kotlin.coroutines.CombinedContext.fold
  [ 4] kotlinx.coroutines.internal.ThreadContextKt.threadContextElements
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 6] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 7] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 8] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 9] kotlinx.coroutines.YieldKt.yield
  [10] io.ktor.network.selector.ActorSelectorManager.select
  [11] io.ktor.network.selector.ActorSelectorManager.process
  [12] io.ktor.network.selector.ActorSelectorManager.access$process
  [13] io.ktor.network.selector.ActorSelectorManager$process$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] io.ktor.network.selector.ActorSelectorManager$ContinuationHolder.resume
  [16] io.ktor.network.selector.ActorSelectorManager.publishInterest
  [17] io.ktor.network.selector.SelectorManagerSupport.select
  [18] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [19] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [20] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [21] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [22] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [23] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [24] io.ktor.utils.io.ByteBufferChannel.flush
  [25] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [26] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [27] io.ktor.utils.io.ByteBufferChannel.writeFully
  [28] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [29] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [30] kotlinx.coroutines.DispatchedTask.run
  [31] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [32] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [33] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [34] kotlinx.coroutines.BuildersKt.runBlocking
  [35] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [36] kotlinx.coroutines.BuildersKt.runBlocking$default
  [37] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [38] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [39] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [40] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [41] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [42] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [43] java.lang.reflect.Method.invoke
  [44] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [45] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [46] java.util.concurrent.FutureTask.run
  [47] java.util.concurrent.Executors$RunnableAdapter.call
  [48] java.util.concurrent.FutureTask.run
  [49] java.util.concurrent.ThreadPoolExecutor.runWorker
  [50] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [51] java.lang.Thread.run

--- 10000770 ns (0.01%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForWrite$ktor_io
  [ 1] java.nio.ByteBuffer.put
  [ 2] java.nio.DirectByteBuffer.put
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 6] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 10000575 ns (0.01%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getReadOp
  [ 1] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 4] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 7] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 8] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 9] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [10] io.ktor.utils.io.ByteBufferChannel.flush
  [11] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.writeFully
  [14] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [24] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 10000184 ns (0.01%), 1 sample
  [ 0] java.lang.Number.<init>
  [ 1] java.util.concurrent.atomic.AtomicLong.<init>
  [ 2] io.ktor.network.selector.ActorSelectorManager.<init>
  [ 3] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 7] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [11] kotlinx.coroutines.BuildersKt.runBlocking$default
  [12] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [13] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 9999794 ns (0.01%), 1 sample
  [ 0] gettimeofday@plt
  [ 1] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 2] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.flush
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully
  [12] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 9999707 ns (0.01%), 1 sample
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 1] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 2] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 3] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.flush
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 6] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 8] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [18] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 9999421 ns (0.01%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$getState
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 4] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 7] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 8] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 9] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [10] io.ktor.utils.io.ByteBufferChannel.flush
  [11] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.writeFully
  [14] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [24] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 9998997 ns (0.01%), 1 sample
  [ 0] java.nio.Buffer.remaining
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 4] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 9998409 ns (0.01%), 1 sample
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] start_thread

--- 9997579 ns (0.01%), 1 sample
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 2] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 3] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.flush
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 6] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 8] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [18] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 9997303 ns (0.01%), 1 sample
  [ 0] io.ktor.utils.io.internal.ReadWriteBufferState$ReadingWriting.getReadBuffer
  [ 1] io.ktor.utils.io.ByteBufferChannel.request
  [ 2] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.flush
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully
  [12] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWriteWithoutAutoFlush
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWriteWithoutAutoFlush_jmhTest.testKtorSocketWriteWithoutAutoFlush_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

          ns  percent  samples  top
  ----------  -------  -------  ---
 21461025932   26.66%      365  write
 14702568574   18.27%      647  __recv
  8545322581   10.62%      378  /usr/lib/x86_64-linux-gnu/libc-2.33.so
  5570181692    6.92%       91  jlong_disjoint_arraycopy
  3670155475    4.56%       52  io.ktor.utils.io.internal.RingBufferCapacity.tryWriteAtMost
  3365440654    4.18%      167  /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  1990080133    2.47%       42  io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  1780089178    2.21%       21  io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  1626223908    2.02%       66  __GI___pthread_mutex_lock
  1260063953    1.57%       20  io.ktor.utils.io.ByteBufferChannel.request
  1130032775    1.40%       24  io.ktor.utils.io.ByteBufferChannel.setupStateForWrite$ktor_io
  1019047844    1.27%       46  __GI___pthread_mutex_unlock
   830050711    1.03%       20  [vdso]
   820054836    1.02%       15  io.ktor.utils.io.ByteBufferChannel.getState
   740024359    0.92%        9  io.ktor.utils.io.ByteBufferChannel.prepareBuffer
   720032951    0.89%        8  java.nio.DirectByteBuffer.put
   640063808    0.80%       11  io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
   590031133    0.73%        6  io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
   560032859    0.70%       11  sun.nio.ch.FileDispatcherImpl.write0
   481756889    0.60%       20  io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
   480022531    0.60%        7  kotlin.coroutines.jvm.internal.ContinuationImpl.getContext
   445207448    0.55%       23  Java_java_net_SocketInputStream_socketRead0
   414102579    0.51%       18  java.net.SocketInputStream.socketRead0
   390014152    0.48%        7  io.ktor.utils.io.ByteBufferChannel.suspensionForSize
   380016344    0.47%       10  jshort_disjoint_arraycopy
   380012045    0.47%        7  io.ktor.utils.io.ByteBufferChannel.resumeReadOp
   377209554    0.47%       22  /usr/lib/jvm/java-11-openjdk-amd64/lib/libnet.so
   340013927    0.42%        5  kotlin.Result.exceptionOrNull-impl
   320010588    0.40%        9  io.ktor.utils.io.ByteBufferChannel.getClosed
   290022301    0.36%        4  java.nio.Buffer.hasRemaining
   280012362    0.35%        1  java.lang.ref.Reference.reachabilityFence
   260012602    0.32%        6  kotlin.coroutines.jvm.internal.ContinuationImpl.<init>
   250010778    0.31%        2  kotlinx.coroutines.CoroutineDispatcher.get
   240004336    0.30%        3  java.nio.Buffer.position
   220006411    0.27%        2  kotlinx.coroutines.JobSupport.get
   212939215    0.26%        2  pthread_mutex_unlock
   210012631    0.26%        6  kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
   210008899    0.26%        3  java.nio.Buffer.checkBounds
   170004212    0.21%        1  io.ktor.utils.io.ByteBufferChannel.getWriteOp
   164569476    0.20%        5  java.net.AbstractPlainSocketImpl.releaseFD
   160003782    0.20%        2  io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
   150008957    0.19%        2  io.ktor.network.sockets.SocketOptions$TCPClientSocketOptions.getSocketTimeout
   140002952    0.17%        1  sun.nio.ch.SocketChannelImpl.connect
   130005686    0.16%        2  io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
   130005031    0.16%        1  java.nio.ByteBuffer.order
   130004351    0.16%        1  io.ktor.network.selector.SelectorManagerSupport.<init>
   124406321    0.15%        6  java.net.SocketInputStream.read
   120015732    0.15%        1  io.ktor.utils.io.ChannelScope.<init>
   110027615    0.14%        4  Java_sun_nio_ch_FileDispatcherImpl_write0
   110010491    0.14%        2  java.nio.Buffer.limit
   110005496    0.14%        1  java.util.concurrent.atomic.AtomicReference.<init>
    90004972    0.11%        2  jdk.internal.misc.Unsafe.copyMemoryChecks
    80015284    0.10%        1  getsockopt
    80007031    0.10%        1  java.nio.ByteBuffer.put
    80005774    0.10%        1  jlong_arraycopy
    80001879    0.10%        1  kotlinx.coroutines.JobSupport.makeCompleting$kotlinx_coroutines_core
    79999359    0.10%        4  jbyte_disjoint_arraycopy
    70001992    0.09%        1  kotlin.coroutines.CoroutineContext$Element$DefaultImpls.get
    60008283    0.07%        1  java.lang.invoke.VarHandleGuards.guard_LL_L
    60003484    0.07%        1  io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWriteWithoutAutoFlush$1.invokeSuspend
    60001718    0.07%        1  java.lang.Class.getComponentType
    51492844    0.06%        2  pthread_self
    50004231    0.06%        1  kotlinx.coroutines.internal.DispatchedContinuation.dispatchYield$kotlinx_coroutines_core
    40007061    0.05%        1  java.lang.Thread.interrupted
    40004436    0.05%        1  kotlinx.coroutines.JobSupport.startInternal
    40002374    0.05%        1  jdk.internal.misc.Unsafe.copyMemory
    40000492    0.05%        1  io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1$timeout$1.<init>
    30005298    0.04%        2  __vdso_gettimeofday
    30003389    0.04%        1  kotlin.coroutines.ContinuationInterceptor$DefaultImpls.get
    30001388    0.04%        1  jint_disjoint_arraycopy
    30000985    0.04%        1  io.ktor.network.selector.ActorSelectorManager.<init>
    29999867    0.04%        2  io.ktor.utils.io.ByteBufferChannel.getReadByteOrder
    29999525    0.04%        1  unsafe_arraycopy
    29999438    0.04%        2  io.ktor.utils.io.ByteBufferChannel.flushImpl
    20757958    0.03%        2  pthread_mutex_lock
    20112758    0.02%        2  java.util.concurrent.ConcurrentHashMap.size
    20096891    0.02%        1  Interpreter
    20052539    0.02%        2  I2C/C2I adapters
    20001348    0.02%        1  io.ktor.utils.io.ByteBufferChannel.carryIndex
    20000783    0.02%        1  io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
    20000769    0.02%        1  io.ktor.network.util.UtilsKt.createTimeout
    20000733    0.02%        1  java.nio.MappedByteBuffer.limit
    19999621    0.02%        1  kotlinx.coroutines.internal.DispatchedContinuation.getContext
    10063367    0.01%        1  itable stub
    10049994    0.01%        1  kotlinx.coroutines.scheduling.CoroutineScheduler.signalCpuWork
    10048585    0.01%        1  sun.nio.ch.EPoll.allocatePollArray
    10005279    0.01%        1  kotlinx.coroutines.AbstractCoroutine.<init>
    10004378    0.01%        1  __tls_get_addr
    10001660    0.01%        1  kotlin.jvm.internal.Intrinsics.checkNotNull
    10001291    0.01%        1  io.ktor.network.sockets.NIOSocketImpl.getCoroutineContext
    10000830    0.01%        1  kotlinx.coroutines.internal.ThreadContextKt$countAll$1.invoke
    10000575    0.01%        1  io.ktor.utils.io.ByteBufferChannel.getReadOp
    10000184    0.01%        1  java.lang.Number.<init>
     9999794    0.01%        1  gettimeofday@plt
     9999707    0.01%        1  kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
     9998997    0.01%        1  java.nio.Buffer.remaining
     9997579    0.01%        1  java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
     9997303    0.01%        1  io.ktor.utils.io.internal.ReadWriteBufferState$ReadingWriting.getReadBuffer

