--- Execution profile ---
Total samples       : 4564
unknown_Java        : 3 (0.07%)

--- 35510000000 ns (77.80%), 3551 samples
  [ 0] read
  [ 1] sun.nio.ch.FileDispatcherImpl.read0
  [ 2] sun.nio.ch.FileDispatcherImpl.read
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [11] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [12] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [15] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 1450000000 ns (3.18%), 145 samples
  [ 0] kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
  [ 1] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 2] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 3] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 1020000000 ns (2.23%), 102 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 4] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [14] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 780000000 ns (1.71%), 78 samples
  [ 0] Java_sun_nio_ch_FileDispatcherImpl_read0
  [ 1] sun.nio.ch.FileDispatcherImpl.read0
  [ 2] sun.nio.ch.FileDispatcherImpl.read
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [11] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [12] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [15] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 630000000 ns (1.38%), 63 samples
  [ 0] sun.nio.ch.FileDispatcherImpl.read0
  [ 1] sun.nio.ch.FileDispatcherImpl.read
  [ 2] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.FileChannelImpl.read
  [ 5] io.ktor.util.BufferViewJvmKt.read
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [10] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [11] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [14] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 360000000 ns (0.79%), 36 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 3] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 7] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [11] kotlinx.coroutines.BuildersKt.runBlocking$default
  [12] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [14] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 270000000 ns (0.59%), 27 samples
  [ 0] java.nio.channels.spi.AbstractInterruptibleChannel.begin
  [ 1] sun.nio.ch.FileChannelImpl.beginBlocking
  [ 2] sun.nio.ch.FileChannelImpl.read
  [ 3] io.ktor.util.BufferViewJvmKt.read
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 7] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 8] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [12] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 250000000 ns (0.55%), 25 samples
  [ 0] sun.nio.ch.NativeThread.current
  [ 1] sun.nio.ch.NativeThreadSet.add
  [ 2] sun.nio.ch.FileChannelImpl.read
  [ 3] io.ktor.util.BufferViewJvmKt.read
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 7] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 8] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [12] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 230000000 ns (0.50%), 23 samples
  [ 0] java.lang.Thread.blockedOn
  [ 1] java.lang.System$2.blockedOn
  [ 2] java.nio.channels.spi.AbstractInterruptibleChannel.blockedOn
  [ 3] java.nio.channels.spi.AbstractInterruptibleChannel.begin
  [ 4] sun.nio.ch.FileChannelImpl.beginBlocking
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [11] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [12] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [15] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 190000000 ns (0.42%), 19 samples
  [ 0] java.nio.channels.spi.AbstractInterruptibleChannel.isOpen
  [ 1] sun.nio.ch.FileChannelImpl.read
  [ 2] io.ktor.util.BufferViewJvmKt.read
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [11] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 190000000 ns (0.42%), 19 samples
  [ 0] convertReturnVal
  [ 1] sun.nio.ch.FileDispatcherImpl.read0
  [ 2] sun.nio.ch.FileDispatcherImpl.read
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [11] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [12] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [15] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 190000000 ns (0.42%), 19 samples
  [ 0] sun.nio.ch.NativeThreadSet.remove
  [ 1] sun.nio.ch.FileChannelImpl.read
  [ 2] io.ktor.util.BufferViewJvmKt.read
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [11] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 180000000 ns (0.39%), 18 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 1] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 170000000 ns (0.37%), 17 samples
  [ 0] java.lang.Thread.isInterrupted
  [ 1] java.nio.channels.spi.AbstractInterruptibleChannel.begin
  [ 2] sun.nio.ch.FileChannelImpl.beginBlocking
  [ 3] sun.nio.ch.FileChannelImpl.read
  [ 4] io.ktor.util.BufferViewJvmKt.read
  [ 5] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 9] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [10] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [13] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [17] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [21] kotlinx.coroutines.BuildersKt.runBlocking$default
  [22] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 170000000 ns (0.37%), 17 samples
  [ 0] sun.nio.ch.NativeThreadSet.add
  [ 1] sun.nio.ch.FileChannelImpl.read
  [ 2] io.ktor.util.BufferViewJvmKt.read
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [11] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 160000000 ns (0.35%), 16 samples
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.getContext
  [ 1] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 2] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 3] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 160000000 ns (0.35%), 16 samples
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 140000000 ns (0.31%), 14 samples
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.flush
  [ 1] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.access$flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 5] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 6] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [11] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [12] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [15] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 140000000 ns (0.31%), 14 samples
  [ 0] sun.nio.ch.FileChannelImpl.read
  [ 1] io.ktor.util.BufferViewJvmKt.read
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [10] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 120000000 ns (0.26%), 12 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 2] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 3] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 4] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 5] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 9] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [10] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [13] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [17] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [21] kotlinx.coroutines.BuildersKt.runBlocking$default
  [22] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 110000000 ns (0.24%), 11 samples
  [ 0] sun.nio.ch.NativeThreadSet.remove
  [ 1] sun.nio.ch.FileChannelImpl.read
  [ 2] io.ktor.util.BufferViewJvmKt.read
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [11] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 110000000 ns (0.24%), 11 samples
  [ 0] java.nio.ByteBuffer.position
  [ 1] java.nio.MappedByteBuffer.position
  [ 2] java.nio.MappedByteBuffer.position
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 100000000 ns (0.22%), 10 samples
  [ 0] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 1] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 2] java.nio.ByteBuffer.putBuffer
  [ 3] java.nio.ByteBuffer.put
  [ 4] java.nio.HeapByteBuffer.put
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 90000000 ns (0.20%), 9 samples
  [ 0] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 1] sun.nio.ch.IOUtil.read
  [ 2] sun.nio.ch.FileChannelImpl.read
  [ 3] io.ktor.util.BufferViewJvmKt.read
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 7] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 8] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [12] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 90000000 ns (0.20%), 9 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 90000000 ns (0.20%), 9 samples
  [ 0] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 4] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 80000000 ns (0.18%), 8 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.getAndSet
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.access$flushImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 5] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 6] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 7] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 8] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [11] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [12] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [13] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [14] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [15] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [16] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [17] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [18] kotlinx.coroutines.DispatchedTask.run
  [19] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [20] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt.runBlocking
  [23] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [24] kotlinx.coroutines.BuildersKt.runBlocking$default
  [25] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [26] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [27] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [29] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [30] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [31] java.lang.reflect.Method.invoke
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.Executors$RunnableAdapter.call
  [36] java.util.concurrent.FutureTask.run
  [37] java.util.concurrent.ThreadPoolExecutor.runWorker
  [38] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [39] java.lang.Thread.run

--- 70000000 ns (0.15%), 7 samples
  [ 0] java.lang.Thread.blockedOn
  [ 1] java.lang.System$2.blockedOn
  [ 2] java.nio.channels.spi.AbstractInterruptibleChannel.blockedOn
  [ 3] java.nio.channels.spi.AbstractInterruptibleChannel.end
  [ 4] sun.nio.ch.FileChannelImpl.endBlocking
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [11] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [12] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [15] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 70000000 ns (0.15%), 7 samples
  [ 0] java.nio.channels.spi.AbstractInterruptibleChannel.end
  [ 1] sun.nio.ch.FileChannelImpl.endBlocking
  [ 2] sun.nio.ch.FileChannelImpl.read
  [ 3] io.ktor.util.BufferViewJvmKt.read
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 7] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 8] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [12] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 60000000 ns (0.13%), 6 samples
  [ 0] java.lang.Thread.blockedOn
  [ 1] java.lang.System$2.blockedOn
  [ 2] java.nio.channels.spi.AbstractInterruptibleChannel.blockedOn
  [ 3] java.nio.channels.spi.AbstractInterruptibleChannel.begin
  [ 4] sun.nio.ch.FileChannelImpl.beginBlocking
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [11] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [12] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [15] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 60000000 ns (0.13%), 6 samples
  [ 0] java.nio.channels.spi.AbstractInterruptibleChannel.isOpen
  [ 1] sun.nio.ch.FileChannelImpl.ensureOpen
  [ 2] sun.nio.ch.FileChannelImpl.read
  [ 3] io.ktor.util.BufferViewJvmKt.read
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 7] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 8] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [12] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 50000000 ns (0.11%), 5 samples
  [ 0] __open
  [ 1] handleOpen
  [ 2] fileOpen
  [ 3] java.io.RandomAccessFile.open0
  [ 4] java.io.RandomAccessFile.open
  [ 5] java.io.RandomAccessFile.<init>
  [ 6] java.io.RandomAccessFile.<init>
  [ 7] io.ktor.util.cio.FileChannelsKt.readChannel
  [ 8] io.ktor.util.cio.FileChannelsKt.readChannel$default
  [ 9] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [13] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [17] kotlinx.coroutines.BuildersKt.runBlocking$default
  [18] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 50000000 ns (0.11%), 5 samples
  [ 0] internal_catch_exc_subsystem
  [ 1] sun.nio.ch.NativeThread.current
  [ 2] sun.nio.ch.NativeThreadSet.add
  [ 3] sun.nio.ch.FileChannelImpl.read
  [ 4] io.ktor.util.BufferViewJvmKt.read
  [ 5] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 9] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [10] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [13] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [17] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [21] kotlinx.coroutines.BuildersKt.runBlocking$default
  [22] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 50000000 ns (0.11%), 5 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.isClosedForRead
  [ 1] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] java.nio.ByteBuffer.put
  [ 1] java.nio.HeapByteBuffer.put
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] java.lang.Thread.blockedOn
  [ 1] java.lang.System$2.blockedOn
  [ 2] java.nio.channels.spi.AbstractInterruptibleChannel.blockedOn
  [ 3] java.nio.channels.spi.AbstractInterruptibleChannel.end
  [ 4] sun.nio.ch.FileChannelImpl.endBlocking
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [11] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [12] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [15] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] java.lang.Thread.blockedOn
  [ 1] java.lang.System$2.blockedOn
  [ 2] java.nio.channels.spi.AbstractInterruptibleChannel.blockedOn
  [ 3] java.nio.channels.spi.AbstractInterruptibleChannel.begin
  [ 4] sun.nio.ch.FileChannelImpl.beginBlocking
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [11] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [12] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [15] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 5] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [10] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [11] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [14] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] java.nio.channels.spi.AbstractInterruptibleChannel.begin
  [ 1] sun.nio.ch.FileChannelImpl.beginBlocking
  [ 2] sun.nio.ch.FileChannelImpl.read
  [ 3] io.ktor.util.BufferViewJvmKt.read
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 7] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 8] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [12] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] fdval
  [ 1] sun.nio.ch.FileDispatcherImpl.read0
  [ 2] sun.nio.ch.FileDispatcherImpl.read
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [11] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [12] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [15] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 1] kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 4] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] semaphore_wait_trap
  [ 1] GangWorker::loop()
  [ 2] Thread::call_run()
  [ 3] thread_native_entry(Thread*)
  [ 4] __os_ch_md_redzone_cookie
  [ 5] internal_catch_exc_subsystem

--- 30000000 ns (0.07%), 3 samples
  [ 0] java.nio.Buffer.limit
  [ 1] java.nio.ByteBuffer.position
  [ 2] java.nio.MappedByteBuffer.position
  [ 3] java.nio.MappedByteBuffer.position
  [ 4] java.nio.Buffer.<init>
  [ 5] java.nio.ByteBuffer.<init>
  [ 6] java.nio.ByteBuffer.<init>
  [ 7] java.nio.MappedByteBuffer.<init>
  [ 8] java.nio.DirectByteBuffer.<init>
  [ 9] java.nio.DirectByteBuffer.duplicate
  [10] io.ktor.util.BufferViewJvmKt.read
  [11] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [14] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [15] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [16] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [17] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [18] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [19] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [20] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [21] kotlinx.coroutines.DispatchedTask.run
  [22] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [23] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [24] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [25] kotlinx.coroutines.BuildersKt.runBlocking
  [26] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [27] kotlinx.coroutines.BuildersKt.runBlocking$default
  [28] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [29] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [30] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [31] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [32] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [33] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [34] java.lang.reflect.Method.invoke
  [35] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [36] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [37] java.util.concurrent.FutureTask.run
  [38] java.util.concurrent.Executors$RunnableAdapter.call
  [39] java.util.concurrent.FutureTask.run
  [40] java.util.concurrent.ThreadPoolExecutor.runWorker
  [41] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [42] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] sun.nio.ch.NativeThread.current
  [ 1] sun.nio.ch.NativeThreadSet.add
  [ 2] sun.nio.ch.FileChannelImpl.read
  [ 3] io.ktor.util.BufferViewJvmKt.read
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 7] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 8] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [12] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] Interpreter
  [ 1] [unknown_Java]

--- 30000000 ns (0.07%), 3 samples
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] Java_sun_nio_ch_NativeThread_current
  [ 1] sun.nio.ch.NativeThread.current
  [ 2] sun.nio.ch.NativeThreadSet.add
  [ 3] sun.nio.ch.FileChannelImpl.read
  [ 4] io.ktor.util.BufferViewJvmKt.read
  [ 5] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 9] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [10] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [13] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [17] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [21] kotlinx.coroutines.BuildersKt.runBlocking$default
  [22] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] __psynch_cvwait
  [ 1] os::PlatformMonitor::wait(long)
  [ 2] Monitor::wait_without_safepoint_check(long long)
  [ 3] WatcherThread::sleep() const
  [ 4] WatcherThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] __os_ch_md_redzone_cookie
  [ 8] internal_catch_exc_subsystem

--- 20000000 ns (0.04%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getClosed
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeSuspendPredicate
  [ 2] io.ktor.utils.io.ByteBufferChannel.access$writeSuspendPredicate
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 5] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 6] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [11] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [12] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [15] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.nio.Buffer.position
  [ 1] kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 4] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.lang.Integer.intValue
  [ 1] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] kotlinx.coroutines.ThreadLocalEventLoop.getEventLoop$kotlinx_coroutines_core
  [ 1] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 2] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 3] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.lang.Class.getComponentType
  [ 1] jdk.internal.misc.Unsafe.checkPrimitiveArray
  [ 2] jdk.internal.misc.Unsafe.checkPrimitivePointer
  [ 3] jdk.internal.misc.Unsafe.copyMemoryChecks
  [ 4] jdk.internal.misc.Unsafe.copyMemory
  [ 5] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 6] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 7] java.nio.ByteBuffer.putBuffer
  [ 8] java.nio.ByteBuffer.put
  [ 9] java.nio.HeapByteBuffer.put
  [10] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [13] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [17] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [21] kotlinx.coroutines.BuildersKt.runBlocking$default
  [22] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] sun.nio.ch.NativeThread.current
  [ 1] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 2] io.ktor.util.BufferViewJvmKt.read
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [11] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.shouldResumeReadOp
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$shouldResumeReadOp
  [ 2] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 5] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [10] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [11] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [14] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
  [ 1] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 2] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 3] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.nio.Buffer.limit
  [ 1] java.nio.ByteBuffer.limit
  [ 2] java.nio.MappedByteBuffer.limit
  [ 3] java.nio.MappedByteBuffer.limit
  [ 4] io.ktor.utils.io.ByteBufferChannel.prepareBuffer
  [ 5] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [10] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 5] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [10] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [11] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [14] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 1] sun.nio.ch.IOUtil.read
  [ 2] sun.nio.ch.FileChannelImpl.read
  [ 3] io.ktor.util.BufferViewJvmKt.read
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 7] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 8] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [12] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.access$getWriteSuspensionSize$p
  [ 1] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 2] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 3] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 4] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 5] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 9] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [10] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [13] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [17] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [21] kotlinx.coroutines.BuildersKt.runBlocking$default
  [22] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] sun.nio.ch.FileChannelImpl.read
  [ 1] kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 4] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 1] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 2] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 3] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 7] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 8] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [12] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.access$flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 5] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 6] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [11] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [12] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [15] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] unsafe_arraycopy
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 4] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [14] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 1] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 9] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [13] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [17] kotlinx.coroutines.BuildersKt.runBlocking$default
  [18] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] semaphore_wait_trap
  [ 1] GangWorker::loop()
  [ 2] Thread::call_run()
  [ 3] thread_native_entry(Thread*)
  [ 4] __os_ch_md_redzone_cookie
  [ 5] internal_catch_exc_subsystem

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.nio.Buffer.scope
  [ 1] java.nio.ByteBuffer.putBuffer
  [ 2] java.nio.ByteBuffer.put
  [ 3] java.nio.HeapByteBuffer.put
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.nio.channels.spi.AbstractInterruptibleChannel.isOpen
  [ 1] sun.nio.ch.FileChannelImpl.read
  [ 2] io.ktor.util.BufferViewJvmKt.read
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [11] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] JNI_OnLoad
  [ 1] sun.nio.ch.FileDispatcherImpl.read0
  [ 2] sun.nio.ch.FileDispatcherImpl.read
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [11] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [12] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [15] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] sun.nio.ch.FileDispatcherImpl.read
  [ 1] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 2] sun.nio.ch.IOUtil.read
  [ 3] sun.nio.ch.FileChannelImpl.read
  [ 4] io.ktor.util.BufferViewJvmKt.read
  [ 5] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 9] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [10] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [13] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [17] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [21] kotlinx.coroutines.BuildersKt.runBlocking$default
  [22] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.getContext
  [ 1] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 2] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 3] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 1] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 2] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 3] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.writeSuspendPredicate
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$writeSuspendPredicate
  [ 2] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 5] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [10] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [11] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [14] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 1] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 2] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 5] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [10] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [11] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [14] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] sun.nio.ch.NativeThreadSet.add
  [ 1] sun.nio.ch.FileChannelImpl.read
  [ 2] io.ktor.util.BufferViewJvmKt.read
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [11] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 1] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.nio.ByteBuffer.put
  [ 1] java.nio.HeapByteBuffer.put
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] ExceptionHandlerTable::ExceptionHandlerTable(int)
  [ 1] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 2] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 3] CompileBroker::compiler_thread_loop()
  [ 4] JavaThread::thread_main_inner()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] __os_ch_md_redzone_cookie
  [ 8] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.setTotalBytesRead$ktor_io
  [ 1] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.nio.Buffer.position
  [ 1] java.nio.ByteBuffer.position
  [ 2] java.nio.MappedByteBuffer.position
  [ 3] java.nio.MappedByteBuffer.position
  [ 4] java.nio.Buffer.<init>
  [ 5] java.nio.ByteBuffer.<init>
  [ 6] java.nio.ByteBuffer.<init>
  [ 7] java.nio.MappedByteBuffer.<init>
  [ 8] java.nio.DirectByteBuffer.<init>
  [ 9] java.nio.DirectByteBuffer.duplicate
  [10] io.ktor.util.BufferViewJvmKt.read
  [11] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [14] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [15] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [16] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [17] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [18] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [19] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [20] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [21] kotlinx.coroutines.DispatchedTask.run
  [22] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [23] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [24] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [25] kotlinx.coroutines.BuildersKt.runBlocking
  [26] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [27] kotlinx.coroutines.BuildersKt.runBlocking$default
  [28] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [29] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [30] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [31] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [32] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [33] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [34] java.lang.reflect.Method.invoke
  [35] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [36] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [37] java.util.concurrent.FutureTask.run
  [38] java.util.concurrent.Executors$RunnableAdapter.call
  [39] java.util.concurrent.FutureTask.run
  [40] java.util.concurrent.ThreadPoolExecutor.runWorker
  [41] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [42] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getClosed
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeSuspendPredicate
  [ 2] io.ktor.utils.io.ByteBufferChannel.access$writeSuspendPredicate
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 5] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 6] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [11] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [12] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [15] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] mach_msg_trap
  [ 1] host_statistics64
  [ 2] os::available_memory()
  [ 3] CompileBroker::possibly_add_compiler_threads(Thread*)
  [ 4] CompileBroker::compiler_thread_loop()
  [ 5] JavaThread::thread_main_inner()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] __os_ch_md_redzone_cookie
  [ 9] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] G1Allocator::unsafe_max_tlab_alloc()
  [ 1] MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&) const
  [ 2] MemAllocator::allocate() const
  [ 3] InstanceKlass::allocate_instance(Thread*)
  [ 4] OptoRuntime::new_instance_C(Klass*, JavaThread*)
  [ 5] java.nio.DirectByteBuffer.duplicate
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [11] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [12] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [15] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getClosed
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeSuspendPredicate
  [ 2] io.ktor.utils.io.ByteBufferChannel.access$writeSuspendPredicate
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 5] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 6] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [11] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [12] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [15] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] semaphore_wait_trap
  [ 1] GangWorker::loop()
  [ 2] Thread::call_run()
  [ 3] thread_native_entry(Thread*)
  [ 4] __os_ch_md_redzone_cookie
  [ 5] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.nio.Buffer.position
  [ 1] java.nio.ByteBuffer.position
  [ 2] java.nio.MappedByteBuffer.position
  [ 3] java.nio.MappedByteBuffer.position
  [ 4] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 5] sun.nio.ch.IOUtil.read
  [ 6] sun.nio.ch.FileChannelImpl.read
  [ 7] io.ktor.util.BufferViewJvmKt.read
  [ 8] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [11] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [12] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [13] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [14] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [15] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [16] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [17] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [18] kotlinx.coroutines.DispatchedTask.run
  [19] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [20] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt.runBlocking
  [23] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [24] kotlinx.coroutines.BuildersKt.runBlocking$default
  [25] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [26] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [27] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [29] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [30] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [31] java.lang.reflect.Method.invoke
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.Executors$RunnableAdapter.call
  [36] java.util.concurrent.FutureTask.run
  [37] java.util.concurrent.ThreadPoolExecutor.runWorker
  [38] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [39] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] write
  [ 1] sun.nio.ch.FileDispatcherImpl.write0
  [ 2] sun.nio.ch.SocketDispatcher.write
  [ 3] sun.nio.ch.NioSocketImpl.tryWrite
  [ 4] sun.nio.ch.NioSocketImpl.implWrite
  [ 5] sun.nio.ch.NioSocketImpl.write
  [ 6] sun.nio.ch.NioSocketImpl$2.write
  [ 7] java.net.Socket$SocketOutputStream.write
  [ 8] java.io.BufferedOutputStream.flushBuffer
  [ 9] java.io.BufferedOutputStream.flush
  [10] java.io.ObjectOutputStream$BlockDataOutputStream.flush
  [11] java.io.ObjectOutputStream.flush
  [12] org.openjdk.jmh.runner.link.BinaryLinkClient.pushFrame
  [13] org.openjdk.jmh.runner.link.BinaryLinkClient.pushResults
  [14] org.openjdk.jmh.runner.ForkedRunner$1.accept
  [15] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [16] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [17] org.openjdk.jmh.runner.BaseRunner.doSingle
  [18] org.openjdk.jmh.runner.BaseRunner.runBenchmarksForked
  [19] org.openjdk.jmh.runner.ForkedRunner.run
  [20] org.openjdk.jmh.runner.ForkedMain.main

--- 10000000 ns (0.02%), 1 sample
  [ 0] sun.nio.ch.FileChannelImpl.read
  [ 1] io.ktor.util.BufferViewJvmKt.read
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [10] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<598116ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 598116ull>::oop_access_barrier(void*)
  [ 1] CompileBroker::create_compile_task(CompileQueue*, int, methodHandle const&, int, int, methodHandle const&, int, CompileTask::CompileReason, bool)
  [ 2] CompileBroker::compile_method_base(methodHandle const&, int, int, methodHandle const&, int, CompileTask::CompileReason, bool, Thread*)
  [ 3] CompileBroker::compile_method(methodHandle const&, int, int, methodHandle const&, int, CompileTask::CompileReason, DirectiveSet*, Thread*)
  [ 4] CompileBroker::compile_method(methodHandle const&, int, int, methodHandle const&, int, CompileTask::CompileReason, Thread*)
  [ 5] TieredThresholdPolicy::compile(methodHandle const&, int, CompLevel, Thread*)
  [ 6] TieredThresholdPolicy::event(methodHandle const&, methodHandle const&, int, int, CompLevel, CompiledMethod*, Thread*)
  [ 7] InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*)
  [ 8] InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*)
  [ 9] io.ktor.utils.io.core.internal.ChunkBuffer.<init>
  [10] io.ktor.utils.io.core.internal.ChunkBuffer.<init>
  [11] io.ktor.utils.io.core.IoBuffer.<init>
  [12] io.ktor.utils.io.core.IoBuffer.<init>
  [13] io.ktor.utils.io.core.IoBuffer.<init>
  [14] io.ktor.utils.io.core.IoBuffer.<init>
  [15] io.ktor.utils.io.core.IoBuffer.<init>
  [16] io.ktor.utils.io.internal.WriteSessionImpl.begin
  [17] io.ktor.utils.io.ByteBufferChannel.writeSuspendSession$suspendImpl
  [18] io.ktor.utils.io.ByteBufferChannel.writeSuspendSession
  [19] io.ktor.util.cio.FileChannelsKt$readChannel$1.invokeSuspend
  [20] io.ktor.util.cio.FileChannelsKt$readChannel$1.invoke
  [21] io.ktor.util.cio.FileChannelsKt$readChannel$1.invoke
  [22] io.ktor.utils.io.CoroutinesKt$launchChannel$job$1.invokeSuspend
  [23] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [24] kotlinx.coroutines.internal.DispatchedContinuationKt.resumeCancellableWith
  [25] kotlinx.coroutines.intrinsics.CancellableKt.startCoroutineCancellable
  [26] kotlinx.coroutines.BuildersKt__Builders_commonKt.startCoroutineImpl
  [27] kotlinx.coroutines.BuildersKt.startCoroutineImpl
  [28] kotlinx.coroutines.AbstractCoroutine.start
  [29] kotlinx.coroutines.BuildersKt__Builders_commonKt.launch
  [30] kotlinx.coroutines.BuildersKt.launch
  [31] kotlinx.coroutines.BuildersKt__Builders_commonKt.launch$default
  [32] kotlinx.coroutines.BuildersKt.launch$default
  [33] io.ktor.utils.io.CoroutinesKt.launchChannel
  [34] io.ktor.utils.io.CoroutinesKt.writer
  [35] io.ktor.util.cio.FileChannelsKt.readChannel
  [36] io.ktor.util.cio.FileChannelsKt.readChannel$default
  [37] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [38] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [39] kotlinx.coroutines.DispatchedTask.run
  [40] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [41] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [42] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [43] kotlinx.coroutines.BuildersKt.runBlocking
  [44] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [45] kotlinx.coroutines.BuildersKt.runBlocking$default
  [46] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [47] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [48] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [49] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [50] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [51] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [52] java.lang.reflect.Method.invoke
  [53] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [54] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [55] java.util.concurrent.FutureTask.run
  [56] java.util.concurrent.Executors$RunnableAdapter.call
  [57] java.util.concurrent.FutureTask.run
  [58] java.util.concurrent.ThreadPoolExecutor.runWorker
  [59] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [60] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.nio.Buffer.position
  [ 1] java.nio.ByteBuffer.position
  [ 2] java.nio.MappedByteBuffer.position
  [ 3] java.nio.MappedByteBuffer.position
  [ 4] java.nio.Buffer.<init>
  [ 5] java.nio.ByteBuffer.<init>
  [ 6] java.nio.ByteBuffer.<init>
  [ 7] java.nio.MappedByteBuffer.<init>
  [ 8] java.nio.DirectByteBuffer.<init>
  [ 9] java.nio.DirectByteBuffer.duplicate
  [10] io.ktor.util.BufferViewJvmKt.read
  [11] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [14] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [15] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [16] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [17] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [18] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [19] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [20] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [21] kotlinx.coroutines.DispatchedTask.run
  [22] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [23] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [24] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [25] kotlinx.coroutines.BuildersKt.runBlocking
  [26] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [27] kotlinx.coroutines.BuildersKt.runBlocking$default
  [28] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [29] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [30] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [31] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [32] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [33] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [34] java.lang.reflect.Method.invoke
  [35] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [36] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [37] java.util.concurrent.FutureTask.run
  [38] java.util.concurrent.Executors$RunnableAdapter.call
  [39] java.util.concurrent.FutureTask.run
  [40] java.util.concurrent.ThreadPoolExecutor.runWorker
  [41] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [42] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.nio.ByteBuffer.putBuffer
  [ 1] java.nio.ByteBuffer.put
  [ 2] java.nio.HeapByteBuffer.put
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] Compile::Code_Gen()
  [ 1] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, DirectiveSet*)
  [ 2] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 3] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 4] CompileBroker::compiler_thread_loop()
  [ 5] JavaThread::thread_main_inner()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] __os_ch_md_redzone_cookie
  [ 9] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.writeSuspendPredicate
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$writeSuspendPredicate
  [ 2] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 5] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [10] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [11] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [14] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 1] sun.nio.ch.IOUtil.read
  [ 2] sun.nio.ch.FileChannelImpl.read
  [ 3] io.ktor.util.BufferViewJvmKt.read
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 7] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 8] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [12] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.prepareWriteBuffer$ktor_io
  [ 1] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [10] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.restoreStateAfterWrite$ktor_io
  [ 1] io.ktor.utils.io.internal.WriteSessionImpl.complete
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeSuspendSession$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspendSession$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [11] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.writeSuspendPredicate
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$writeSuspendPredicate
  [ 2] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 5] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [10] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [11] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [14] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.nio.ByteBuffer.limit
  [ 1] java.nio.MappedByteBuffer.limit
  [ 2] java.nio.MappedByteBuffer.limit
  [ 3] java.nio.Buffer.<init>
  [ 4] java.nio.ByteBuffer.<init>
  [ 5] java.nio.ByteBuffer.<init>
  [ 6] java.nio.MappedByteBuffer.<init>
  [ 7] java.nio.DirectByteBuffer.<init>
  [ 8] java.nio.DirectByteBuffer.duplicate
  [ 9] io.ktor.util.BufferViewJvmKt.read
  [10] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [13] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [14] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [15] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [16] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [17] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [18] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [19] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [20] kotlinx.coroutines.DispatchedTask.run
  [21] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [22] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [23] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [24] kotlinx.coroutines.BuildersKt.runBlocking
  [25] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [26] kotlinx.coroutines.BuildersKt.runBlocking$default
  [27] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [28] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [29] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [30] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [31] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [32] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [33] java.lang.reflect.Method.invoke
  [34] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [35] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [36] java.util.concurrent.FutureTask.run
  [37] java.util.concurrent.Executors$RunnableAdapter.call
  [38] java.util.concurrent.FutureTask.run
  [39] java.util.concurrent.ThreadPoolExecutor.runWorker
  [40] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [41] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] [unknown]
  [ 1] GraphBuilder::_goto(int, int)
  [ 2] GraphBuilder::iterate_bytecodes_for_block(int)
  [ 3] GraphBuilder::iterate_all_blocks(bool)
  [ 4] GraphBuilder::GraphBuilder(Compilation*, IRScope*)
  [ 5] IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool)
  [ 6] IR::IR(Compilation*, ciMethod*, int)
  [ 7] Compilation::build_hir()
  [ 8] Compilation::compile_java_method()
  [ 9] Compilation::compile_method()
  [10] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [11] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [12] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [13] CompileBroker::compiler_thread_loop()
  [14] JavaThread::thread_main_inner()
  [15] Thread::call_run()
  [16] thread_native_entry(Thread*)
  [17] __os_ch_md_redzone_cookie
  [18] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] jdk.internal.misc.Unsafe.checkNativeAddress
  [ 1] jdk.internal.misc.Unsafe.checkPointer
  [ 2] jdk.internal.misc.Unsafe.checkPrimitivePointer
  [ 3] jdk.internal.misc.Unsafe.copyMemoryChecks
  [ 4] jdk.internal.misc.Unsafe.copyMemory
  [ 5] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 6] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 7] java.nio.ByteBuffer.putBuffer
  [ 8] java.nio.ByteBuffer.put
  [ 9] java.nio.HeapByteBuffer.put
  [10] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [13] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [17] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [21] kotlinx.coroutines.BuildersKt.runBlocking$default
  [22] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] __psynch_cvwait
  [ 1] os::PlatformMonitor::wait(long)
  [ 2] Monitor::wait_without_safepoint_check(long long)
  [ 3] G1ServiceThread::sleep_before_next_cycle()
  [ 4] G1ServiceThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] __os_ch_md_redzone_cookie
  [ 9] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.nio.Buffer.limit
  [ 1] java.nio.ByteBuffer.limit
  [ 2] java.nio.MappedByteBuffer.limit
  [ 3] java.nio.MappedByteBuffer.limit
  [ 4] java.nio.Buffer.<init>
  [ 5] java.nio.ByteBuffer.<init>
  [ 6] java.nio.ByteBuffer.<init>
  [ 7] java.nio.MappedByteBuffer.<init>
  [ 8] java.nio.DirectByteBuffer.<init>
  [ 9] java.nio.DirectByteBuffer.duplicate
  [10] io.ktor.util.BufferViewJvmKt.read
  [11] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [14] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [15] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [16] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [17] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [18] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [19] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [20] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [21] kotlinx.coroutines.DispatchedTask.run
  [22] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [23] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [24] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [25] kotlinx.coroutines.BuildersKt.runBlocking
  [26] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [27] kotlinx.coroutines.BuildersKt.runBlocking$default
  [28] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [29] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [30] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [31] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [32] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [33] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [34] java.lang.reflect.Method.invoke
  [35] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [36] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [37] java.util.concurrent.FutureTask.run
  [38] java.util.concurrent.Executors$RunnableAdapter.call
  [39] java.util.concurrent.FutureTask.run
  [40] java.util.concurrent.ThreadPoolExecutor.runWorker
  [41] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [42] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.park
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 6] java.util.concurrent.ForkJoinPool.managedBlock
  [ 7] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 8] java.util.concurrent.LinkedBlockingQueue.take
  [ 9] java.util.concurrent.ThreadPoolExecutor.getTask
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] jdk.internal.misc.Unsafe.checkPrimitiveArray
  [ 1] jdk.internal.misc.Unsafe.checkPrimitivePointer
  [ 2] jdk.internal.misc.Unsafe.copyMemoryChecks
  [ 3] jdk.internal.misc.Unsafe.copyMemory
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 5] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 6] java.nio.ByteBuffer.putBuffer
  [ 7] java.nio.ByteBuffer.put
  [ 8] java.nio.HeapByteBuffer.put
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [12] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] Method::invocation_count()
  [ 1] ciMethod::ciMethod(methodHandle const&, ciInstanceKlass*)
  [ 2] ciObjectFactory::create_new_metadata(Metadata*)
  [ 3] ciObjectFactory::get_metadata(Metadata*)
  [ 4] ciEnv::get_method_by_index_impl(constantPoolHandle const&, int, Bytecodes::Code, ciInstanceKlass*)
  [ 5] ciBytecodeStream::get_method(bool&, ciSignature**)
  [ 6] GraphBuilder::invoke(Bytecodes::Code)
  [ 7] GraphBuilder::iterate_bytecodes_for_block(int)
  [ 8] GraphBuilder::iterate_all_blocks(bool)
  [ 9] GraphBuilder::GraphBuilder(Compilation*, IRScope*)
  [10] IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool)
  [11] IR::IR(Compilation*, ciMethod*, int)
  [12] Compilation::build_hir()
  [13] Compilation::compile_java_method()
  [14] Compilation::compile_method()
  [15] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [16] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [17] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [18] CompileBroker::compiler_thread_loop()
  [19] JavaThread::thread_main_inner()
  [20] Thread::call_run()
  [21] thread_native_entry(Thread*)
  [22] __os_ch_md_redzone_cookie
  [23] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] BlockListBuilder::make_block_at(int, BlockBegin*)
  [ 1] BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int)
  [ 2] GraphBuilder::push_scope(ciMethod*, BlockBegin*)
  [ 3] GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*)
  [ 4] GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*)
  [ 5] GraphBuilder::invoke(Bytecodes::Code)
  [ 6] GraphBuilder::iterate_bytecodes_for_block(int)
  [ 7] GraphBuilder::iterate_all_blocks(bool)
  [ 8] GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*)
  [ 9] GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*)
  [10] GraphBuilder::invoke(Bytecodes::Code)
  [11] GraphBuilder::iterate_bytecodes_for_block(int)
  [12] GraphBuilder::iterate_all_blocks(bool)
  [13] GraphBuilder::GraphBuilder(Compilation*, IRScope*)
  [14] IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool)
  [15] IR::IR(Compilation*, ciMethod*, int)
  [16] Compilation::build_hir()
  [17] Compilation::compile_java_method()
  [18] Compilation::compile_method()
  [19] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [20] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [21] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [22] CompileBroker::compiler_thread_loop()
  [23] JavaThread::thread_main_inner()
  [24] Thread::call_run()
  [25] thread_native_entry(Thread*)
  [26] __os_ch_md_redzone_cookie
  [27] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] sun.nio.ch.FileChannelImpl.read
  [ 1] io.ktor.util.BufferViewJvmKt.read
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [10] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] _kernelrpc_mach_port_deallocate_trap
  [ 1] os::current_thread_id()
  [ 2] ttyLocker::release_tty_if_locked()
  [ 3] ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&, ciSymbol*, bool)
  [ 4] ciSignature::ciSignature(ciKlass*, constantPoolHandle const&, ciSymbol*)
  [ 5] ciMethod::ciMethod(methodHandle const&, ciInstanceKlass*)
  [ 6] ciObjectFactory::create_new_metadata(Metadata*)
  [ 7] ciObjectFactory::get_metadata(Metadata*)
  [ 8] ciEnv::get_method_by_index_impl(constantPoolHandle const&, int, Bytecodes::Code, ciInstanceKlass*)
  [ 9] ciBytecodeStream::get_method(bool&, ciSignature**)
  [10] GraphBuilder::invoke(Bytecodes::Code)
  [11] GraphBuilder::iterate_bytecodes_for_block(int)
  [12] GraphBuilder::iterate_all_blocks(bool)
  [13] GraphBuilder::GraphBuilder(Compilation*, IRScope*)
  [14] IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool)
  [15] IR::IR(Compilation*, ciMethod*, int)
  [16] Compilation::build_hir()
  [17] Compilation::compile_java_method()
  [18] Compilation::compile_method()
  [19] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [20] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [21] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [22] CompileBroker::compiler_thread_loop()
  [23] JavaThread::thread_main_inner()
  [24] Thread::call_run()
  [25] thread_native_entry(Thread*)
  [26] __os_ch_md_redzone_cookie
  [27] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 5] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [10] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [11] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [14] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] thread_self_trap
  [ 1] ttyLocker::release_tty_if_locked()
  [ 2] ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&, ciSymbol*, bool)
  [ 3] ciSignature::ciSignature(ciKlass*, constantPoolHandle const&, ciSymbol*)
  [ 4] ciMethod::ciMethod(methodHandle const&, ciInstanceKlass*)
  [ 5] ciObjectFactory::create_new_metadata(Metadata*)
  [ 6] ciObjectFactory::get_metadata(Metadata*)
  [ 7] ciEnv::get_method_by_index_impl(constantPoolHandle const&, int, Bytecodes::Code, ciInstanceKlass*)
  [ 8] ciBytecodeStream::get_method(bool&, ciSignature**)
  [ 9] GraphBuilder::invoke(Bytecodes::Code)
  [10] GraphBuilder::iterate_bytecodes_for_block(int)
  [11] GraphBuilder::iterate_all_blocks(bool)
  [12] GraphBuilder::GraphBuilder(Compilation*, IRScope*)
  [13] IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool)
  [14] IR::IR(Compilation*, ciMethod*, int)
  [15] Compilation::build_hir()
  [16] Compilation::compile_java_method()
  [17] Compilation::compile_method()
  [18] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [19] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [20] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [21] CompileBroker::compiler_thread_loop()
  [22] JavaThread::thread_main_inner()
  [23] Thread::call_run()
  [24] thread_native_entry(Thread*)
  [25] __os_ch_md_redzone_cookie
  [26] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.nio.ByteBuffer.put
  [ 1] java.nio.HeapByteBuffer.put
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 1] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 2] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 3] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 7] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 8] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [12] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] ValueMap::kill_memory()
  [ 1] GraphBuilder::append_with_bci(Instruction*, int)
  [ 2] GraphBuilder::invoke(Bytecodes::Code)
  [ 3] GraphBuilder::iterate_bytecodes_for_block(int)
  [ 4] GraphBuilder::iterate_all_blocks(bool)
  [ 5] GraphBuilder::GraphBuilder(Compilation*, IRScope*)
  [ 6] IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool)
  [ 7] IR::IR(Compilation*, ciMethod*, int)
  [ 8] Compilation::build_hir()
  [ 9] Compilation::compile_java_method()
  [10] Compilation::compile_method()
  [11] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [12] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [13] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [14] CompileBroker::compiler_thread_loop()
  [15] JavaThread::thread_main_inner()
  [16] Thread::call_run()
  [17] thread_native_entry(Thread*)
  [18] __os_ch_md_redzone_cookie
  [19] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 1] kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 4] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] sun.nio.ch.FileChannelImpl.read
  [ 1] io.ktor.util.BufferViewJvmKt.read
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [10] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.getContext
  [ 1] kotlinx.coroutines.internal.ThreadContextKt.threadContextElements
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 3] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 4] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 5] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 6] kotlinx.coroutines.intrinsics.CancellableKt.startCoroutineCancellable
  [ 7] kotlinx.coroutines.BuildersKt__Builders_commonKt.startCoroutineImpl
  [ 8] kotlinx.coroutines.BuildersKt.startCoroutineImpl
  [ 9] kotlinx.coroutines.AbstractCoroutine.start
  [10] kotlinx.coroutines.BuildersKt__Builders_commonKt.launch
  [11] kotlinx.coroutines.BuildersKt.launch
  [12] kotlinx.coroutines.BuildersKt__Builders_commonKt.launch$default
  [13] kotlinx.coroutines.BuildersKt.launch$default
  [14] io.ktor.utils.io.CoroutinesKt.launchChannel
  [15] io.ktor.utils.io.CoroutinesKt.writer
  [16] io.ktor.util.cio.FileChannelsKt.readChannel
  [17] io.ktor.util.cio.FileChannelsKt.readChannel$default
  [18] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [19] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [20] kotlinx.coroutines.DispatchedTask.run
  [21] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [22] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [23] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [24] kotlinx.coroutines.BuildersKt.runBlocking
  [25] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [26] kotlinx.coroutines.BuildersKt.runBlocking$default
  [27] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [28] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [29] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [30] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [31] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [32] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [33] java.lang.reflect.Method.invoke
  [34] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [35] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [36] java.util.concurrent.FutureTask.run
  [37] java.util.concurrent.Executors$RunnableAdapter.call
  [38] java.util.concurrent.FutureTask.run
  [39] java.util.concurrent.ThreadPoolExecutor.runWorker
  [40] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [41] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] sun.nio.ch.NativeThreadSet.remove
  [ 1] sun.nio.ch.FileChannelImpl.read
  [ 2] io.ktor.util.BufferViewJvmKt.read
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [11] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.writeSuspendPredicate
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$writeSuspendPredicate
  [ 2] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 5] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [10] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [11] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [14] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] If::If(Instruction*, Instruction::Condition, bool, Instruction*, BlockBegin*, BlockBegin*, ValueStack*, bool)
  [ 1] GraphBuilder::if_node(Instruction*, Instruction::Condition, Instruction*, ValueStack*)
  [ 2] GraphBuilder::iterate_bytecodes_for_block(int)
  [ 3] GraphBuilder::iterate_all_blocks(bool)
  [ 4] GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*)
  [ 5] GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*)
  [ 6] GraphBuilder::invoke(Bytecodes::Code)
  [ 7] GraphBuilder::iterate_bytecodes_for_block(int)
  [ 8] GraphBuilder::iterate_all_blocks(bool)
  [ 9] GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*)
  [10] GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*)
  [11] GraphBuilder::invoke(Bytecodes::Code)
  [12] GraphBuilder::iterate_bytecodes_for_block(int)
  [13] GraphBuilder::iterate_all_blocks(bool)
  [14] GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*)
  [15] GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*)
  [16] GraphBuilder::invoke(Bytecodes::Code)
  [17] GraphBuilder::iterate_bytecodes_for_block(int)
  [18] GraphBuilder::iterate_all_blocks(bool)
  [19] GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*)
  [20] GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*)
  [21] GraphBuilder::invoke(Bytecodes::Code)
  [22] GraphBuilder::iterate_bytecodes_for_block(int)
  [23] GraphBuilder::iterate_all_blocks(bool)
  [24] GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*)
  [25] GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*)
  [26] GraphBuilder::invoke(Bytecodes::Code)
  [27] GraphBuilder::iterate_bytecodes_for_block(int)
  [28] GraphBuilder::iterate_all_blocks(bool)
  [29] GraphBuilder::GraphBuilder(Compilation*, IRScope*)
  [30] IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool)
  [31] IR::IR(Compilation*, ciMethod*, int)
  [32] Compilation::build_hir()
  [33] Compilation::compile_java_method()
  [34] Compilation::compile_method()
  [35] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [36] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [37] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [38] CompileBroker::compiler_thread_loop()
  [39] JavaThread::thread_main_inner()
  [40] Thread::call_run()
  [41] thread_native_entry(Thread*)
  [42] __os_ch_md_redzone_cookie
  [43] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 5] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [10] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [11] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [14] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] Method::jmethod_id()
  [ 1] create_inline_record(nmethod*)
  [ 2] JvmtiExport::post_compiled_method_load(JvmtiEnv*, nmethod*)
  [ 3] JvmtiExport::post_compiled_method_load(nmethod*)
  [ 4] ServiceThread::service_thread_entry(JavaThread*, Thread*)
  [ 5] JavaThread::thread_main_inner()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] __os_ch_md_redzone_cookie
  [ 9] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] jdk.internal.misc.Unsafe.copyMemory
  [ 1] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 2] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 3] java.nio.ByteBuffer.putBuffer
  [ 4] java.nio.ByteBuffer.put
  [ 5] java.nio.HeapByteBuffer.put
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 9] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [13] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [17] kotlinx.coroutines.BuildersKt.runBlocking$default
  [18] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.nio.ByteBuffer.put
  [ 1] java.nio.HeapByteBuffer.put
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] GraphBuilder::iterate_bytecodes_for_block(int)
  [ 1] GraphBuilder::iterate_all_blocks(bool)
  [ 2] GraphBuilder::GraphBuilder(Compilation*, IRScope*)
  [ 3] IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool)
  [ 4] IR::IR(Compilation*, ciMethod*, int)
  [ 5] Compilation::build_hir()
  [ 6] Compilation::compile_java_method()
  [ 7] Compilation::compile_method()
  [ 8] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 9] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [10] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [11] CompileBroker::compiler_thread_loop()
  [12] JavaThread::thread_main_inner()
  [13] Thread::call_run()
  [14] thread_native_entry(Thread*)
  [15] __os_ch_md_redzone_cookie
  [16] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] ciObjectFactory::ciObjectFactory(Arena*, int)
  [ 1] ciEnv::ciEnv(CompileTask*)
  [ 2] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 3] CompileBroker::compiler_thread_loop()
  [ 4] JavaThread::thread_main_inner()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] __os_ch_md_redzone_cookie
  [ 8] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.prepareBuffer
  [ 1] io.ktor.utils.io.ByteBufferChannel.prepareWriteBuffer$ktor_io
  [ 2] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [11] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] LIR_OpVisitState::visit(LIR_Op*)
  [ 1] LinearScan::build_intervals()
  [ 2] LinearScan::do_linear_scan()
  [ 3] Compilation::emit_lir()
  [ 4] Compilation::compile_java_method()
  [ 5] Compilation::compile_method()
  [ 6] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 7] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] Thread::call_run()
  [12] thread_native_entry(Thread*)
  [13] __os_ch_md_redzone_cookie
  [14] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] sun.nio.ch.FileDispatcherImpl.read0
  [ 1] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 2] sun.nio.ch.IOUtil.read
  [ 3] sun.nio.ch.FileChannelImpl.read
  [ 4] io.ktor.util.BufferViewJvmKt.read
  [ 5] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 9] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [10] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [13] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [17] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [21] kotlinx.coroutines.BuildersKt.runBlocking$default
  [22] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.writeSuspendPredicate
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$writeSuspendPredicate
  [ 2] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 5] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [10] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [11] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [14] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.writeSuspendPredicate
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$writeSuspendPredicate
  [ 2] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 5] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [10] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [11] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [14] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.park
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly
  [ 7] java.util.concurrent.CountDownLatch.await
  [ 8] org.openjdk.jmh.runner.InfraControlL2.awaitWarmdownReady
  [ 9] org.openjdk.jmh.runner.InfraControl.awaitWarmdownReady
  [10] org.openjdk.jmh.runner.BenchmarkHandler.runIteration
  [11] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [12] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [13] org.openjdk.jmh.runner.BaseRunner.doSingle
  [14] org.openjdk.jmh.runner.BaseRunner.runBenchmarksForked
  [15] org.openjdk.jmh.runner.ForkedRunner.run
  [16] org.openjdk.jmh.runner.ForkedMain.main

--- 10000000 ns (0.02%), 1 sample
  [ 0] semaphore_wait_trap
  [ 1] GangWorker::loop()
  [ 2] Thread::call_run()
  [ 3] thread_native_entry(Thread*)
  [ 4] __os_ch_md_redzone_cookie
  [ 5] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] [unknown]
  [ 1] G1ServiceThread::run_service()
  [ 2] ConcurrentGCThread::run()
  [ 3] Thread::call_run()
  [ 4] thread_native_entry(Thread*)
  [ 5] __os_ch_md_redzone_cookie
  [ 6] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.io.RandomAccessFile.close
  [ 1] io.ktor.util.cio.FileChannelsKt$readChannel$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 9] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [13] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [17] kotlinx.coroutines.BuildersKt.runBlocking$default
  [18] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.nio.ByteBuffer.order
  [ 1] io.ktor.utils.io.ByteBufferChannel.prepareBuffer
  [ 2] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 3] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&, Thread*)
  [ 1] java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&)
  [ 2] JVM_FillInStackTrace
  [ 3] Java_java_lang_Throwable_fillInStackTrace
  [ 4] java.lang.Throwable.fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.<init>
  [ 7] java.lang.Exception.<init>
  [ 8] java.lang.RuntimeException.<init>
  [ 9] java.lang.IllegalStateException.<init>
  [10] java.util.concurrent.CancellationException.<init>
  [11] io.ktor.utils.io.ClosedWriteChannelException.<init>
  [12] io.ktor.utils.io.ByteBufferChannel.close
  [13] io.ktor.utils.io.CoroutinesKt$launchChannel$1.invoke
  [14] io.ktor.utils.io.CoroutinesKt$launchChannel$1.invoke
  [15] kotlinx.coroutines.InvokeOnCompletion.invoke
  [16] kotlinx.coroutines.JobSupport.notifyCompletion
  [17] kotlinx.coroutines.JobSupport.completeStateFinalization
  [18] kotlinx.coroutines.JobSupport.finalizeFinishingState
  [19] kotlinx.coroutines.JobSupport.tryMakeCompletingSlowPath
  [20] kotlinx.coroutines.JobSupport.tryMakeCompleting
  [21] kotlinx.coroutines.JobSupport.makeCompletingOnce$kotlinx_coroutines_core
  [22] kotlinx.coroutines.AbstractCoroutine.resumeWith
  [23] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [24] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [25] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [26] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [27] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [28] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [29] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [30] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [31] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [32] kotlinx.coroutines.DispatchedTask.run
  [33] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [34] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [35] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [36] kotlinx.coroutines.BuildersKt.runBlocking
  [37] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [38] kotlinx.coroutines.BuildersKt.runBlocking$default
  [39] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [40] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [41] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [42] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [43] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [44] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [45] java.lang.reflect.Method.invoke
  [46] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [47] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [48] java.util.concurrent.FutureTask.run
  [49] java.util.concurrent.Executors$RunnableAdapter.call
  [50] java.util.concurrent.FutureTask.run
  [51] java.util.concurrent.ThreadPoolExecutor.runWorker
  [52] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [53] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] sun.nio.ch.NativeThreadSet.add
  [ 1] sun.nio.ch.FileChannelImpl.read
  [ 2] io.ktor.util.BufferViewJvmKt.read
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [11] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.lang.Thread.blockedOn
  [ 1] java.lang.System$2.blockedOn
  [ 2] java.nio.channels.spi.AbstractInterruptibleChannel.blockedOn
  [ 3] java.nio.channels.spi.AbstractInterruptibleChannel.begin
  [ 4] sun.nio.ch.FileChannelImpl.beginBlocking
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [11] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [12] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [15] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.nio.ByteBuffer.position
  [ 1] java.nio.MappedByteBuffer.position
  [ 2] java.nio.MappedByteBuffer.position
  [ 3] java.nio.Buffer.<init>
  [ 4] java.nio.ByteBuffer.<init>
  [ 5] java.nio.ByteBuffer.<init>
  [ 6] java.nio.MappedByteBuffer.<init>
  [ 7] java.nio.DirectByteBuffer.<init>
  [ 8] java.nio.DirectByteBuffer.duplicate
  [ 9] io.ktor.util.BufferViewJvmKt.read
  [10] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [13] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [14] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [15] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [16] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [17] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [18] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [19] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [20] kotlinx.coroutines.DispatchedTask.run
  [21] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [22] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [23] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [24] kotlinx.coroutines.BuildersKt.runBlocking
  [25] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [26] kotlinx.coroutines.BuildersKt.runBlocking$default
  [27] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [28] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [29] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [30] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [31] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [32] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [33] java.lang.reflect.Method.invoke
  [34] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [35] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [36] java.util.concurrent.FutureTask.run
  [37] java.util.concurrent.Executors$RunnableAdapter.call
  [38] java.util.concurrent.FutureTask.run
  [39] java.util.concurrent.ThreadPoolExecutor.runWorker
  [40] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [41] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] __psynch_mutexwait
  [ 1] err_codes_iokit_usb
  [ 2] Mutex::lock_contended(Thread*)
  [ 3] Mutex::lock(Thread*)
  [ 4] CompileBroker::compile_method_base(methodHandle const&, int, int, methodHandle const&, int, CompileTask::CompileReason, bool, Thread*)
  [ 5] CompileBroker::compile_method(methodHandle const&, int, int, methodHandle const&, int, CompileTask::CompileReason, DirectiveSet*, Thread*)
  [ 6] CompileBroker::compile_method(methodHandle const&, int, int, methodHandle const&, int, CompileTask::CompileReason, Thread*)
  [ 7] TieredThresholdPolicy::compile(methodHandle const&, int, CompLevel, Thread*)
  [ 8] TieredThresholdPolicy::event(methodHandle const&, methodHandle const&, int, int, CompLevel, CompiledMethod*, Thread*)
  [ 9] InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*)
  [10] InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*)
  [11] java.util.concurrent.CancellationException.<init>
  [12] io.ktor.utils.io.ByteBufferChannel.cancel
  [13] io.ktor.utils.io.ByteReadChannelKt.cancel
  [14] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.nio.ByteBuffer.putBuffer
  [ 1] java.nio.ByteBuffer.put
  [ 2] java.nio.HeapByteBuffer.put
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.access$flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 5] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 6] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [11] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [12] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [15] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] close
  [ 1] java.io.FileDescriptor.close0
  [ 2] java.io.FileDescriptor.close
  [ 3] java.io.RandomAccessFile$1.close
  [ 4] java.io.FileDescriptor.closeAll
  [ 5] java.io.RandomAccessFile.close
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [10] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [11] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [14] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 1] sun.nio.ch.IOUtil.read
  [ 2] sun.nio.ch.FileChannelImpl.read
  [ 3] io.ktor.util.BufferViewJvmKt.read
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 7] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 8] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [12] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.getAndSet
  [ 1] io.ktor.utils.io.internal.RingBufferCapacity.flush
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.access$flushImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 5] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 6] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 7] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 8] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [11] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [12] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [13] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [14] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [15] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [16] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [17] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [18] kotlinx.coroutines.DispatchedTask.run
  [19] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [20] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt.runBlocking
  [23] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [24] kotlinx.coroutines.BuildersKt.runBlocking$default
  [25] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [26] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [27] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [29] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [30] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [31] java.lang.reflect.Method.invoke
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.Executors$RunnableAdapter.call
  [36] java.util.concurrent.FutureTask.run
  [37] java.util.concurrent.ThreadPoolExecutor.runWorker
  [38] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [39] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.lang.Thread.interrupted
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly
  [ 2] java.util.concurrent.CountDownLatch.await
  [ 3] org.openjdk.jmh.runner.InfraControlL2.awaitWarmupReady
  [ 4] org.openjdk.jmh.runner.InfraControl.awaitWarmupReady
  [ 5] org.openjdk.jmh.runner.BenchmarkHandler.runIteration
  [ 6] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [ 7] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [ 8] org.openjdk.jmh.runner.BaseRunner.doSingle
  [ 9] org.openjdk.jmh.runner.BaseRunner.runBenchmarksForked
  [10] org.openjdk.jmh.runner.ForkedRunner.run
  [11] org.openjdk.jmh.runner.ForkedMain.main

--- 10000000 ns (0.02%), 1 sample
  [ 0] sun.nio.ch.FileChannelImpl.read
  [ 1] io.ktor.util.BufferViewJvmKt.read
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [10] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] stat$INODE64
  [ 1] java.io.UnixFileSystem.getLength
  [ 2] java.io.File.length
  [ 3] io.ktor.util.cio.FileChannelsKt.readChannel
  [ 4] io.ktor.util.cio.FileChannelsKt.readChannel$default
  [ 5] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] CodeBuffer::copy_code_to(CodeBlob*)
  [ 1] nmethod::new_nmethod(methodHandle const&, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, GrowableArrayView<BufferBlob*> const&, char*, int, int, char const*, FailedSpeculation**)
  [ 2] ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState, GrowableArrayView<BufferBlob*> const&)
  [ 3] Compilation::compile_method()
  [ 4] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 5] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 6] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 7] CompileBroker::compiler_thread_loop()
  [ 8] JavaThread::thread_main_inner()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] __os_ch_md_redzone_cookie
  [12] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.writeSuspendPredicate
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$writeSuspendPredicate
  [ 2] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 5] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [10] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [11] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [14] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.access$flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 5] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 6] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [11] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [12] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [15] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.prepareBuffer
  [ 1] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.io.RandomAccessFile$1.close
  [ 1] java.io.FileDescriptor.closeAll
  [ 2] java.io.RandomAccessFile.close
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [11] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] fdval
  [ 1] Java_sun_nio_ch_FileDispatcherImpl_read0
  [ 2] sun.nio.ch.FileDispatcherImpl.read0
  [ 3] sun.nio.ch.FileDispatcherImpl.read
  [ 4] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 5] sun.nio.ch.IOUtil.read
  [ 6] sun.nio.ch.FileChannelImpl.read
  [ 7] io.ktor.util.BufferViewJvmKt.read
  [ 8] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [11] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [12] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [13] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [14] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [15] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [16] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [17] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [18] kotlinx.coroutines.DispatchedTask.run
  [19] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [20] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt.runBlocking
  [23] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [24] kotlinx.coroutines.BuildersKt.runBlocking$default
  [25] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [26] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [27] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [29] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [30] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [31] java.lang.reflect.Method.invoke
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.Executors$RunnableAdapter.call
  [36] java.util.concurrent.FutureTask.run
  [37] java.util.concurrent.ThreadPoolExecutor.runWorker
  [38] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [39] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getWriteOp
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$getWriteOp
  [ 2] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 5] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [10] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [11] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [14] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] __psynch_cvwait
  [ 1] os::PlatformMonitor::wait(long)
  [ 2] Monitor::wait(long long, bool)
  [ 3] CompileQueue::get()
  [ 4] CompileBroker::compiler_thread_loop()
  [ 5] JavaThread::thread_main_inner()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] __os_ch_md_redzone_cookie
  [ 9] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] kotlinx.coroutines.internal.DispatchedContinuationKt.resumeCancellableWith
  [ 1] kotlinx.coroutines.intrinsics.CancellableKt.startCoroutineCancellable
  [ 2] kotlinx.coroutines.BuildersKt__Builders_commonKt.startCoroutineImpl
  [ 3] kotlinx.coroutines.BuildersKt.startCoroutineImpl
  [ 4] kotlinx.coroutines.AbstractCoroutine.start
  [ 5] kotlinx.coroutines.BuildersKt__Builders_commonKt.launch
  [ 6] kotlinx.coroutines.BuildersKt.launch
  [ 7] kotlinx.coroutines.BuildersKt__Builders_commonKt.launch$default
  [ 8] kotlinx.coroutines.BuildersKt.launch$default
  [ 9] io.ktor.utils.io.CoroutinesKt.launchChannel
  [10] io.ktor.utils.io.CoroutinesKt.writer
  [11] io.ktor.util.cio.FileChannelsKt.readChannel
  [12] io.ktor.util.cio.FileChannelsKt.readChannel$default
  [13] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [17] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [21] kotlinx.coroutines.BuildersKt.runBlocking$default
  [22] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.shouldResumeReadOp
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$shouldResumeReadOp
  [ 2] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 5] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [10] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [11] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [14] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] semaphore_wait_trap
  [ 1] GangWorker::loop()
  [ 2] Thread::call_run()
  [ 3] thread_native_entry(Thread*)
  [ 4] __os_ch_md_redzone_cookie
  [ 5] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] _platform_bzero$VARIANT$Haswell
  [ 1] LinearScan::assign_reg_num(GrowableArray<LIR_Op*>*, IntervalWalker*)
  [ 2] LinearScan::do_linear_scan()
  [ 3] Compilation::emit_lir()
  [ 4] Compilation::compile_java_method()
  [ 5] Compilation::compile_method()
  [ 6] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 7] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] Thread::call_run()
  [12] thread_native_entry(Thread*)
  [13] __os_ch_md_redzone_cookie
  [14] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] NullCheckEliminator::NullCheckEliminator(Optimizer*)
  [ 1] Optimizer::eliminate_null_checks()
  [ 2] IR::eliminate_null_checks()
  [ 3] Compilation::build_hir()
  [ 4] Compilation::compile_java_method()
  [ 5] Compilation::compile_method()
  [ 6] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 7] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] Thread::call_run()
  [12] thread_native_entry(Thread*)
  [13] __os_ch_md_redzone_cookie
  [14] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.core.IoBuffer.<init>
  [ 1] io.ktor.utils.io.internal.WriteSessionImpl.begin
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeSuspendSession$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeSuspendSession
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1.invokeSuspend
  [ 5] io.ktor.util.cio.FileChannelsKt$readChannel$1.invoke
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1.invoke
  [ 7] io.ktor.utils.io.CoroutinesKt$launchChannel$job$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuationKt.resumeCancellableWith
  [10] kotlinx.coroutines.intrinsics.CancellableKt.startCoroutineCancellable
  [11] kotlinx.coroutines.BuildersKt__Builders_commonKt.startCoroutineImpl
  [12] kotlinx.coroutines.BuildersKt.startCoroutineImpl
  [13] kotlinx.coroutines.AbstractCoroutine.start
  [14] kotlinx.coroutines.BuildersKt__Builders_commonKt.launch
  [15] kotlinx.coroutines.BuildersKt.launch
  [16] kotlinx.coroutines.BuildersKt__Builders_commonKt.launch$default
  [17] kotlinx.coroutines.BuildersKt.launch$default
  [18] io.ktor.utils.io.CoroutinesKt.launchChannel
  [19] io.ktor.utils.io.CoroutinesKt.writer
  [20] io.ktor.util.cio.FileChannelsKt.readChannel
  [21] io.ktor.util.cio.FileChannelsKt.readChannel$default
  [22] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [23] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [24] kotlinx.coroutines.DispatchedTask.run
  [25] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [26] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [27] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [28] kotlinx.coroutines.BuildersKt.runBlocking
  [29] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [30] kotlinx.coroutines.BuildersKt.runBlocking$default
  [31] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [32] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [33] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [34] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [35] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [36] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [37] java.lang.reflect.Method.invoke
  [38] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [39] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [40] java.util.concurrent.FutureTask.run
  [41] java.util.concurrent.Executors$RunnableAdapter.call
  [42] java.util.concurrent.FutureTask.run
  [43] java.util.concurrent.ThreadPoolExecutor.runWorker
  [44] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [45] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] __unlink
  [ 1] [unknown]
  [ 2] Java_java_io_UnixFileSystem_delete0
  [ 3] java.io.UnixFileSystem.delete0
  [ 4] java.io.UnixFileSystem.delete
  [ 5] java.io.File.delete
  [ 6] io.ktor.benchmarks.FileBenchmarks.cleanup
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.nio.Buffer.clear
  [ 1] java.nio.ByteBuffer.clear
  [ 2] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 6] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [10] kotlinx.coroutines.BuildersKt.runBlocking$default
  [11] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] Profiler::addJavaMethod(void const*, int, _jmethodID*)
  [ 1] JvmtiExport::post_compiled_method_load(nmethod*)
  [ 2] ServiceThread::service_thread_entry(JavaThread*, Thread*)
  [ 3] JavaThread::thread_main_inner()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] __os_ch_md_redzone_cookie
  [ 7] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.core.internal.ChunkBuffer.<init>
  [ 1] io.ktor.utils.io.core.internal.ChunkBuffer.<init>
  [ 2] io.ktor.utils.io.core.IoBuffer.<init>
  [ 3] io.ktor.utils.io.core.IoBuffer.<init>
  [ 4] io.ktor.utils.io.core.IoBuffer.<init>
  [ 5] io.ktor.utils.io.core.IoBuffer.<init>
  [ 6] io.ktor.utils.io.core.IoBuffer.<init>
  [ 7] io.ktor.utils.io.internal.WriteSessionImpl.begin
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeSuspendSession$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeSuspendSession
  [10] io.ktor.util.cio.FileChannelsKt$readChannel$1.invokeSuspend
  [11] io.ktor.util.cio.FileChannelsKt$readChannel$1.invoke
  [12] io.ktor.util.cio.FileChannelsKt$readChannel$1.invoke
  [13] io.ktor.utils.io.CoroutinesKt$launchChannel$job$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.internal.DispatchedContinuationKt.resumeCancellableWith
  [16] kotlinx.coroutines.intrinsics.CancellableKt.startCoroutineCancellable
  [17] kotlinx.coroutines.BuildersKt__Builders_commonKt.startCoroutineImpl
  [18] kotlinx.coroutines.BuildersKt.startCoroutineImpl
  [19] kotlinx.coroutines.AbstractCoroutine.start
  [20] kotlinx.coroutines.BuildersKt__Builders_commonKt.launch
  [21] kotlinx.coroutines.BuildersKt.launch
  [22] kotlinx.coroutines.BuildersKt__Builders_commonKt.launch$default
  [23] kotlinx.coroutines.BuildersKt.launch$default
  [24] io.ktor.utils.io.CoroutinesKt.launchChannel
  [25] io.ktor.utils.io.CoroutinesKt.writer
  [26] io.ktor.util.cio.FileChannelsKt.readChannel
  [27] io.ktor.util.cio.FileChannelsKt.readChannel$default
  [28] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [29] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [30] kotlinx.coroutines.DispatchedTask.run
  [31] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [32] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [33] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [34] kotlinx.coroutines.BuildersKt.runBlocking
  [35] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [36] kotlinx.coroutines.BuildersKt.runBlocking$default
  [37] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [38] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [39] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [40] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [41] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [42] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [43] java.lang.reflect.Method.invoke
  [44] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [45] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [46] java.util.concurrent.FutureTask.run
  [47] java.util.concurrent.Executors$RunnableAdapter.call
  [48] java.util.concurrent.FutureTask.run
  [49] java.util.concurrent.ThreadPoolExecutor.runWorker
  [50] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [51] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.nio.channels.spi.AbstractInterruptibleChannel.blockedOn
  [ 1] java.nio.channels.spi.AbstractInterruptibleChannel.end
  [ 2] sun.nio.ch.FileChannelImpl.endBlocking
  [ 3] sun.nio.ch.FileChannelImpl.read
  [ 4] io.ktor.util.BufferViewJvmKt.read
  [ 5] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 9] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [10] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [13] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [17] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [21] kotlinx.coroutines.BuildersKt.runBlocking$default
  [22] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] jdk.internal.access.SharedSecrets.getJavaLangAccess
  [ 1] java.nio.channels.spi.AbstractInterruptibleChannel.blockedOn
  [ 2] java.nio.channels.spi.AbstractInterruptibleChannel.begin
  [ 3] sun.nio.ch.FileChannelImpl.beginBlocking
  [ 4] sun.nio.ch.FileChannelImpl.read
  [ 5] io.ktor.util.BufferViewJvmKt.read
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [10] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [11] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [14] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.lang.Thread.isInterrupted
  [ 1] java.nio.channels.spi.AbstractInterruptibleChannel.begin
  [ 2] sun.nio.ch.FileChannelImpl.beginBlocking
  [ 3] sun.nio.ch.FileChannelImpl.read
  [ 4] io.ktor.util.BufferViewJvmKt.read
  [ 5] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 9] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [10] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [13] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [17] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [21] kotlinx.coroutines.BuildersKt.runBlocking$default
  [22] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 5] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [10] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [11] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [14] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.nio.Buffer.limit
  [ 1] java.nio.ByteBuffer.limit
  [ 2] java.nio.MappedByteBuffer.limit
  [ 3] java.nio.MappedByteBuffer.limit
  [ 4] java.nio.Buffer.<init>
  [ 5] java.nio.ByteBuffer.<init>
  [ 6] java.nio.ByteBuffer.<init>
  [ 7] java.nio.MappedByteBuffer.<init>
  [ 8] java.nio.DirectByteBuffer.<init>
  [ 9] java.nio.DirectByteBuffer.duplicate
  [10] io.ktor.util.BufferViewJvmKt.read
  [11] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [14] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [15] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [16] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [17] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [18] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [19] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [20] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [21] kotlinx.coroutines.DispatchedTask.run
  [22] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [23] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [24] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [25] kotlinx.coroutines.BuildersKt.runBlocking
  [26] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [27] kotlinx.coroutines.BuildersKt.runBlocking$default
  [28] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [29] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [30] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [31] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [32] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [33] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [34] java.lang.reflect.Method.invoke
  [35] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [36] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [37] java.util.concurrent.FutureTask.run
  [38] java.util.concurrent.Executors$RunnableAdapter.call
  [39] java.util.concurrent.FutureTask.run
  [40] java.util.concurrent.ThreadPoolExecutor.runWorker
  [41] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [42] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] jdk.internal.misc.Unsafe.checkPrimitivePointer
  [ 1] jdk.internal.misc.Unsafe.copyMemoryChecks
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [11] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] ciKlass::java_mirror()
  [ 1] ciInstanceKlass::java_mirror()
  [ 2] GraphBuilder::access_field(Bytecodes::Code)
  [ 3] GraphBuilder::iterate_bytecodes_for_block(int)
  [ 4] GraphBuilder::iterate_all_blocks(bool)
  [ 5] GraphBuilder::GraphBuilder(Compilation*, IRScope*)
  [ 6] IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool)
  [ 7] IR::IR(Compilation*, ciMethod*, int)
  [ 8] Compilation::build_hir()
  [ 9] Compilation::compile_java_method()
  [10] Compilation::compile_method()
  [11] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [12] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [13] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [14] CompileBroker::compiler_thread_loop()
  [15] JavaThread::thread_main_inner()
  [16] Thread::call_run()
  [17] thread_native_entry(Thread*)
  [18] __os_ch_md_redzone_cookie
  [19] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] kotlin.jvm.internal.Intrinsics.checkNotNullParameter
  [ 1] kotlin.coroutines.jvm.internal.DebugProbesKt.probeCoroutineResumed
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 9] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [13] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [17] kotlinx.coroutines.BuildersKt.runBlocking$default
  [18] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] sun.nio.ch.IOUtil.read
  [ 1] sun.nio.ch.FileChannelImpl.read
  [ 2] io.ktor.util.BufferViewJvmKt.read
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [11] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] __os_ch_md_redzone_cookie
  [ 1] os::PlatformMonitor::wait(long)
  [ 2] Monitor::wait_without_safepoint_check(long long)
  [ 3] WatcherThread::sleep() const
  [ 4] WatcherThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] __os_ch_md_redzone_cookie
  [ 8] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 1] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 2] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 5] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [10] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [11] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [14] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
  [ 1] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 2] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 3] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.writeSuspendPredicate
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$writeSuspendPredicate
  [ 2] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 5] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [10] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [11] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [14] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.lang.Thread.blockedOn
  [ 1] java.lang.System$2.blockedOn
  [ 2] java.nio.channels.spi.AbstractInterruptibleChannel.blockedOn
  [ 3] java.nio.channels.spi.AbstractInterruptibleChannel.begin
  [ 4] sun.nio.ch.FileChannelImpl.beginBlocking
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [11] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [12] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [15] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] semaphore_wait_trap
  [ 1] GangWorker::loop()
  [ 2] Thread::call_run()
  [ 3] thread_native_entry(Thread*)
  [ 4] __os_ch_md_redzone_cookie
  [ 5] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 1] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 2] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 3] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 4] kotlinx.coroutines.intrinsics.CancellableKt.startCoroutineCancellable
  [ 5] kotlinx.coroutines.BuildersKt__Builders_commonKt.startCoroutineImpl
  [ 6] kotlinx.coroutines.BuildersKt.startCoroutineImpl
  [ 7] kotlinx.coroutines.AbstractCoroutine.start
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [11] kotlinx.coroutines.BuildersKt.runBlocking$default
  [12] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [14] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getClosed
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeSuspendPredicate
  [ 2] io.ktor.utils.io.ByteBufferChannel.access$writeSuspendPredicate
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 5] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 6] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [11] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [12] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [15] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] __psynch_mutexwait
  [ 1] err_codes_iokit_usb
  [ 2] __os_ch_md_redzone_cookie
  [ 3] os::PlatformMonitor::wait(long)
  [ 4] Monitor::wait(long long, bool)
  [ 5] CompileQueue::get()
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] __os_ch_md_redzone_cookie
  [11] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 1] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 2] java.nio.ByteBuffer.putBuffer
  [ 3] java.nio.ByteBuffer.put
  [ 4] java.nio.HeapByteBuffer.put
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] jdk.internal.misc.Unsafe.checkPrimitivePointer
  [ 1] jdk.internal.misc.Unsafe.copyMemoryChecks
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [11] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadUnconfined
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadUnconfined_jmhTest.testKtorFileReadUnconfined_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

          ns  percent  samples  top
  ----------  -------  -------  ---
 35510000000   77.80%     3551  read
  1480000000    3.24%      148  kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
  1020000000    2.23%      102  jlong_disjoint_arraycopy
   780000000    1.71%       78  Java_sun_nio_ch_FileDispatcherImpl_read0
   640000000    1.40%       64  sun.nio.ch.FileDispatcherImpl.read0
   460000000    1.01%       46  java.lang.Thread.blockedOn
   360000000    0.79%       36  io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
   310000000    0.68%       31  sun.nio.ch.NativeThreadSet.remove
   300000000    0.66%       30  java.nio.channels.spi.AbstractInterruptibleChannel.begin
   300000000    0.66%       30  sun.nio.ch.NativeThread.current
   270000000    0.59%       27  java.nio.channels.spi.AbstractInterruptibleChannel.isOpen
   250000000    0.55%       25  java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
   200000000    0.44%       20  sun.nio.ch.FileChannelImpl.read
   200000000    0.44%       20  sun.nio.ch.NativeThreadSet.add
   200000000    0.44%       20  kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
   190000000    0.42%       19  convertReturnVal
   190000000    0.42%       19  io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
   180000000    0.39%       18  java.lang.Thread.isInterrupted
   180000000    0.39%       18  kotlinx.coroutines.internal.DispatchedContinuation.getContext
   140000000    0.31%       14  io.ktor.utils.io.internal.RingBufferCapacity.flush
   130000000    0.28%       13  sun.nio.ch.IOUtil.readIntoNativeBuffer
   120000000    0.26%       12  java.nio.ByteBuffer.position
   110000000    0.24%       11  jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
    90000000    0.20%        9  semaphore_wait_trap
    90000000    0.20%        9  io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
    90000000    0.20%        9  io.ktor.utils.io.ByteBufferChannel.writeSuspendPredicate
    80000000    0.18%        8  io.ktor.benchmarks.FileBenchmarks$testKtorFileReadUnconfined$1.invokeSuspend
    80000000    0.18%        8  java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.getAndSet
    80000000    0.18%        8  io.ktor.utils.io.ByteBufferChannel.flushImpl
    70000000    0.15%        7  java.nio.Buffer.limit
    70000000    0.15%        7  java.nio.channels.spi.AbstractInterruptibleChannel.end
    70000000    0.15%        7  java.nio.ByteBuffer.put
    70000000    0.15%        7  __psynch_cvwait
    60000000    0.13%        6  io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
    50000000    0.11%        5  java.nio.Buffer.position
    50000000    0.11%        5  io.ktor.utils.io.ByteBufferChannel.isClosedForRead
    50000000    0.11%        5  internal_catch_exc_subsystem
    50000000    0.11%        5  io.ktor.utils.io.ByteBufferChannel.getClosed
    50000000    0.11%        5  __open
    40000000    0.09%        4  io.ktor.utils.io.ByteBufferChannel.getState
    40000000    0.09%        4  fdval
    30000000    0.07%        3  Interpreter
    30000000    0.07%        3  Java_sun_nio_ch_NativeThread_current
    30000000    0.07%        3  kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
    30000000    0.07%        3  io.ktor.utils.io.ByteBufferChannel.shouldResumeReadOp
    30000000    0.07%        3  io.ktor.utils.io.ByteBufferChannel.setupStateForRead
    20000000    0.04%        2  java.nio.ByteBuffer.putBuffer
    20000000    0.04%        2  __psynch_mutexwait
    20000000    0.04%        2  kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
    20000000    0.04%        2  jdk.internal.misc.Unsafe.checkPrimitivePointer
    20000000    0.04%        2  [unknown]
    20000000    0.04%        2  kotlinx.coroutines.ThreadLocalEventLoop.getEventLoop$kotlinx_coroutines_core
    20000000    0.04%        2  io.ktor.utils.io.ByteBufferChannel.prepareBuffer
    20000000    0.04%        2  io.ktor.utils.io.internal.WriteSessionImpl.request
    20000000    0.04%        2  java.nio.Buffer.scope
    20000000    0.04%        2  JNI_OnLoad
    20000000    0.04%        2  java.lang.Class.getComponentType
    20000000    0.04%        2  java.lang.Integer.intValue
    20000000    0.04%        2  io.ktor.utils.io.ByteBufferChannel.access$getWriteSuspensionSize$p
    20000000    0.04%        2  sun.nio.ch.FileDispatcherImpl.read
    20000000    0.04%        2  unsafe_arraycopy
    10000000    0.02%        1  java.nio.Buffer.clear
    10000000    0.02%        1  java.lang.Thread.interrupted
    10000000    0.02%        1  java.io.RandomAccessFile.close
    10000000    0.02%        1  java.io.RandomAccessFile$1.close
    10000000    0.02%        1  java.nio.ByteBuffer.limit
    10000000    0.02%        1  java.nio.ByteBuffer.order
    10000000    0.02%        1  io.ktor.utils.io.core.internal.ChunkBuffer.<init>
    10000000    0.02%        1  io.ktor.utils.io.core.IoBuffer.<init>
    10000000    0.02%        1  io.ktor.utils.io.ByteBufferChannel.setTotalBytesRead$ktor_io
    10000000    0.02%        1  io.ktor.utils.io.ByteBufferChannel.restoreStateAfterWrite$ktor_io
    10000000    0.02%        1  java.nio.channels.spi.AbstractInterruptibleChannel.blockedOn
    10000000    0.02%        1  io.ktor.utils.io.ByteBufferChannel.prepareWriteBuffer$ktor_io
    10000000    0.02%        1  io.ktor.utils.io.ByteBufferChannel.getWriteOp
    10000000    0.02%        1  java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.getAndSet
    10000000    0.02%        1  close
    10000000    0.02%        1  ciObjectFactory::ciObjectFactory(Arena*, int)
    10000000    0.02%        1  java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&, Thread*)
    10000000    0.02%        1  jdk.internal.access.SharedSecrets.getJavaLangAccess
    10000000    0.02%        1  ciKlass::java_mirror()
    10000000    0.02%        1  jdk.internal.misc.Unsafe.checkNativeAddress
    10000000    0.02%        1  jdk.internal.misc.Unsafe.checkPrimitiveArray
    10000000    0.02%        1  _platform_bzero$VARIANT$Haswell
    10000000    0.02%        1  jdk.internal.misc.Unsafe.copyMemory
    10000000    0.02%        1  _kernelrpc_mach_port_deallocate_trap
    10000000    0.02%        1  __unlink
    10000000    0.02%        1  kotlin.coroutines.jvm.internal.ContinuationImpl.getContext
    10000000    0.02%        1  __os_ch_md_redzone_cookie
    10000000    0.02%        1  kotlin.jvm.internal.Intrinsics.checkNotNullParameter
    10000000    0.02%        1  ValueMap::kill_memory()
    10000000    0.02%        1  kotlinx.coroutines.internal.DispatchedContinuation.<init>
    10000000    0.02%        1  Profiler::addJavaMethod(void const*, int, _jmethodID*)
    10000000    0.02%        1  NullCheckEliminator::NullCheckEliminator(Optimizer*)
    10000000    0.02%        1  kotlinx.coroutines.internal.DispatchedContinuationKt.resumeCancellableWith
    10000000    0.02%        1  Method::jmethod_id()
    10000000    0.02%        1  mach_msg_trap
    10000000    0.02%        1  Method::invocation_count()
    10000000    0.02%        1  LIR_OpVisitState::visit(LIR_Op*)
    10000000    0.02%        1  stat$INODE64
    10000000    0.02%        1  If::If(Instruction*, Instruction::Condition, bool, Instruction*, BlockBegin*, BlockBegin*, ValueStack*, bool)
    10000000    0.02%        1  GraphBuilder::iterate_bytecodes_for_block(int)
    10000000    0.02%        1  G1Allocator::unsafe_max_tlab_alloc()
    10000000    0.02%        1  sun.nio.ch.IOUtil.read
    10000000    0.02%        1  ExceptionHandlerTable::ExceptionHandlerTable(int)
    10000000    0.02%        1  Compile::Code_Gen()
    10000000    0.02%        1  CodeBuffer::copy_code_to(CodeBlob*)
    10000000    0.02%        1  BlockListBuilder::make_block_at(int, BlockBegin*)
    10000000    0.02%        1  thread_self_trap
    10000000    0.02%        1  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<598116ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 598116ull>::oop_access_barrier(void*)
    10000000    0.02%        1  write

