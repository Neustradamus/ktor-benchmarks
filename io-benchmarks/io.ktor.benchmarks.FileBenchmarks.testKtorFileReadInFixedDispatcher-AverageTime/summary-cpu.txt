--- Execution profile ---
Total samples       : 4451
deoptimization      : 1 (0.02%)

--- 15300000000 ns (34.37%), 1530 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 5300000000 ns (11.91%), 530 samples
  [ 0] __psynch_cvsignal
  [ 1] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 6] java.util.concurrent.locks.ReentrantLock.unlock
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [10] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [11] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [12] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [13] kotlinx.coroutines.ExecutorCoroutineDispatcherBase.dispatch
  [14] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [15] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [16] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [17] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [18] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [19] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [20] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [21] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [22] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [23] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [24] kotlinx.coroutines.DispatchedTask.run
  [25] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [26] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [27] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [28] kotlinx.coroutines.BuildersKt.runBlocking
  [29] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [30] kotlinx.coroutines.BuildersKt.runBlocking$default
  [31] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [32] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [33] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [34] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [35] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [36] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [37] java.lang.reflect.Method.invoke
  [38] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [39] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [40] java.util.concurrent.FutureTask.run
  [41] java.util.concurrent.Executors$RunnableAdapter.call
  [42] java.util.concurrent.FutureTask.run
  [43] java.util.concurrent.ThreadPoolExecutor.runWorker
  [44] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [45] java.lang.Thread.run

--- 4390000000 ns (9.86%), 439 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.park
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 6] java.util.concurrent.ForkJoinPool.managedBlock
  [ 7] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [10] java.util.concurrent.ThreadPoolExecutor.getTask
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 2810000000 ns (6.31%), 281 samples
  [ 0] jdk.internal.misc.Unsafe.park
  [ 1] java.util.concurrent.locks.LockSupport.parkNanos
  [ 2] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 3] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 4] kotlinx.coroutines.BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 7] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [12] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 2260000000 ns (5.08%), 226 samples
  [ 0] read
  [ 1] sun.nio.ch.FileDispatcherImpl.read0
  [ 2] sun.nio.ch.FileDispatcherImpl.read
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] java.util.concurrent.Executors$RunnableAdapter.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.run

--- 1750000000 ns (3.93%), 175 samples
  [ 0] __gettimeofday
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 1380000000 ns (3.10%), 138 samples
  [ 0] jdk.internal.misc.Unsafe.park
  [ 1] java.util.concurrent.locks.LockSupport.park
  [ 2] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 3] java.util.concurrent.ForkJoinPool.managedBlock
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 7] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 8] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 9] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [10] java.lang.Thread.run

--- 1060000000 ns (2.38%), 106 samples
  [ 0] __psynch_cvsignal
  [ 1] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] kotlinx.coroutines.EventLoopImplPlatform.unpark
  [ 5] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 6] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [10] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [11] io.ktor.utils.io.ByteBufferChannel.flush
  [12] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 680000000 ns (1.53%), 68 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] io.ktor.utils.io.internal.RingBufferCapacity.tryReadAtMost
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 550000000 ns (1.24%), 55 samples
  [ 0] kotlin.coroutines.jvm.internal.Boxing.boxBoolean
  [ 1] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInFixedDispatcher$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 390000000 ns (0.88%), 39 samples
  [ 0] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.parkNanos
  [ 3] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 8] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 380000000 ns (0.85%), 38 samples
  [ 0] __os_ch_md_redzone_cookie
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 310000000 ns (0.70%), 31 samples
  [ 0] os::javaTimeNanos()
  [ 1] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [ 2] kotlinx.coroutines.ExecutorCoroutineDispatcherBase.dispatch
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [10] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [11] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 310000000 ns (0.70%), 31 samples
  [ 0] err_codes_mach_rcv
  [ 1] __os_ch_md_redzone_cookie
  [ 2] Parker::park(bool, long)
  [ 3] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 4] jdk.internal.misc.Unsafe.park
  [ 5] java.util.concurrent.locks.LockSupport.parkNanos
  [ 6] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [10] kotlinx.coroutines.BuildersKt.runBlocking$default
  [11] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 310000000 ns (0.70%), 31 samples
  [ 0] Parker::park(bool, long)
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 260000000 ns (0.58%), 26 samples
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 220000000 ns (0.49%), 22 samples
  [ 0] err_codes_mach_rcv
  [ 1] Parker::unpark()
  [ 2] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 3] jdk.internal.misc.Unsafe.unpark
  [ 4] java.util.concurrent.locks.LockSupport.unpark
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 7] java.util.concurrent.locks.ReentrantLock.unlock
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [10] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [11] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [12] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [13] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [14] kotlinx.coroutines.ExecutorCoroutineDispatcherBase.dispatch
  [15] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [16] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [17] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [18] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [19] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [20] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [21] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [22] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [23] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [24] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [25] kotlinx.coroutines.DispatchedTask.run
  [26] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [27] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [28] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [29] kotlinx.coroutines.BuildersKt.runBlocking
  [30] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [31] kotlinx.coroutines.BuildersKt.runBlocking$default
  [32] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [33] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [34] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [35] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [36] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [37] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [38] java.lang.reflect.Method.invoke
  [39] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [40] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [41] java.util.concurrent.FutureTask.run
  [42] java.util.concurrent.Executors$RunnableAdapter.call
  [43] java.util.concurrent.FutureTask.run
  [44] java.util.concurrent.ThreadPoolExecutor.runWorker
  [45] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [46] java.lang.Thread.run

--- 170000000 ns (0.38%), 17 samples
  [ 0] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 1] jdk.internal.misc.Unsafe.unpark
  [ 2] java.util.concurrent.locks.LockSupport.unpark
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 5] java.util.concurrent.locks.ReentrantLock.unlock
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [10] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [11] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [12] kotlinx.coroutines.ExecutorCoroutineDispatcherBase.dispatch
  [13] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [14] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [15] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [16] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [17] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [18] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [19] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [20] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [21] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [22] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [23] kotlinx.coroutines.DispatchedTask.run
  [24] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [25] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [26] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [27] kotlinx.coroutines.BuildersKt.runBlocking
  [28] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [29] kotlinx.coroutines.BuildersKt.runBlocking$default
  [30] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [31] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [32] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [33] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [34] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [35] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [36] java.lang.reflect.Method.invoke
  [37] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [38] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [39] java.util.concurrent.FutureTask.run
  [40] java.util.concurrent.Executors$RunnableAdapter.call
  [41] java.util.concurrent.FutureTask.run
  [42] java.util.concurrent.ThreadPoolExecutor.runWorker
  [43] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [44] java.lang.Thread.run

--- 160000000 ns (0.36%), 16 samples
  [ 0] kotlin.coroutines.jvm.internal.Boxing.boxBoolean
  [ 1] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [14] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 140000000 ns (0.31%), 14 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
  [ 1] kotlinx.coroutines.EventLoopImplBase.dequeue
  [ 2] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 3] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 8] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 140000000 ns (0.31%), 14 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 130000000 ns (0.29%), 13 samples
  [ 0] err_codes_iokit_usb
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.park
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 6] java.util.concurrent.ForkJoinPool.managedBlock
  [ 7] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [10] java.util.concurrent.ThreadPoolExecutor.getTask
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 130000000 ns (0.29%), 13 samples
  [ 0] err_codes_iokit_usb
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 130000000 ns (0.29%), 13 samples
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.releaseIntercepted
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 130000000 ns (0.29%), 13 samples
  [ 0] __commpage_gettimeofday_internal
  [ 1] [unknown]
  [ 2] [unknown]
  [ 3] to_abstime(timespec*, long, bool, bool)
  [ 4] Parker::park(bool, long)
  [ 5] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 6] jdk.internal.misc.Unsafe.park
  [ 7] java.util.concurrent.locks.LockSupport.parkNanos
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [14] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 120000000 ns (0.27%), 12 samples
  [ 0] err_codes_iokit_usb
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 110000000 ns (0.25%), 11 samples
  [ 0] __os_ch_md_redzone_cookie
  [ 1] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 6] java.util.concurrent.locks.ReentrantLock.unlock
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [10] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [11] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [12] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [13] kotlinx.coroutines.ExecutorCoroutineDispatcherBase.dispatch
  [14] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [15] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [16] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [17] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [18] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [19] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [20] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [21] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [22] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [23] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [24] kotlinx.coroutines.DispatchedTask.run
  [25] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [26] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [27] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [28] kotlinx.coroutines.BuildersKt.runBlocking
  [29] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [30] kotlinx.coroutines.BuildersKt.runBlocking$default
  [31] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [32] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [33] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [34] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [35] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [36] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [37] java.lang.reflect.Method.invoke
  [38] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [39] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [40] java.util.concurrent.FutureTask.run
  [41] java.util.concurrent.Executors$RunnableAdapter.call
  [42] java.util.concurrent.FutureTask.run
  [43] java.util.concurrent.ThreadPoolExecutor.runWorker
  [44] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [45] java.lang.Thread.run

--- 110000000 ns (0.25%), 11 samples
  [ 0] JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool)
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 110000000 ns (0.25%), 11 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 110000000 ns (0.25%), 11 samples
  [ 0] __psynch_mutexwait
  [ 1] err_codes_iokit_usb
  [ 2] Parker::unpark()
  [ 3] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 4] jdk.internal.misc.Unsafe.unpark
  [ 5] java.util.concurrent.locks.LockSupport.unpark
  [ 6] kotlinx.coroutines.EventLoopImplPlatform.unpark
  [ 7] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 8] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [11] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [12] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [13] io.ktor.utils.io.ByteBufferChannel.flush
  [14] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 100000000 ns (0.22%), 10 samples
  [ 0] internal_catch_exc_subsystem
  [ 1] __os_ch_md_redzone_cookie
  [ 2] Parker::park(bool, long)
  [ 3] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 4] jdk.internal.misc.Unsafe.park
  [ 5] java.util.concurrent.locks.LockSupport.parkNanos
  [ 6] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [10] kotlinx.coroutines.BuildersKt.runBlocking$default
  [11] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 100000000 ns (0.22%), 10 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.internal.RingBufferCapacity.tryReadAtMost
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 90000000 ns (0.20%), 9 samples
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 4] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 5] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 6] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 7] java.lang.Thread.run

--- 90000000 ns (0.20%), 9 samples
  [ 0] __os_ch_md_redzone_cookie
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.park
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 6] java.util.concurrent.ForkJoinPool.managedBlock
  [ 7] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [10] java.util.concurrent.ThreadPoolExecutor.getTask
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 90000000 ns (0.20%), 9 samples
  [ 0] mach_absolute_time
  [ 1] os::javaTimeNanos()
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [ 3] kotlinx.coroutines.ExecutorCoroutineDispatcherBase.dispatch
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [11] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [12] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 80000000 ns (0.18%), 8 samples
  [ 0] Parker::park(bool, long)
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.park
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 5] java.util.concurrent.ForkJoinPool.managedBlock
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 9] java.util.concurrent.ThreadPoolExecutor.getTask
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

--- 80000000 ns (0.18%), 8 samples
  [ 0] internal_catch_exc_subsystem
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 80000000 ns (0.18%), 8 samples
  [ 0] err_codes_mach_rcv
  [ 1] __os_ch_md_redzone_cookie
  [ 2] Parker::park(bool, long)
  [ 3] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 4] jdk.internal.misc.Unsafe.park
  [ 5] java.util.concurrent.locks.LockSupport.park
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] java.util.concurrent.ForkJoinPool.managedBlock
  [ 8] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [10] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [11] java.util.concurrent.ThreadPoolExecutor.getTask
  [12] java.util.concurrent.ThreadPoolExecutor.runWorker
  [13] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [14] java.lang.Thread.run

--- 80000000 ns (0.18%), 8 samples
  [ 0] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.park
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 4] java.util.concurrent.ForkJoinPool.managedBlock
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 8] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 9] java.util.concurrent.ThreadPoolExecutor.runWorker
  [10] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [11] java.lang.Thread.run

--- 80000000 ns (0.18%), 8 samples
  [ 0] to_abstime(timespec*, long, bool, bool)
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 80000000 ns (0.18%), 8 samples
  [ 0] [unknown]
  [ 1] to_abstime(timespec*, long, bool, bool)
  [ 2] Parker::park(bool, long)
  [ 3] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 4] jdk.internal.misc.Unsafe.park
  [ 5] java.util.concurrent.locks.LockSupport.parkNanos
  [ 6] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [10] kotlinx.coroutines.BuildersKt.runBlocking$default
  [11] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 70000000 ns (0.16%), 7 samples
  [ 0] java_lang_Thread::set_thread_status(oopDesc*, JavaThreadStatus)
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 70000000 ns (0.16%), 7 samples
  [ 0] kotlinx.coroutines.AbstractTimeSourceKt.getTimeSource
  [ 1] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 2] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 3] kotlinx.coroutines.BuildersKt.runBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 6] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 70000000 ns (0.16%), 7 samples
  [ 0] SafeThreadsListPtr::release_stable_list()
  [ 1] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 6] java.util.concurrent.locks.ReentrantLock.unlock
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [10] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [11] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [12] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [13] kotlinx.coroutines.ExecutorCoroutineDispatcherBase.dispatch
  [14] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [15] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [16] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [17] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [18] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [19] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [20] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [21] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [22] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [23] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [24] kotlinx.coroutines.DispatchedTask.run
  [25] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [26] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [27] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [28] kotlinx.coroutines.BuildersKt.runBlocking
  [29] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [30] kotlinx.coroutines.BuildersKt.runBlocking$default
  [31] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [32] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [33] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [34] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [35] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [36] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [37] java.lang.reflect.Method.invoke
  [38] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [39] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [40] java.util.concurrent.FutureTask.run
  [41] java.util.concurrent.Executors$RunnableAdapter.call
  [42] java.util.concurrent.FutureTask.run
  [43] java.util.concurrent.ThreadPoolExecutor.runWorker
  [44] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [45] java.lang.Thread.run

--- 70000000 ns (0.16%), 7 samples
  [ 0] ThreadsListHandle::ThreadsListHandle(Thread*)
  [ 1] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 6] java.util.concurrent.locks.ReentrantLock.unlock
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [10] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [11] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [12] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [13] kotlinx.coroutines.ExecutorCoroutineDispatcherBase.dispatch
  [14] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [15] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [16] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [17] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [18] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [19] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [20] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [21] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [22] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [23] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [24] kotlinx.coroutines.DispatchedTask.run
  [25] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [26] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [27] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [28] kotlinx.coroutines.BuildersKt.runBlocking
  [29] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [30] kotlinx.coroutines.BuildersKt.runBlocking$default
  [31] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [32] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [33] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [34] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [35] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [36] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [37] java.lang.reflect.Method.invoke
  [38] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [39] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [40] java.util.concurrent.FutureTask.run
  [41] java.util.concurrent.Executors$RunnableAdapter.call
  [42] java.util.concurrent.FutureTask.run
  [43] java.util.concurrent.ThreadPoolExecutor.runWorker
  [44] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [45] java.lang.Thread.run

--- 70000000 ns (0.16%), 7 samples
  [ 0] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.<init>
  [ 1] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [ 3] kotlinx.coroutines.ExecutorCoroutineDispatcherBase.dispatch
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [11] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [12] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 60000000 ns (0.13%), 6 samples
  [ 0] err_codes_iokit_usb
  [ 1] Parker::unpark()
  [ 2] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 3] jdk.internal.misc.Unsafe.unpark
  [ 4] java.util.concurrent.locks.LockSupport.unpark
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 7] java.util.concurrent.locks.ReentrantLock.unlock
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [10] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [11] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [12] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [13] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [14] kotlinx.coroutines.ExecutorCoroutineDispatcherBase.dispatch
  [15] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [16] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [17] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [18] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [19] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [20] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [21] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [22] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [23] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [24] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [25] kotlinx.coroutines.DispatchedTask.run
  [26] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [27] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [28] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [29] kotlinx.coroutines.BuildersKt.runBlocking
  [30] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [31] kotlinx.coroutines.BuildersKt.runBlocking$default
  [32] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [33] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [34] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [35] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [36] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [37] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [38] java.lang.reflect.Method.invoke
  [39] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [40] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [41] java.util.concurrent.FutureTask.run
  [42] java.util.concurrent.Executors$RunnableAdapter.call
  [43] java.util.concurrent.FutureTask.run
  [44] java.util.concurrent.ThreadPoolExecutor.runWorker
  [45] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [46] java.lang.Thread.run

--- 60000000 ns (0.13%), 6 samples
  [ 0] java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock
  [ 2] java.util.concurrent.locks.ReentrantLock$Sync.lock
  [ 3] java.util.concurrent.locks.ReentrantLock.lock
  [ 4] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [10] kotlinx.coroutines.ExecutorCoroutineDispatcherBase.dispatch
  [11] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [12] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [13] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [14] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [15] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [16] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [17] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [18] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [19] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [20] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [21] kotlinx.coroutines.DispatchedTask.run
  [22] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [23] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [24] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [25] kotlinx.coroutines.BuildersKt.runBlocking
  [26] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [27] kotlinx.coroutines.BuildersKt.runBlocking$default
  [28] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [29] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [30] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [31] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [32] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [33] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [34] java.lang.reflect.Method.invoke
  [35] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [36] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [37] java.util.concurrent.FutureTask.run
  [38] java.util.concurrent.Executors$RunnableAdapter.call
  [39] java.util.concurrent.FutureTask.run
  [40] java.util.concurrent.ThreadPoolExecutor.runWorker
  [41] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [42] java.lang.Thread.run

--- 60000000 ns (0.13%), 6 samples
  [ 0] err_codes_mach_rcv
  [ 1] Parker::unpark()
  [ 2] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 3] jdk.internal.misc.Unsafe.unpark
  [ 4] java.util.concurrent.locks.LockSupport.unpark
  [ 5] kotlinx.coroutines.EventLoopImplPlatform.unpark
  [ 6] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 7] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [11] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [12] io.ktor.utils.io.ByteBufferChannel.flush
  [13] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 60000000 ns (0.13%), 6 samples
  [ 0] os::javaTimeNanos()
  [ 1] java.util.concurrent.locks.ReentrantLock$Sync.lockInterruptibly
  [ 2] java.util.concurrent.locks.ReentrantLock.lockInterruptibly
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 4] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 5] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 6] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 7] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 8] java.lang.Thread.run

--- 60000000 ns (0.13%), 6 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 1] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInFixedDispatcher$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 60000000 ns (0.13%), 6 samples
  [ 0] err_codes_mach_rcv
  [ 1] Mutex::lock_without_safepoint_check()
  [ 2] Parker::park(bool, long)
  [ 3] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 4] jdk.internal.misc.Unsafe.park
  [ 5] java.util.concurrent.locks.LockSupport.parkNanos
  [ 6] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [10] kotlinx.coroutines.BuildersKt.runBlocking$default
  [11] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 60000000 ns (0.13%), 6 samples
  [ 0] itable stub
  [ 1] kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 50000000 ns (0.11%), 5 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 50000000 ns (0.11%), 5 samples
  [ 0] JavaThread::threadObj() const
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 50000000 ns (0.11%), 5 samples
  [ 0] ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**)
  [ 1] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 6] java.util.concurrent.locks.ReentrantLock.unlock
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [10] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [11] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [12] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [13] kotlinx.coroutines.ExecutorCoroutineDispatcherBase.dispatch
  [14] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [15] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [16] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [17] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [18] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [19] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [20] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [21] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [22] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [23] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [24] kotlinx.coroutines.DispatchedTask.run
  [25] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [26] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [27] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [28] kotlinx.coroutines.BuildersKt.runBlocking
  [29] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [30] kotlinx.coroutines.BuildersKt.runBlocking$default
  [31] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [32] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [33] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [34] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [35] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [36] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [37] java.lang.reflect.Method.invoke
  [38] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [39] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [40] java.util.concurrent.FutureTask.run
  [41] java.util.concurrent.Executors$RunnableAdapter.call
  [42] java.util.concurrent.FutureTask.run
  [43] java.util.concurrent.ThreadPoolExecutor.runWorker
  [44] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [45] java.lang.Thread.run

--- 50000000 ns (0.11%), 5 samples
  [ 0] kotlinx.coroutines.ExecutorCoroutineDispatcherBase.dispatch
  [ 1] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 2] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 3] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [13] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [17] kotlinx.coroutines.BuildersKt.runBlocking$default
  [18] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 50000000 ns (0.11%), 5 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.valueCheck
  [ 1] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
  [ 2] kotlinx.coroutines.EventLoopImplBase.enqueueImpl
  [ 3] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 4] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [12] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [13] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [17] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [21] kotlinx.coroutines.BuildersKt.runBlocking$default
  [22] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 50000000 ns (0.11%), 5 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 1] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.flush
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] java.util.concurrent.Executors$RunnableAdapter.call
  [ 7] java.util.concurrent.FutureTask.run
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 9] java.util.concurrent.ThreadPoolExecutor.runWorker
  [10] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [11] java.lang.Thread.run

--- 50000000 ns (0.11%), 5 samples
  [ 0] itable stub
  [ 1] kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] java.util.concurrent.Executors$RunnableAdapter.call
  [ 4] java.util.concurrent.FutureTask.run
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 6] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 7] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 8] java.lang.Thread.run

--- 50000000 ns (0.11%), 5 samples
  [ 0] kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] java.util.concurrent.Executors$RunnableAdapter.call
  [ 3] java.util.concurrent.FutureTask.run
  [ 4] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 5] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 6] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 7] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] [unknown]
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] java.lang.Integer.intValue
  [ 1] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInFixedDispatcher$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] pthread_dependency_wait_np.cold.3
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 3] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 8] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] kotlinx.coroutines.EventLoop.processUnconfinedEvent
  [ 1] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 2] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 3] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 4] kotlinx.coroutines.BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 7] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [12] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 3] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 8] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.getContext
  [ 1] kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
  [ 1] kotlinx.coroutines.EventLoopImplBase.enqueueImpl
  [ 2] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 3] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [11] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [12] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] err_codes_mach_rcv
  [ 1] Mutex::lock_without_safepoint_check()
  [ 2] Parker::park(bool, long)
  [ 3] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 4] jdk.internal.misc.Unsafe.park
  [ 5] java.util.concurrent.locks.LockSupport.park
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] java.util.concurrent.ForkJoinPool.managedBlock
  [ 8] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [10] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [11] java.util.concurrent.ThreadPoolExecutor.getTask
  [12] java.util.concurrent.ThreadPoolExecutor.runWorker
  [13] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [14] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 1] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 2] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 3] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] sun.nio.ch.FileDispatcherImpl.read0
  [ 1] sun.nio.ch.FileDispatcherImpl.read
  [ 2] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.FileChannelImpl.read
  [ 5] io.ktor.util.BufferViewJvmKt.read
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] java.util.concurrent.Executors$RunnableAdapter.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [12] java.util.concurrent.ThreadPoolExecutor.runWorker
  [13] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [14] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.<init>
  [ 1] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [ 3] kotlinx.coroutines.ExecutorCoroutineDispatcherBase.dispatch
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [11] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [12] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] __os_ch_md_redzone_cookie
  [ 1] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] kotlinx.coroutines.EventLoopImplPlatform.unpark
  [ 5] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 6] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [10] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [11] io.ktor.utils.io.ByteBufferChannel.flush
  [12] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] gCRAnnotations
  [ 1] __os_ch_md_redzone_cookie
  [ 2] Parker::park(bool, long)
  [ 3] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 4] jdk.internal.misc.Unsafe.park
  [ 5] java.util.concurrent.locks.LockSupport.parkNanos
  [ 6] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [10] kotlinx.coroutines.BuildersKt.runBlocking$default
  [11] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] mach_host_special_port_for_id.hsp_ids
  [ 1] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 6] java.util.concurrent.locks.ReentrantLock.unlock
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [10] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [11] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [12] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [13] kotlinx.coroutines.ExecutorCoroutineDispatcherBase.dispatch
  [14] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [15] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [16] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [17] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [18] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [19] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [20] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [21] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [22] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [23] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [24] kotlinx.coroutines.DispatchedTask.run
  [25] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [26] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [27] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [28] kotlinx.coroutines.BuildersKt.runBlocking
  [29] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [30] kotlinx.coroutines.BuildersKt.runBlocking$default
  [31] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [32] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [33] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [34] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [35] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [36] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [37] java.lang.reflect.Method.invoke
  [38] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [39] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [40] java.util.concurrent.FutureTask.run
  [41] java.util.concurrent.Executors$RunnableAdapter.call
  [42] java.util.concurrent.FutureTask.run
  [43] java.util.concurrent.ThreadPoolExecutor.runWorker
  [44] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [45] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] oopDesc::address_field(int) const
  [ 1] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] kotlinx.coroutines.EventLoopImplPlatform.unpark
  [ 5] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 6] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [10] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [11] io.ktor.utils.io.ByteBufferChannel.flush
  [12] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState
  [ 1] java.util.concurrent.locks.ReentrantLock$NonfairSync.tryAcquire
  [ 2] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 4] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 6] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 7] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 8] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 9] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] mach_absolute_time
  [ 1] __commpage_gettimeofday_internal
  [ 2] [unknown]
  [ 3] [unknown]
  [ 4] to_abstime(timespec*, long, bool, bool)
  [ 5] Parker::park(bool, long)
  [ 6] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 7] jdk.internal.misc.Unsafe.park
  [ 8] java.util.concurrent.locks.LockSupport.parkNanos
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] __commpage_gettimeofday
  [ 1] [unknown]
  [ 2] to_abstime(timespec*, long, bool, bool)
  [ 3] Parker::park(bool, long)
  [ 4] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 5] jdk.internal.misc.Unsafe.park
  [ 6] java.util.concurrent.locks.LockSupport.parkNanos
  [ 7] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [11] kotlinx.coroutines.BuildersKt.runBlocking$default
  [12] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [14] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] SafeThreadsListPtr::release_stable_list()
  [ 1] jdk.internal.misc.Unsafe.unpark
  [ 2] java.util.concurrent.locks.LockSupport.unpark
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 5] java.util.concurrent.locks.ReentrantLock.unlock
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [10] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [11] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [12] kotlinx.coroutines.ExecutorCoroutineDispatcherBase.dispatch
  [13] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [14] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [15] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [16] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [17] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [18] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [19] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [20] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [21] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [22] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [23] kotlinx.coroutines.DispatchedTask.run
  [24] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [25] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [26] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [27] kotlinx.coroutines.BuildersKt.runBlocking
  [28] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [29] kotlinx.coroutines.BuildersKt.runBlocking$default
  [30] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [31] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [32] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [33] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [34] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [35] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [36] java.lang.reflect.Method.invoke
  [37] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [38] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [39] java.util.concurrent.FutureTask.run
  [40] java.util.concurrent.Executors$RunnableAdapter.call
  [41] java.util.concurrent.FutureTask.run
  [42] java.util.concurrent.ThreadPoolExecutor.runWorker
  [43] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [44] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 1] kotlin.coroutines.jvm.internal.Boxing.boxBoolean
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 1] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 2] kotlinx.coroutines.BuildersKt.runBlocking
  [ 3] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 4] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 5] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] __os_ch_md_redzone_cookie
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 1] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 2] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 3] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 4] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 9] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInFixedDispatcher$1.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [13] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [17] kotlinx.coroutines.BuildersKt.runBlocking$default
  [18] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 1] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 2] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 3] kotlinx.coroutines.BuildersKt.runBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 6] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ull>::oop_access_barrier(void*)
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 4] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 5] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 6] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 7] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] internal_catch_exc_subsystem
  [ 1] __os_ch_md_redzone_cookie
  [ 2] Parker::park(bool, long)
  [ 3] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 4] jdk.internal.misc.Unsafe.park
  [ 5] java.util.concurrent.locks.LockSupport.park
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] java.util.concurrent.ForkJoinPool.managedBlock
  [ 8] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [10] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [11] java.util.concurrent.ThreadPoolExecutor.getTask
  [12] java.util.concurrent.ThreadPoolExecutor.runWorker
  [13] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [14] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] oopDesc::address_field(int) const
  [ 1] ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**)
  [ 2] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 3] jdk.internal.misc.Unsafe.unpark
  [ 4] java.util.concurrent.locks.LockSupport.unpark
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 7] java.util.concurrent.locks.ReentrantLock.unlock
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [10] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [11] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [12] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [13] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [14] kotlinx.coroutines.ExecutorCoroutineDispatcherBase.dispatch
  [15] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [16] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [17] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [18] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [19] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [20] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [21] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [22] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [23] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [24] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [25] kotlinx.coroutines.DispatchedTask.run
  [26] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [27] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [28] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [29] kotlinx.coroutines.BuildersKt.runBlocking
  [30] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [31] kotlinx.coroutines.BuildersKt.runBlocking$default
  [32] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [33] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [34] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [35] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [36] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [37] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [38] java.lang.reflect.Method.invoke
  [39] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [40] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [41] java.util.concurrent.FutureTask.run
  [42] java.util.concurrent.Executors$RunnableAdapter.call
  [43] java.util.concurrent.FutureTask.run
  [44] java.util.concurrent.ThreadPoolExecutor.runWorker
  [45] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [46] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.tryWriteAtLeast
  [ 1] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] java.util.concurrent.Executors$RunnableAdapter.call
  [ 6] java.util.concurrent.FutureTask.run
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 8] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 9] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [10] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 1] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 4] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [10] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.signal
  [ 1] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 4] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [ 7] kotlinx.coroutines.ExecutorCoroutineDispatcherBase.dispatch
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [10] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [11] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [14] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [15] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [16] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [17] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [18] kotlinx.coroutines.DispatchedTask.run
  [19] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [20] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt.runBlocking
  [23] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [24] kotlinx.coroutines.BuildersKt.runBlocking$default
  [25] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [26] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [27] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [29] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [30] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [31] java.lang.reflect.Method.invoke
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.Executors$RunnableAdapter.call
  [36] java.util.concurrent.FutureTask.run
  [37] java.util.concurrent.ThreadPoolExecutor.runWorker
  [38] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [39] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.internal.RingBufferCapacity.tryWriteAtLeast
  [ 2] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] java.util.concurrent.Executors$RunnableAdapter.call
  [ 7] java.util.concurrent.FutureTask.run
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 9] java.util.concurrent.ThreadPoolExecutor.runWorker
  [10] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [11] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] jdk.internal.misc.Unsafe.unpark
  [ 1] java.util.concurrent.locks.LockSupport.unpark
  [ 2] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 4] java.util.concurrent.locks.ReentrantLock.unlock
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [10] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [11] kotlinx.coroutines.ExecutorCoroutineDispatcherBase.dispatch
  [12] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [13] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [14] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [15] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [16] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [17] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [18] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [19] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [20] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [21] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [22] kotlinx.coroutines.DispatchedTask.run
  [23] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [24] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [25] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [26] kotlinx.coroutines.BuildersKt.runBlocking
  [27] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [28] kotlinx.coroutines.BuildersKt.runBlocking$default
  [29] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [30] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [31] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [32] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [33] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [34] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [35] java.lang.reflect.Method.invoke
  [36] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [37] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [38] java.util.concurrent.FutureTask.run
  [39] java.util.concurrent.Executors$RunnableAdapter.call
  [40] java.util.concurrent.FutureTask.run
  [41] java.util.concurrent.ThreadPoolExecutor.runWorker
  [42] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [43] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] JavaThread::threadObj() const
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.park
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 5] java.util.concurrent.ForkJoinPool.managedBlock
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 9] java.util.concurrent.ThreadPoolExecutor.getTask
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] SystemDictionaryShared::validate_before_archiving(InstanceKlass*) (.cold.1)
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] mach_host_special_port_for_id.hsp_ids
  [ 1] __os_ch_md_redzone_cookie
  [ 2] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 3] jdk.internal.misc.Unsafe.unpark
  [ 4] java.util.concurrent.locks.LockSupport.unpark
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 7] java.util.concurrent.locks.ReentrantLock.unlock
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [10] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [11] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [12] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [13] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [14] kotlinx.coroutines.ExecutorCoroutineDispatcherBase.dispatch
  [15] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [16] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [17] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [18] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [19] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [20] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [21] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [22] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [23] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [24] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [25] kotlinx.coroutines.DispatchedTask.run
  [26] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [27] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [28] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [29] kotlinx.coroutines.BuildersKt.runBlocking
  [30] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [31] kotlinx.coroutines.BuildersKt.runBlocking$default
  [32] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [33] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [34] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [35] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [36] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [37] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [38] java.lang.reflect.Method.invoke
  [39] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [40] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [41] java.util.concurrent.FutureTask.run
  [42] java.util.concurrent.Executors$RunnableAdapter.call
  [43] java.util.concurrent.FutureTask.run
  [44] java.util.concurrent.ThreadPoolExecutor.runWorker
  [45] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [46] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.lang.Thread.interrupted
  [ 1] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 2] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 3] kotlinx.coroutines.BuildersKt.runBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 6] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInFixedDispatcher$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] java.util.concurrent.Executors$RunnableAdapter.call
  [ 3] java.util.concurrent.FutureTask.run
  [ 4] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 5] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 6] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 7] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] JavaThread::is_Java_thread() const
  [ 1] jdk.internal.misc.Unsafe.unpark
  [ 2] java.util.concurrent.locks.LockSupport.unpark
  [ 3] kotlinx.coroutines.EventLoopImplPlatform.unpark
  [ 4] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 5] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 6] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 7] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 8] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 9] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [10] io.ktor.utils.io.ByteBufferChannel.flush
  [11] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] Mutex::lock_without_safepoint_check()
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.park
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 6] java.util.concurrent.ForkJoinPool.managedBlock
  [ 7] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [10] java.util.concurrent.ThreadPoolExecutor.getTask
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 1] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [ 4] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [ 6] kotlinx.coroutines.ExecutorCoroutineDispatcherBase.dispatch
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 9] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [10] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [14] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [15] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [25] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] to_abstime(timespec*, long, bool, bool)
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] err_codes_mach_rcv
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.park
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 6] java.util.concurrent.ForkJoinPool.managedBlock
  [ 7] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [10] java.util.concurrent.ThreadPoolExecutor.getTask
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] JavaThread::is_interrupted(bool)
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 4] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 5] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 6] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 7] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 1] kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 1] io.ktor.utils.io.internal.RingBufferCapacity.tryReadAtMost
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] [unknown]
  [ 1] [unknown]
  [ 2] to_abstime(timespec*, long, bool, bool)
  [ 3] Parker::park(bool, long)
  [ 4] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 5] jdk.internal.misc.Unsafe.park
  [ 6] java.util.concurrent.locks.LockSupport.parkNanos
  [ 7] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [11] kotlinx.coroutines.BuildersKt.runBlocking$default
  [12] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [14] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.nio.ByteBuffer.position
  [ 1] java.nio.MappedByteBuffer.position
  [ 2] java.nio.MappedByteBuffer.position
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 1] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 3] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 4] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 5] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 6] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getClosed
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.util.concurrent.FutureTask.<init>
  [ 1] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.<init>
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [ 4] kotlinx.coroutines.ExecutorCoroutineDispatcherBase.dispatch
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [12] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [13] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [17] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [21] kotlinx.coroutines.BuildersKt.runBlocking$default
  [22] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] java.util.concurrent.Executors$RunnableAdapter.call
  [ 4] java.util.concurrent.FutureTask.run
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 6] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 7] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 8] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java_lang_Thread::get_thread_status(oopDesc*)
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] mach_task_special_port_for_id.tsp_ids
  [ 1] __os_ch_md_redzone_cookie
  [ 2] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 3] jdk.internal.misc.Unsafe.unpark
  [ 4] java.util.concurrent.locks.LockSupport.unpark
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 7] java.util.concurrent.locks.ReentrantLock.unlock
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [10] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [11] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [12] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [13] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [14] kotlinx.coroutines.ExecutorCoroutineDispatcherBase.dispatch
  [15] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [16] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [17] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [18] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [19] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [20] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [21] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [22] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [23] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [24] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [25] kotlinx.coroutines.DispatchedTask.run
  [26] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [27] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [28] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [29] kotlinx.coroutines.BuildersKt.runBlocking
  [30] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [31] kotlinx.coroutines.BuildersKt.runBlocking$default
  [32] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [33] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [34] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [35] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [36] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [37] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [38] java.lang.reflect.Method.invoke
  [39] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [40] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [41] java.util.concurrent.FutureTask.run
  [42] java.util.concurrent.Executors$RunnableAdapter.call
  [43] java.util.concurrent.FutureTask.run
  [44] java.util.concurrent.ThreadPoolExecutor.runWorker
  [45] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [46] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.nio.MappedByteBuffer.limit
  [ 1] java.nio.MappedByteBuffer.limit
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.flush
  [ 1] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.flush
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] java.util.concurrent.Executors$RunnableAdapter.call
  [ 7] java.util.concurrent.FutureTask.run
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 9] java.util.concurrent.ThreadPoolExecutor.runWorker
  [10] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [11] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.lang.invoke.VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] java.lang.invoke.VarHandleGuards.guard_LLL_Z
  [ 2] java.util.concurrent.FutureTask.run
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 4] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 5] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 6] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] vtable stub
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 4] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 5] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 6] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 7] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] err_codes_iokit_usb
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.park
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 5] java.util.concurrent.ForkJoinPool.managedBlock
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 9] java.util.concurrent.ThreadPoolExecutor.getTask
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.<init>
  [ 1] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [ 3] kotlinx.coroutines.ExecutorCoroutineDispatcherBase.dispatch
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [11] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [12] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.util.concurrent.FutureTask.run
  [ 1] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 2] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 3] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 4] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] internal_catch_exc_subsystem
  [ 1] sun.nio.ch.NativeThread.current
  [ 2] sun.nio.ch.NativeThreadSet.add
  [ 3] sun.nio.ch.FileChannelImpl.read
  [ 4] io.ktor.util.BufferViewJvmKt.read
  [ 5] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] java.util.concurrent.Executors$RunnableAdapter.call
  [ 9] java.util.concurrent.FutureTask.run
  [10] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 3] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 8] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.nio.DirectByteBuffer.duplicate
  [ 1] io.ktor.util.BufferViewJvmKt.read
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] java.util.concurrent.Executors$RunnableAdapter.call
  [ 6] java.util.concurrent.FutureTask.run
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 8] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 9] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [10] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] kotlinx.coroutines.EventLoopImplBase.enqueueImpl
  [ 1] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 2] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [10] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [11] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java_lang_Thread::set_thread_status(oopDesc*, JavaThreadStatus)
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.park
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 5] java.util.concurrent.ForkJoinPool.managedBlock
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 9] java.util.concurrent.ThreadPoolExecutor.getTask
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] JavaFrameAnchor::make_walkable(JavaThread*)
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInFixedDispatcher$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] [unknown]
  [ 1] ciBytecodeStream::get_declared_method_holder()
  [ 2] GraphBuilder::invoke(Bytecodes::Code)
  [ 3] GraphBuilder::iterate_bytecodes_for_block(int)
  [ 4] GraphBuilder::iterate_all_blocks(bool)
  [ 5] GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*)
  [ 6] GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*)
  [ 7] GraphBuilder::invoke(Bytecodes::Code)
  [ 8] GraphBuilder::iterate_bytecodes_for_block(int)
  [ 9] GraphBuilder::iterate_all_blocks(bool)
  [10] GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*)
  [11] GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*)
  [12] GraphBuilder::invoke(Bytecodes::Code)
  [13] GraphBuilder::iterate_bytecodes_for_block(int)
  [14] GraphBuilder::iterate_all_blocks(bool)
  [15] GraphBuilder::GraphBuilder(Compilation*, IRScope*)
  [16] IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool)
  [17] IR::IR(Compilation*, ciMethod*, int)
  [18] Compilation::build_hir()
  [19] Compilation::compile_java_method()
  [20] Compilation::compile_method()
  [21] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [22] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [23] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [24] CompileBroker::compiler_thread_loop()
  [25] JavaThread::thread_main_inner()
  [26] Thread::call_run()
  [27] thread_native_entry(Thread*)
  [28] __os_ch_md_redzone_cookie
  [29] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] kotlinx.coroutines.EventLoopImplBase.enqueueImpl
  [ 1] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 2] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [10] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [11] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.util.concurrent.FutureTask.run
  [ 1] java.util.concurrent.Executors$RunnableAdapter.call
  [ 2] java.util.concurrent.FutureTask.run
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 4] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 5] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 6] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 1] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 2] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 3] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.nio.Buffer.scope
  [ 1] java.nio.ByteBuffer.putBuffer
  [ 2] java.nio.ByteBuffer.put
  [ 3] java.nio.HeapByteBuffer.put
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [13] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [17] kotlinx.coroutines.BuildersKt.runBlocking$default
  [18] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] Assembler::locate_operand(unsigned char*, Assembler::WhichOperand)
  [ 1] oop_Relocation::oop_value()
  [ 2] nmethod::oops_do(OopClosure*, bool)
  [ 3] G1NmethodProcessor::do_regular_processing(nmethod*)
  [ 4] nmethod::oops_do_process_weak(nmethod::OopsDoProcessor*)
  [ 5] G1CodeBlobClosure::do_code_blob(CodeBlob*)
  [ 6] G1CodeRootSet::nmethods_do(CodeBlobClosure*) const
  [ 7] G1ScanCollectionSetRegionClosure::do_heap_region(HeapRegion*)
  [ 8] G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const
  [ 9] G1CollectionSet::iterate_incremental_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const
  [10] G1RemSet::scan_collection_set_regions(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases)
  [11] G1EvacuateRegionsBaseTask::work(unsigned int)
  [12] GangWorker::loop()
  [13] Thread::call_run()
  [14] thread_native_entry(Thread*)
  [15] __os_ch_md_redzone_cookie
  [16] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.nio.Buffer.<init>
  [ 1] java.nio.ByteBuffer.<init>
  [ 2] java.nio.ByteBuffer.<init>
  [ 3] java.nio.MappedByteBuffer.<init>
  [ 4] java.nio.DirectByteBuffer.<init>
  [ 5] java.nio.DirectByteBuffer.duplicate
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] java.util.concurrent.Executors$RunnableAdapter.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.internal.RingBufferCapacity.completeWrite
  [ 2] io.ktor.utils.io.ByteBufferChannel.bytesWritten
  [ 3] io.ktor.utils.io.ByteBufferChannel.bytesWrittenFromSession$ktor_io
  [ 4] io.ktor.utils.io.internal.WriteSessionImpl.written
  [ 5] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] java.util.concurrent.Executors$RunnableAdapter.call
  [ 9] java.util.concurrent.FutureTask.run
  [10] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 1] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 2] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 3] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 4] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 5] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.nio.Buffer.limit
  [ 1] java.nio.ByteBuffer.limit
  [ 2] java.nio.MappedByteBuffer.limit
  [ 3] java.nio.MappedByteBuffer.limit
  [ 4] java.nio.Buffer.<init>
  [ 5] java.nio.ByteBuffer.<init>
  [ 6] java.nio.ByteBuffer.<init>
  [ 7] java.nio.MappedByteBuffer.<init>
  [ 8] java.nio.DirectByteBuffer.<init>
  [ 9] java.nio.DirectByteBuffer.duplicate
  [10] io.ktor.util.BufferViewJvmKt.read
  [11] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.releaseIntercepted
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 1] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInFixedDispatcher$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ull>::oop_access_barrier(void*)
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.parkNanos
  [ 3] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 8] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.nio.Buffer.position
  [ 1] java.nio.ByteBuffer.position
  [ 2] java.nio.ByteBuffer.put
  [ 3] java.nio.HeapByteBuffer.put
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [13] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [17] kotlinx.coroutines.BuildersKt.runBlocking$default
  [18] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] [unknown]
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool)
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.park
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 5] java.util.concurrent.ForkJoinPool.managedBlock
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 9] java.util.concurrent.ThreadPoolExecutor.getTask
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] Method::bci_from(unsigned char*) const
  [ 1] Deoptimization::uncommon_trap(JavaThread*, int, int)
  [ 2] [deoptimization]

--- 10000000 ns (0.02%), 1 sample
  [ 0] OtherRegionsTable::occupied() const
  [ 1] G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*)
  [ 2] G1CollectionSet::iterate(HeapRegionClosure*) const
  [ 3] G1RemSetSamplingTask::execute()
  [ 4] G1ServiceThread::run_task(G1ServiceTask*)
  [ 5] G1ServiceThread::run_service()
  [ 6] ConcurrentGCThread::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] __os_ch_md_redzone_cookie
  [10] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] [unknown]
  [ 1] jdk.internal.misc.Unsafe.unpark
  [ 2] java.util.concurrent.locks.LockSupport.unpark
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 5] java.util.concurrent.locks.ReentrantLock.unlock
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [10] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [11] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [12] kotlinx.coroutines.ExecutorCoroutineDispatcherBase.dispatch
  [13] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [14] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [15] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [16] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [17] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [18] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [19] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [20] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [21] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [22] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [23] kotlinx.coroutines.DispatchedTask.run
  [24] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [25] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [26] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [27] kotlinx.coroutines.BuildersKt.runBlocking
  [28] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [29] kotlinx.coroutines.BuildersKt.runBlocking$default
  [30] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [31] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [32] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [33] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [34] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [35] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [36] java.lang.reflect.Method.invoke
  [37] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [38] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [39] java.util.concurrent.FutureTask.run
  [40] java.util.concurrent.Executors$RunnableAdapter.call
  [41] java.util.concurrent.FutureTask.run
  [42] java.util.concurrent.ThreadPoolExecutor.runWorker
  [43] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [44] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.util.concurrent.ScheduledThreadPoolExecutor.triggerTime
  [ 1] java.util.concurrent.ScheduledThreadPoolExecutor.triggerTime
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [ 4] kotlinx.coroutines.ExecutorCoroutineDispatcherBase.dispatch
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [12] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [13] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [17] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [21] kotlinx.coroutines.BuildersKt.runBlocking$default
  [22] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] ThreadsListHandle::ThreadsListHandle(Thread*)
  [ 1] jdk.internal.misc.Unsafe.unpark
  [ 2] java.util.concurrent.locks.LockSupport.unpark
  [ 3] kotlinx.coroutines.EventLoopImplPlatform.unpark
  [ 4] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 5] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 6] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 7] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 8] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 9] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [10] io.ktor.utils.io.ByteBufferChannel.flush
  [11] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] [unknown]
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.park
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 6] java.util.concurrent.ForkJoinPool.managedBlock
  [ 7] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [10] java.util.concurrent.ThreadPoolExecutor.getTask
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] SpinPause
  [ 1] G1ParEvacuateFollowersClosure::offer_termination()
  [ 2] G1ParEvacuateFollowersClosure::do_void()
  [ 3] G1EvacuateRegionsBaseTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] __os_ch_md_redzone_cookie
  [ 9] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.isClosedForRead
  [ 1] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInFixedDispatcher$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] kotlinx.coroutines.EventLoopImplBase.enqueueImpl
  [ 1] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 2] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [10] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [11] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] JavaThread::threadObj() const
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.park
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 4] java.util.concurrent.ForkJoinPool.managedBlock
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 8] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 9] java.util.concurrent.ThreadPoolExecutor.runWorker
  [10] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [11] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] err_codes_mach_rcv
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] kotlinx.coroutines.internal.ThreadContextKt.threadContextElements
  [ 1] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 2] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 3] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 4] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 5] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 6] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 7] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 8] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 9] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] java.util.concurrent.Executors$RunnableAdapter.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] jlong_arraycopy
  [ 1] io.ktor.utils.io.internal.RingBufferCapacity.tryReadAtMost
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] __psynch_cvwait
  [ 1] os::PlatformMonitor::wait(long)
  [ 2] Monitor::wait_without_safepoint_check(long long)
  [ 3] G1ServiceThread::sleep_before_next_cycle()
  [ 4] G1ServiceThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] __os_ch_md_redzone_cookie
  [ 9] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] kotlin.coroutines.jvm.internal.Boxing.boxInt
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.util.concurrent.locks.LockSupport.setBlocker
  [ 1] java.util.concurrent.locks.LockSupport.parkNanos
  [ 2] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 3] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 4] kotlinx.coroutines.BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 7] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [12] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 1] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 2] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 3] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 4] kotlinx.coroutines.BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 7] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [12] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 2] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 6] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [10] kotlinx.coroutines.BuildersKt.runBlocking$default
  [11] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] JavaFrameAnchor::make_walkable(JavaThread*)
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] java.util.concurrent.Executors$RunnableAdapter.call
  [ 4] java.util.concurrent.FutureTask.run
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 6] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 7] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 8] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ull>::oop_access_barrier(void*)
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.park
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 5] java.util.concurrent.ForkJoinPool.managedBlock
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 9] java.util.concurrent.ThreadPoolExecutor.getTask
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] JavaThread::is_interrupted(bool)
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.park
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 6] java.util.concurrent.ForkJoinPool.managedBlock
  [ 7] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [10] java.util.concurrent.ThreadPoolExecutor.getTask
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] oopDesc::address_field(int) const
  [ 1] ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**)
  [ 2] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 3] jdk.internal.misc.Unsafe.unpark
  [ 4] java.util.concurrent.locks.LockSupport.unpark
  [ 5] kotlinx.coroutines.EventLoopImplPlatform.unpark
  [ 6] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 7] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [11] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [12] io.ktor.utils.io.ByteBufferChannel.flush
  [13] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] Mutex::unlock()
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] GraphBuilder::invoke(Bytecodes::Code)
  [ 1] GraphBuilder::iterate_bytecodes_for_block(int)
  [ 2] GraphBuilder::iterate_all_blocks(bool)
  [ 3] GraphBuilder::GraphBuilder(Compilation*, IRScope*)
  [ 4] IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool)
  [ 5] IR::IR(Compilation*, ciMethod*, int)
  [ 6] Compilation::build_hir()
  [ 7] Compilation::compile_java_method()
  [ 8] Compilation::compile_method()
  [ 9] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [10] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [11] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [12] CompileBroker::compiler_thread_loop()
  [13] JavaThread::thread_main_inner()
  [14] Thread::call_run()
  [15] thread_native_entry(Thread*)
  [16] __os_ch_md_redzone_cookie
  [17] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] kotlin.coroutines.CombinedContext.get
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.releaseIntercepted
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.park
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly
  [ 7] java.util.concurrent.CountDownLatch.await
  [ 8] org.openjdk.jmh.runner.InfraControlL2.awaitWarmupReady
  [ 9] org.openjdk.jmh.runner.InfraControl.awaitWarmupReady
  [10] org.openjdk.jmh.runner.BenchmarkHandler.runIteration
  [11] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [12] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [13] org.openjdk.jmh.runner.BaseRunner.doSingle
  [14] org.openjdk.jmh.runner.BaseRunner.runBenchmarksForked
  [15] org.openjdk.jmh.runner.ForkedRunner.run
  [16] org.openjdk.jmh.runner.ForkedMain.main

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [14] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 1] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 2] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 3] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java_lang_Thread::set_thread_status(oopDesc*, JavaThreadStatus)
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.park
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 4] java.util.concurrent.ForkJoinPool.managedBlock
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 8] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 9] java.util.concurrent.ThreadPoolExecutor.runWorker
  [10] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [11] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 1] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInFixedDispatcher$1.<init>
  [ 1] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInFixedDispatcher$1.create
  [ 2] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.createCoroutineUnintercepted
  [ 3] kotlinx.coroutines.intrinsics.CancellableKt.startCoroutineCancellable
  [ 4] kotlinx.coroutines.BuildersKt__Builders_commonKt.startCoroutineImpl
  [ 5] kotlinx.coroutines.BuildersKt.startCoroutineImpl
  [ 6] kotlinx.coroutines.AbstractCoroutine.start
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [10] kotlinx.coroutines.BuildersKt.runBlocking$default
  [11] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] internal_catch_exc_subsystem
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.park
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 6] java.util.concurrent.ForkJoinPool.managedBlock
  [ 7] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [10] java.util.concurrent.ThreadPoolExecutor.getTask
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 3] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInFixedDispatcher$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 7] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [11] kotlinx.coroutines.BuildersKt.runBlocking$default
  [12] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [14] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] Java_sun_nio_ch_FileDispatcherImpl_read0
  [ 1] sun.nio.ch.FileDispatcherImpl.read0
  [ 2] sun.nio.ch.FileDispatcherImpl.read
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] java.util.concurrent.Executors$RunnableAdapter.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] java.util.concurrent.ThreadPoolExecutor$Worker.tryAcquire
  [ 2] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 3] java.util.concurrent.ThreadPoolExecutor$Worker.lock
  [ 4] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 5] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 6] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.accessCheck
  [ 1] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet
  [ 2] io.ktor.utils.io.internal.RingBufferCapacity.tryReadAtMost
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.getContext
  [ 1] kotlinx.coroutines.internal.DispatchedContinuation.takeState$kotlinx_coroutines_core
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] java.util.concurrent.Executors$RunnableAdapter.call
  [ 4] java.util.concurrent.FutureTask.run
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 6] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 7] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 8] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 3] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 8] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] kotlin.jvm.internal.Intrinsics.checkNotNull
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.getAndAdd
  [ 1] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.addAndGet
  [ 2] io.ktor.utils.io.internal.RingBufferCapacity.flush
  [ 3] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.flush
  [ 5] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] java.util.concurrent.Executors$RunnableAdapter.call
  [ 9] java.util.concurrent.FutureTask.run
  [10] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.access$flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 5] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 6] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] java.util.concurrent.Executors$RunnableAdapter.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.nio.DirectByteBuffer.duplicate
  [ 1] io.ktor.util.BufferViewJvmKt.read
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] java.util.concurrent.Executors$RunnableAdapter.call
  [ 6] java.util.concurrent.FutureTask.run
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 8] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 9] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [10] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] Parker::park(bool, long)
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.parkNanos
  [ 3] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 8] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] mach_thread_special_port_for_id.tsp_ids
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInFixedDispatcher
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInFixedDispatcher_jmhTest.testKtorFileReadInFixedDispatcher_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

          ns  percent  samples  top
  ----------  -------  -------  ---
 19720000000   44.30%     1972  __psynch_cvwait
  6360000000   14.29%      636  __psynch_cvsignal
  4190000000    9.41%      419  jdk.internal.misc.Unsafe.park
  2260000000    5.08%      226  read
  1750000000    3.93%      175  __gettimeofday
   800000000    1.80%       80  err_codes_mach_rcv
   710000000    1.60%       71  kotlin.coroutines.jvm.internal.Boxing.boxBoolean
   680000000    1.53%       68  jlong_disjoint_arraycopy
   650000000    1.46%       65  __os_ch_md_redzone_cookie
   470000000    1.06%       47  Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
   460000000    1.03%       46  err_codes_iokit_usb
   400000000    0.90%       40  Parker::park(bool, long)
   370000000    0.83%       37  os::javaTimeNanos()
   290000000    0.65%       29  kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
   240000000    0.54%       24  internal_catch_exc_subsystem
   210000000    0.47%       21  io.ktor.utils.io.ByteBufferChannel.setupStateForRead
   190000000    0.43%       19  java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
   180000000    0.40%       18  [unknown]
   180000000    0.40%       18  Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
   150000000    0.34%       15  kotlin.coroutines.jvm.internal.ContinuationImpl.releaseIntercepted
   140000000    0.31%       14  io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
   140000000    0.31%       14  java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet
   140000000    0.31%       14  java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.enableWait
   130000000    0.29%       13  mach_absolute_time
   130000000    0.29%       13  kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
   130000000    0.29%       13  JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool)
   130000000    0.29%       13  __commpage_gettimeofday_internal
   120000000    0.27%       12  java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.<init>
   120000000    0.27%       12  itable stub
   110000000    0.25%       11  java_lang_Thread::set_thread_status(oopDesc*, JavaThreadStatus)
   110000000    0.25%       11  __psynch_mutexwait
   100000000    0.22%       10  SafeThreadsListPtr::release_stable_list()
   100000000    0.22%       10  to_abstime(timespec*, long, bool, bool)
    90000000    0.20%        9  JavaThread::threadObj() const
    90000000    0.20%        9  kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
    80000000    0.18%        8  ThreadsListHandle::ThreadsListHandle(Thread*)
    70000000    0.16%        7  java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread
    70000000    0.16%        7  io.ktor.utils.io.ByteBufferChannel.suspensionForSize
    70000000    0.16%        7  kotlinx.coroutines.AbstractTimeSourceKt.getTimeSource
    60000000    0.13%        6  io.ktor.utils.io.ByteBufferChannel.resumeReadOp
    60000000    0.13%        6  oopDesc::address_field(int) const
    60000000    0.13%        6  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ull>::oop_access_barrier(void*)
    50000000    0.11%        5  io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
    50000000    0.11%        5  kotlinx.coroutines.ExecutorCoroutineDispatcherBase.dispatch
    50000000    0.11%        5  java.util.concurrent.ThreadPoolExecutor.getTask
    50000000    0.11%        5  kotlin.coroutines.jvm.internal.ContinuationImpl.getContext
    50000000    0.11%        5  ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**)
    50000000    0.11%        5  mach_host_special_port_for_id.hsp_ids
    50000000    0.11%        5  java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.valueCheck
    40000000    0.09%        4  kotlinx.coroutines.EventLoopImplBase.enqueueImpl
    40000000    0.09%        4  pthread_dependency_wait_np.cold.3
    40000000    0.09%        4  java.lang.Integer.intValue
    40000000    0.09%        4  io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
    40000000    0.09%        4  kotlinx.coroutines.EventLoop.processUnconfinedEvent
    30000000    0.07%        3  io.ktor.utils.io.ByteBufferChannel.getState
    30000000    0.07%        3  java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState
    30000000    0.07%        3  io.ktor.utils.io.ByteBufferChannel.getClosed
    30000000    0.07%        3  kotlinx.coroutines.EventLoopImplBase.processNextEvent
    30000000    0.07%        3  sun.nio.ch.FileDispatcherImpl.read0
    30000000    0.07%        3  io.ktor.utils.io.internal.RingBufferCapacity.flush
    30000000    0.07%        3  JavaFrameAnchor::make_walkable(JavaThread*)
    30000000    0.07%        3  JavaThread::is_Java_thread() const
    30000000    0.07%        3  io.ktor.utils.io.ByteBufferChannel.readAvailable
    30000000    0.07%        3  kotlinx.coroutines.BlockingCoroutine.joinBlocking
    30000000    0.07%        3  JavaThread::is_interrupted(bool)
    30000000    0.07%        3  kotlinx.coroutines.EventLoopImplBase.enqueue
    30000000    0.07%        3  __commpage_gettimeofday
    30000000    0.07%        3  gCRAnnotations
    30000000    0.07%        3  java.nio.Buffer.position
    30000000    0.07%        3  java.util.concurrent.FutureTask.run
    30000000    0.07%        3  java.nio.DirectByteBuffer.duplicate
    30000000    0.07%        3  kotlinx.coroutines.internal.DispatchedContinuation.<init>
    20000000    0.04%        2  java.nio.ByteBuffer.position
    20000000    0.04%        2  java.nio.MappedByteBuffer.limit
    20000000    0.04%        2  java.util.concurrent.FutureTask.<init>
    20000000    0.04%        2  io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInFixedDispatcher$1.invokeSuspend
    20000000    0.04%        2  java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
    20000000    0.04%        2  java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
    20000000    0.04%        2  io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
    20000000    0.04%        2  kotlin.coroutines.jvm.internal.Boxing.boxInt
    20000000    0.04%        2  java.nio.Buffer.<init>
    20000000    0.04%        2  SystemDictionaryShared::validate_before_archiving(InstanceKlass*) (.cold.1)
    20000000    0.04%        2  mach_task_special_port_for_id.tsp_ids
    20000000    0.04%        2  Mutex::lock_without_safepoint_check()
    20000000    0.04%        2  java.lang.invoke.VarHandleReferences$FieldInstanceReadWrite.compareAndSet
    20000000    0.04%        2  java.lang.Thread.interrupted
    20000000    0.04%        2  io.ktor.utils.io.ByteBufferChannel.bytesRead
    20000000    0.04%        2  java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
    20000000    0.04%        2  io.ktor.utils.io.internal.RingBufferCapacity.tryWriteAtLeast
    20000000    0.04%        2  java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.signal
    20000000    0.04%        2  java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
    20000000    0.04%        2  io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
    20000000    0.04%        2  io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
    20000000    0.04%        2  jdk.internal.misc.Unsafe.unpark
    20000000    0.04%        2  Assembler::locate_operand(unsigned char*, Assembler::WhichOperand)
    20000000    0.04%        2  java_lang_Thread::get_thread_status(oopDesc*)
    20000000    0.04%        2  vtable stub
    10000000    0.02%        1  java.util.concurrent.locks.ReentrantLock$Sync.tryRelease
    10000000    0.02%        1  java.util.concurrent.locks.ReentrantLock$Sync.lock
    10000000    0.02%        1  jlong_arraycopy
    10000000    0.02%        1  java.util.concurrent.locks.LockSupport.setBlocker
    10000000    0.02%        1  kotlin.coroutines.CombinedContext.get
    10000000    0.02%        1  kotlin.coroutines.ContinuationInterceptor$DefaultImpls.get
    10000000    0.02%        1  kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
    10000000    0.02%        1  java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.getAndAdd
    10000000    0.02%        1  java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.accessCheck
    10000000    0.02%        1  java.util.concurrent.ScheduledThreadPoolExecutor.triggerTime
    10000000    0.02%        1  java.nio.DirectByteBuffer.<init>
    10000000    0.02%        1  kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
    10000000    0.02%        1  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<544868ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 544868ull>::oop_access_barrier(void*)
    10000000    0.02%        1  kotlin.jvm.internal.Intrinsics.areEqual
    10000000    0.02%        1  kotlin.jvm.internal.Intrinsics.checkNotNull
    10000000    0.02%        1  java.nio.Buffer.limit
    10000000    0.02%        1  java.lang.Thread.blockedOn
    10000000    0.02%        1  io.ktor.utils.io.core.BufferSharedState.setWritePosition
    10000000    0.02%        1  io.ktor.utils.io.ByteBufferChannel.newBuffer
    10000000    0.02%        1  io.ktor.utils.io.ByteBufferChannel.isClosedForRead
    10000000    0.02%        1  io.ktor.utils.io.ByteBufferChannel.flushImpl
    10000000    0.02%        1  io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
    10000000    0.02%        1  kotlinx.coroutines.JobSupport$Finishing.getRootCause
    10000000    0.02%        1  io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInFixedDispatcher$1.<init>
    10000000    0.02%        1  __open
    10000000    0.02%        1  kotlinx.coroutines.internal.DispatchedContinuation.takeState$kotlinx_coroutines_core
    10000000    0.02%        1  kotlinx.coroutines.internal.ThreadContextKt.threadContextElements
    10000000    0.02%        1  SpinPause
    10000000    0.02%        1  Parker::unpark()
    10000000    0.02%        1  OtherRegionsTable::occupied() const
    10000000    0.02%        1  OSXSemaphore::wait()
    10000000    0.02%        1  mach_thread_special_port_for_id.tsp_ids
    10000000    0.02%        1  Mutex::unlock()
    10000000    0.02%        1  Method::bci_from(unsigned char*) const
    10000000    0.02%        1  Java_sun_nio_ch_FileDispatcherImpl_read0
    10000000    0.02%        1  GraphBuilder::invoke(Bytecodes::Code)
    10000000    0.02%        1  semaphore_signal_trap
    10000000    0.02%        1  G1CodeRootSet::add(nmethod*)
    10000000    0.02%        1  Compile::final_graph_reshaping_walk(Node_Stack&, Node*, Final_Reshape_Counts&)
    10000000    0.02%        1  unsafe_arraycopy
    10000000    0.02%        1  java.nio.Buffer.scope

