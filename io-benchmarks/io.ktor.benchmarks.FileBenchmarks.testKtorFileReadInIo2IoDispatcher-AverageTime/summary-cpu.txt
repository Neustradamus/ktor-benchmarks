--- Execution profile ---
Total samples       : 18462
unknown_Java        : 2 (0.01%)

--- 44321564295 ns (22.11%), 3794 samples
  [ 0] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 36591487049 ns (18.25%), 3659 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.869436148.run
  [ 3] java.lang.Thread.run

--- 28870847563 ns (14.40%), 2886 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.869436148.run
  [ 3] java.lang.Thread.run

--- 25430622731 ns (12.68%), 2543 samples
  [ 0] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.getQueue
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.869436148.run
  [ 3] java.lang.Thread.run

--- 8910293955 ns (4.44%), 891 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] java.nio.Buffer.position
  [ 2] java.nio.ByteBuffer.position
  [ 3] java.nio.MappedByteBuffer.position
  [ 4] java.nio.DirectByteBuffer.get
  [ 5] java.nio.HeapByteBuffer.put
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [10] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [11] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [15] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 7710481744 ns (3.85%), 523 samples
  [ 0] read
  [ 1] sun.nio.ch.FileDispatcherImpl.read0
  [ 2] sun.nio.ch.FileDispatcherImpl.read
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 5050233267 ns (2.52%), 424 samples
  [ 0] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 4720412295 ns (2.35%), 472 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.869436148.run
  [ 3] java.lang.Thread.run

--- 3690254880 ns (1.84%), 369 samples
  [ 0] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.869436148.run
  [ 2] java.lang.Thread.run

--- 3630225851 ns (1.81%), 314 samples
  [ 0] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 3280109715 ns (1.64%), 249 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.util.internal.LockFreeLinkedListNode.remove
  [ 2] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 2080110019 ns (1.04%), 171 samples
  [ 0] io.ktor.util.internal.LockFreeLinkedListNode.getNext
  [ 1] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 1690060451 ns (0.84%), 155 samples
  [ 0] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 1220043755 ns (0.61%), 80 samples
  [ 0] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.flush
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 880028145 ns (0.44%), 53 samples
  [ 0] java.nio.MappedByteBuffer.limit
  [ 1] java.nio.Buffer.<init>
  [ 2] java.nio.ByteBuffer.<init>
  [ 3] java.nio.ByteBuffer.<init>
  [ 4] java.nio.MappedByteBuffer.<init>
  [ 5] java.nio.DirectByteBuffer.<init>
  [ 6] java.nio.DirectByteBuffer.duplicate
  [ 7] io.ktor.util.BufferViewJvmKt.read
  [ 8] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [12] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 860023184 ns (0.43%), 64 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.internal.RingBufferCapacity.tryWriteAtLeast
  [ 2] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 850008957 ns (0.42%), 85 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [12] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 840020209 ns (0.42%), 63 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 1] io.ktor.utils.io.ByteBufferChannel.flush
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 800017031 ns (0.40%), 55 samples
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.tryWriteAtLeast
  [ 1] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 670000416 ns (0.33%), 67 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.lazySet
  [ 1] io.ktor.util.internal.LockFreeLinkedListNode.addNext
  [ 2] io.ktor.util.internal.LockFreeLinkedListNode.addLast
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher.dispatch
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [11] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [12] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [16] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 580013209 ns (0.29%), 42 samples
  [ 0] kotlinx.coroutines.CompletionStateKt.toState$default
  [ 1] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 2] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 3] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 4] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.flush
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 500066585 ns (0.25%), 50 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.869436148.run
  [ 3] java.lang.Thread.run

--- 500013636 ns (0.25%), 50 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 2] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 430013675 ns (0.21%), 23 samples
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 1] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 2] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 3] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.flush
  [ 5] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 410002447 ns (0.20%), 41 samples
  [ 0] kotlinx.coroutines.internal.ThreadContextKt$countAll$1.invoke
  [ 1] kotlinx.coroutines.internal.ThreadContextKt$countAll$1.invoke
  [ 2] kotlin.coroutines.CombinedContext.fold
  [ 3] kotlinx.coroutines.internal.ThreadContextKt.threadContextElements
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 5] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 6] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 7] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 8] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [13] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [17] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 400012462 ns (0.20%), 40 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.internal.RingBufferCapacity.tryReadAtMost
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 370012131 ns (0.18%), 29 samples
  [ 0] itable stub
  [ 1] kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 370011684 ns (0.18%), 37 samples
  [ 0] kotlin.coroutines.CombinedContext.get
  [ 1] io.ktor.utils.io.internal.CancellableReusableContinuation.parent
  [ 2] io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [12] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 350012371 ns (0.17%), 25 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libc-2.33.so
  [ 1] sun.nio.ch.FileDispatcherImpl.read0
  [ 2] sun.nio.ch.FileDispatcherImpl.read
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 350011651 ns (0.17%), 24 samples
  [ 0] sun.nio.ch.FileDispatcherImpl.read0
  [ 1] sun.nio.ch.FileDispatcherImpl.read
  [ 2] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.FileChannelImpl.read
  [ 5] io.ktor.util.BufferViewJvmKt.read
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 349998334 ns (0.17%), 35 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 330006088 ns (0.16%), 26 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.internal.RingBufferCapacity.completeWrite
  [ 2] io.ktor.utils.io.ByteBufferChannel.bytesWritten
  [ 3] io.ktor.utils.io.ByteBufferChannel.bytesWrittenFromSession$ktor_io
  [ 4] io.ktor.utils.io.internal.WriteSessionImpl.written
  [ 5] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 330000825 ns (0.16%), 33 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 320007672 ns (0.16%), 32 samples
  [ 0] kotlin.coroutines.CombinedContext.fold
  [ 1] kotlinx.coroutines.internal.ThreadContextKt.threadContextElements
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 3] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 4] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 5] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 6] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [11] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [15] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 300010501 ns (0.15%), 16 samples
  [ 0] java.nio.Buffer.position
  [ 1] java.nio.ByteBuffer.position
  [ 2] java.nio.MappedByteBuffer.position
  [ 3] java.nio.MappedByteBuffer.position
  [ 4] java.nio.Buffer.<init>
  [ 5] java.nio.ByteBuffer.<init>
  [ 6] java.nio.ByteBuffer.<init>
  [ 7] java.nio.MappedByteBuffer.<init>
  [ 8] java.nio.DirectByteBuffer.<init>
  [ 9] java.nio.DirectByteBuffer.duplicate
  [10] io.ktor.util.BufferViewJvmKt.read
  [11] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [15] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 300009657 ns (0.15%), 21 samples
  [ 0] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 280000815 ns (0.14%), 28 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 270002561 ns (0.13%), 18 samples
  [ 0] kotlinx.coroutines.CompletionStateKt.toState
  [ 1] kotlinx.coroutines.CompletionStateKt.toState$default
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.flush
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 250026890 ns (0.12%), 25 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.869436148.run
  [ 3] java.lang.Thread.run

--- 240010249 ns (0.12%), 24 samples
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [12] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 230005888 ns (0.11%), 22 samples
  [ 0] io.ktor.util.internal.LockFreeLinkedListNode.finishRemove
  [ 1] io.ktor.util.internal.LockFreeLinkedListNode.remove
  [ 2] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 220012994 ns (0.11%), 14 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 2] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 3] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.flush
  [ 5] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 220007775 ns (0.11%), 19 samples
  [ 0] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 1] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 210005965 ns (0.10%), 17 samples
  [ 0] io.ktor.util.internal.LockFreeLinkedListNode.markPrev
  [ 1] io.ktor.util.internal.LockFreeLinkedListNode.helpDelete
  [ 2] io.ktor.util.internal.LockFreeLinkedListNode.finishRemove
  [ 3] io.ktor.util.internal.LockFreeLinkedListNode.remove
  [ 4] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 200010800 ns (0.10%), 12 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 1] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 200002354 ns (0.10%), 20 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.internal.RingBufferCapacity.completeRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [12] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 199999068 ns (0.10%), 17 samples
  [ 0] sun.nio.ch.NativeThread.current
  [ 1] sun.nio.ch.NativeThreadSet.add
  [ 2] sun.nio.ch.FileChannelImpl.read
  [ 3] io.ktor.util.BufferViewJvmKt.read
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 199995135 ns (0.10%), 13 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getClosed
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.flush
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 170007816 ns (0.08%), 17 samples
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.tryReadAtMost
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 160007889 ns (0.08%), 14 samples
  [ 0] io.ktor.util.internal.LockFreeLinkedListNode.remove
  [ 1] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 150002248 ns (0.07%), 15 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 149999957 ns (0.07%), 10 samples
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.flush
  [ 1] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.access$flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 5] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 6] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 140007777 ns (0.07%), 7 samples
  [ 0] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 130031985 ns (0.06%), 13 samples
  [ 0] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.869436148.run
  [ 2] java.lang.Thread.run

--- 130005387 ns (0.06%), 13 samples
  [ 0] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 2] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [12] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 130005075 ns (0.06%), 10 samples
  [ 0] kotlin.coroutines.ContinuationInterceptor$DefaultImpls.get
  [ 1] kotlinx.coroutines.CoroutineDispatcher.get
  [ 2] kotlin.coroutines.CombinedContext.get
  [ 3] kotlin.coroutines.jvm.internal.ContinuationImpl.releaseIntercepted
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 6] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 7] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 8] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 9] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [13] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 130002933 ns (0.06%), 8 samples
  [ 0] io.ktor.util.internal.LockFreeLinkedListKt.unwrap
  [ 1] io.ktor.util.internal.LockFreeLinkedListNode.finishRemove
  [ 2] io.ktor.util.internal.LockFreeLinkedListNode.remove
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 130001705 ns (0.06%), 13 samples
  [ 0] kotlin.coroutines.ContinuationInterceptor$DefaultImpls.get
  [ 1] kotlinx.coroutines.CoroutineDispatcher.get
  [ 2] kotlin.coroutines.CombinedContext.get
  [ 3] io.ktor.utils.io.internal.CancellableReusableContinuation.parent
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
  [ 5] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [10] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [14] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 129999157 ns (0.06%), 13 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 120002760 ns (0.06%), 8 samples
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.takeState$kotlinx_coroutines_core
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 120001579 ns (0.06%), 12 samples
  [ 0] kotlinx.coroutines.internal.ThreadContextKt$countAll$1.invoke
  [ 1] kotlin.coroutines.CombinedContext.fold
  [ 2] kotlinx.coroutines.internal.ThreadContextKt.threadContextElements
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 4] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 5] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 6] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 7] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [12] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [16] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 119999418 ns (0.06%), 10 samples
  [ 0] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.flush
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 109999306 ns (0.05%), 7 samples
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.flush
  [ 1] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.flush
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 100006134 ns (0.05%), 6 samples
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.getContext
  [ 1] kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 100004839 ns (0.05%), 7 samples
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.flush
  [ 1] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.flush
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 100004314 ns (0.05%), 9 samples
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.takeState$kotlinx_coroutines_core
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 100002994 ns (0.05%), 10 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 100001453 ns (0.05%), 7 samples
  [ 0] io.ktor.util.internal.LockFreeLinkedListNode.correctPrev
  [ 1] io.ktor.util.internal.LockFreeLinkedListNode.finishRemove
  [ 2] io.ktor.util.internal.LockFreeLinkedListNode.remove
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 100000948 ns (0.05%), 10 samples
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 1] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 90002173 ns (0.04%), 5 samples
  [ 0] kotlinx.coroutines.DispatchedTask.getExceptionalResult$kotlinx_coroutines_core
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 90001704 ns (0.04%), 8 samples
  [ 0] itable stub
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 80009243 ns (0.04%), 8 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getWriteOp
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [12] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 80006742 ns (0.04%), 8 samples
  [ 0] kotlin.coroutines.CombinedContext.get
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 2] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [12] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 80005326 ns (0.04%), 8 samples
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.<init>
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.<init>
  [ 2] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.<init>
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 80004149 ns (0.04%), 8 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 80003850 ns (0.04%), 6 samples
  [ 0] io.ktor.util.internal.LockFreeLinkedListNode.remove
  [ 1] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 80001931 ns (0.04%), 4 samples
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.getContext
  [ 1] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 2] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 3] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 4] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.flush
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 70007963 ns (0.03%), 5 samples
  [ 0] kotlinx.coroutines.DispatchedTask.run
  [ 1] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 2] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 70007851 ns (0.03%), 5 samples
  [ 0] io.ktor.util.internal.LockFreeLinkedListNode.helpDelete
  [ 1] io.ktor.util.internal.LockFreeLinkedListNode.finishRemove
  [ 2] io.ktor.util.internal.LockFreeLinkedListNode.remove
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 70005458 ns (0.03%), 7 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.<init>
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 2] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 70001686 ns (0.03%), 7 samples
  [ 0] io.ktor.utils.io.core.ByteOrder.getNioOrder
  [ 1] io.ktor.utils.io.ByteBufferChannel.prepareBuffer
  [ 2] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 3] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [13] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 70001384 ns (0.03%), 2 samples
  [ 0] io.ktor.util.BufferViewJvmKt.read
  [ 1] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 70000435 ns (0.03%), 5 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getClosed
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.access$flushImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 5] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 6] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 7] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 8] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [12] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 70000037 ns (0.03%), 4 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getClosed
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.flush
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 69999790 ns (0.03%), 7 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 69997351 ns (0.03%), 5 samples
  [ 0] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 60014267 ns (0.03%), 6 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] start_thread

--- 60007105 ns (0.03%), 6 samples
  [ 0] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 60003891 ns (0.03%), 6 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 60002692 ns (0.03%), 6 samples
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.getContext
  [ 1] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 2] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 3] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 4] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 5] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [10] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [14] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 60001977 ns (0.03%), 4 samples
  [ 0] itable stub
  [ 1] kotlinx.coroutines.internal.DispatchedContinuation.takeState$kotlinx_coroutines_core
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 60001765 ns (0.03%), 3 samples
  [ 0] io.ktor.util.internal.LockFreeLinkedListNode.getNext
  [ 1] io.ktor.util.internal.LockFreeLinkedListNode.remove
  [ 2] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 60001394 ns (0.03%), 3 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 1] io.ktor.utils.io.ByteBufferChannel.flush
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 60000760 ns (0.03%), 6 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.lazySet
  [ 1] io.ktor.util.internal.LockFreeLinkedListNode.addNext
  [ 2] io.ktor.util.internal.LockFreeLinkedListNode.addLast
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher.dispatch
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [11] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [12] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [16] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 60000701 ns (0.03%), 4 samples
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.getContext
  [ 1] kotlinx.coroutines.internal.DispatchedContinuation.takeState$kotlinx_coroutines_core
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 60000252 ns (0.03%), 3 samples
  [ 0] io.ktor.util.internal.LockFreeLinkedListNode.markPrev
  [ 1] io.ktor.util.internal.LockFreeLinkedListNode.correctPrev
  [ 2] io.ktor.util.internal.LockFreeLinkedListNode.finishRemove
  [ 3] io.ktor.util.internal.LockFreeLinkedListNode.remove
  [ 4] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 59999987 ns (0.03%), 4 samples
  [ 0] io.ktor.util.internal.LockFreeLinkedListNode.getNext
  [ 1] io.ktor.util.internal.LockFreeLinkedListNode.remove
  [ 2] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 59997712 ns (0.03%), 4 samples
  [ 0] kotlinx.coroutines.DispatchedTask.run
  [ 1] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 2] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 50009142 ns (0.02%), 5 samples
  [ 0] io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
  [ 1] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 50004420 ns (0.02%), 5 samples
  [ 0] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 50003813 ns (0.02%), 2 samples
  [ 0] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 50002667 ns (0.02%), 4 samples
  [ 0] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.<init>
  [ 1] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher.dispatch
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.flush
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 50001206 ns (0.02%), 3 samples
  [ 0] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 1] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 50000710 ns (0.02%), 5 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 4] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 50000266 ns (0.02%), 5 samples
  [ 0] kotlin.jvm.internal.Intrinsics.checkNotNull
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.getContext
  [ 2] kotlin.coroutines.jvm.internal.ContinuationImpl.<init>
  [ 3] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.<init>
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 49999210 ns (0.02%), 4 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getWriteByteOrder
  [ 1] io.ktor.utils.io.ByteBufferChannel.prepareWriteBuffer$ktor_io
  [ 2] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 49998078 ns (0.02%), 5 samples
  [ 0] kotlin.jvm.internal.Intrinsics.checkNotNull
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.getContext
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 4] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [10] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [14] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 49997364 ns (0.02%), 5 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 49996000 ns (0.02%), 5 samples
  [ 0] kotlin.jvm.internal.Intrinsics.checkNotNull
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.getContext
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.getContext
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 4] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 5] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 6] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 7] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [12] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [16] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 49995764 ns (0.02%), 1 sample
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.valueCheck
  [ 1] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
  [ 2] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 3] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 4] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.flush
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 40005069 ns (0.02%), 4 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$getState
  [ 2] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [12] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 40004692 ns (0.02%), 2 samples
  [ 0] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 1] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 40004612 ns (0.02%), 4 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 40004297 ns (0.02%), 2 samples
  [ 0] pthread_self
  [ 1] sun.nio.ch.NativeThread.current
  [ 2] sun.nio.ch.NativeThreadSet.add
  [ 3] sun.nio.ch.FileChannelImpl.read
  [ 4] io.ktor.util.BufferViewJvmKt.read
  [ 5] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 40004182 ns (0.02%), 3 samples
  [ 0] kotlinx.coroutines.DispatchedTask.run
  [ 1] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 2] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 40003267 ns (0.02%), 4 samples
  [ 0] io.ktor.util.internal.LockFreeLinkedListNode.getNext
  [ 1] io.ktor.util.internal.LockFreeLinkedListNode.finishAdd
  [ 2] io.ktor.util.internal.LockFreeLinkedListNode.addNext
  [ 3] io.ktor.util.internal.LockFreeLinkedListNode.addLast
  [ 4] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher.dispatch
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [12] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [13] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [17] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 40003100 ns (0.02%), 3 samples
  [ 0] io.ktor.util.internal.LockFreeLinkedListNode.correctPrev
  [ 1] io.ktor.util.internal.LockFreeLinkedListNode.finishRemove
  [ 2] io.ktor.util.internal.LockFreeLinkedListNode.remove
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 40001740 ns (0.02%), 2 samples
  [ 0] io.ktor.util.internal.LockFreeLinkedListNode.<init>
  [ 1] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.<init>
  [ 2] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher.dispatch
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.flush
  [ 8] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [12] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 40001347 ns (0.02%), 2 samples
  [ 0] kotlinx.coroutines.DispatchedTask.run
  [ 1] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 2] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 40001232 ns (0.02%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.prepareBuffer
  [ 1] io.ktor.utils.io.ByteBufferChannel.prepareWriteBuffer$ktor_io
  [ 2] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 40000193 ns (0.02%), 4 samples
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.<init>
  [ 1] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.<init>
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 40000133 ns (0.02%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.writeSuspendPredicate
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$writeSuspendPredicate
  [ 2] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 5] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 39999996 ns (0.02%), 3 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/libnio.so
  [ 1] sun.nio.ch.FileDispatcherImpl.read0
  [ 2] sun.nio.ch.FileDispatcherImpl.read
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 39999129 ns (0.02%), 3 samples
  [ 0] java.nio.DirectByteBuffer.duplicate
  [ 1] io.ktor.util.BufferViewJvmKt.read
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 39998785 ns (0.02%), 4 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 39998175 ns (0.02%), 3 samples
  [ 0] java.nio.DirectByteBuffer.duplicate
  [ 1] io.ktor.util.BufferViewJvmKt.read
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 39996398 ns (0.02%), 2 samples
  [ 0] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 30014990 ns (0.01%), 3 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [12] start_thread

--- 30014534 ns (0.01%), 2 samples
  [ 0] sun.nio.ch.FileDispatcherImpl.read0
  [ 1] java.nio.ByteBuffer.<init>
  [ 2] java.nio.ByteBuffer.<init>
  [ 3] java.nio.MappedByteBuffer.<init>
  [ 4] java.nio.DirectByteBuffer.<init>
  [ 5] java.nio.DirectByteBuffer.duplicate
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 30004918 ns (0.01%), 2 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.accessCheck
  [ 1] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.getAndAdd
  [ 2] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.addAndGet
  [ 3] io.ktor.utils.io.internal.RingBufferCapacity.flush
  [ 4] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.flush
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 30003213 ns (0.01%), 2 samples
  [ 0] io.ktor.util.BufferViewJvmKt.read
  [ 1] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 30003054 ns (0.01%), 3 samples
  [ 0] java.lang.Thread.blockedOn
  [ 1] java.lang.System$2.blockedOn
  [ 2] java.nio.channels.spi.AbstractInterruptibleChannel.blockedOn
  [ 3] java.nio.channels.spi.AbstractInterruptibleChannel.begin
  [ 4] sun.nio.ch.FileChannelImpl.beginBlocking
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 30002999 ns (0.01%), 3 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$getState
  [ 2] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [12] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 30002747 ns (0.01%), 1 sample
  [ 0] io.ktor.utils.io.internal.WriteSessionImpl.written
  [ 1] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 30002444 ns (0.01%), 3 samples
  [ 0] io.ktor.util.internal.LockFreeLinkedListNode.getNext
  [ 1] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 30002088 ns (0.01%), 2 samples
  [ 0] sun.nio.ch.NativeThreadSet.add
  [ 1] sun.nio.ch.FileChannelImpl.read
  [ 2] io.ktor.util.BufferViewJvmKt.read
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 30002044 ns (0.01%), 2 samples
  [ 0] Java_sun_nio_ch_FileDispatcherImpl_read0
  [ 1] sun.nio.ch.FileDispatcherImpl.read0
  [ 2] sun.nio.ch.FileDispatcherImpl.read
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 30001863 ns (0.01%), 2 samples
  [ 0] kotlin.jvm.internal.Intrinsics.checkNotNull
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.getContext
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 30001747 ns (0.01%), 2 samples
  [ 0] java.lang.Thread.blockedOn
  [ 1] java.lang.System$2.blockedOn
  [ 2] java.nio.channels.spi.AbstractInterruptibleChannel.blockedOn
  [ 3] java.nio.channels.spi.AbstractInterruptibleChannel.begin
  [ 4] sun.nio.ch.FileChannelImpl.beginBlocking
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 30001508 ns (0.01%), 2 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 2] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 3] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.access$flushImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 6] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 7] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 8] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 9] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [13] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 30001464 ns (0.01%), 3 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.getAndSet
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.flush
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 30000568 ns (0.01%), 2 samples
  [ 0] Java_sun_nio_ch_NativeThread_current
  [ 1] sun.nio.ch.NativeThread.current
  [ 2] sun.nio.ch.NativeThreadSet.add
  [ 3] sun.nio.ch.FileChannelImpl.read
  [ 4] io.ktor.util.BufferViewJvmKt.read
  [ 5] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 30000552 ns (0.01%), 3 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 1] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 30000445 ns (0.01%), 3 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 4] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 30000319 ns (0.01%), 3 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 3] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 30000251 ns (0.01%), 3 samples
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.tryReadAtMost
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 30000228 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.core.Buffer.getMemory-SK3TCg8
  [ 1] io.ktor.util.BufferViewJvmKt.read
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 30000132 ns (0.01%), 2 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.valueCheck
  [ 1] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
  [ 2] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 3] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 4] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.flush
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 30000006 ns (0.01%), 1 sample
  [ 0] java.nio.DirectByteBuffer.duplicate
  [ 1] io.ktor.util.BufferViewJvmKt.read
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 29999871 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.access$flushImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 5] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 6] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 7] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 8] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [12] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 29999841 ns (0.01%), 2 samples
  [ 0] io.ktor.util.internal.LockFreeLinkedListNode.correctPrev
  [ 1] io.ktor.util.internal.LockFreeLinkedListNode.finishRemove
  [ 2] io.ktor.util.internal.LockFreeLinkedListNode.remove
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 29999548 ns (0.01%), 3 samples
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.getContext
  [ 1] io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 29999450 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 1] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 2] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 3] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 29999073 ns (0.01%), 2 samples
  [ 0] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 29999025 ns (0.01%), 2 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.getAndSet
  [ 1] io.ktor.utils.io.internal.RingBufferCapacity.flush
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.access$flushImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 5] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 6] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 7] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 8] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [12] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 29999014 ns (0.01%), 3 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$getState
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 29998927 ns (0.01%), 3 samples
  [ 0] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 29998511 ns (0.01%), 2 samples
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 1] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 2] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 3] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.flush
  [ 5] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 29998186 ns (0.01%), 1 sample
  [ 0] java.nio.Buffer.<init>
  [ 1] java.nio.ByteBuffer.<init>
  [ 2] java.nio.ByteBuffer.<init>
  [ 3] java.nio.MappedByteBuffer.<init>
  [ 4] java.nio.DirectByteBuffer.<init>
  [ 5] java.nio.DirectByteBuffer.duplicate
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 29998180 ns (0.01%), 3 samples
  [ 0] io.ktor.util.internal.LockFreeLinkedListNode.helpDelete
  [ 1] io.ktor.util.internal.LockFreeLinkedListNode.finishRemove
  [ 2] io.ktor.util.internal.LockFreeLinkedListNode.remove
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 29996941 ns (0.01%), 3 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 1] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 29992831 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.flush
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20007514 ns (0.01%), 2 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [12] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [13] start_thread

--- 20006750 ns (0.01%), 2 samples
  [ 0] kotlin.coroutines.CombinedContext.get
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.releaseIntercepted
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20005229 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20004860 ns (0.01%), 1 sample
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [12] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [13] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [14] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [15] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [16] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [17] start_thread

--- 20004516 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 3] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20003426 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeSuspendPredicate
  [ 2] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 3] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20003400 ns (0.01%), 2 samples
  [ 0] kotlin.coroutines.CombinedContext.fold
  [ 1] kotlinx.coroutines.internal.ThreadContextKt.threadContextElements
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 3] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 4] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 5] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 6] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [11] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [15] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20003293 ns (0.01%), 2 samples
  [ 0] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20003148 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 5] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20003073 ns (0.01%), 2 samples
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.getContext
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 2] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 5] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 6] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20002726 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20002485 ns (0.01%), 1 sample
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.tryWriteAtLeast
  [ 1] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20002392 ns (0.01%), 2 samples
  [ 0] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20002379 ns (0.01%), 2 samples
  [ 0] io.ktor.util.internal.LockFreeLinkedListNode.helpDelete
  [ 1] io.ktor.util.internal.LockFreeLinkedListNode.finishRemove
  [ 2] io.ktor.util.internal.LockFreeLinkedListNode.remove
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20002172 ns (0.01%), 2 samples
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 1] kotlinx.coroutines.internal.DispatchedContinuation.getContext
  [ 2] io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [12] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20001721 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 2] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20001473 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 2] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20001436 ns (0.01%), 1 sample
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 1] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 2] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 3] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.flush
  [ 5] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20001360 ns (0.01%), 2 samples
  [ 0] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 1] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20001225 ns (0.01%), 2 samples
  [ 0] java.nio.Buffer.<init>
  [ 1] java.nio.ByteBuffer.<init>
  [ 2] java.nio.ByteBuffer.<init>
  [ 3] java.nio.MappedByteBuffer.<init>
  [ 4] java.nio.DirectByteBuffer.<init>
  [ 5] java.nio.DirectByteBuffer.duplicate
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20001184 ns (0.01%), 2 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [12] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so

--- 20001133 ns (0.01%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 5] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20001083 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.flush
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20001039 ns (0.01%), 1 sample
  [ 0] kotlin.coroutines.CombinedContext.get
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.releaseIntercepted
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 5] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 6] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20001016 ns (0.01%), 2 samples
  [ 0] java.lang.Object.<init>
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.<init>
  [ 2] kotlin.coroutines.jvm.internal.ContinuationImpl.<init>
  [ 3] kotlin.coroutines.jvm.internal.ContinuationImpl.<init>
  [ 4] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.<init>
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [12] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20001016 ns (0.01%), 1 sample
  [ 0] sun.nio.ch.NativeThreadSet.add
  [ 1] sun.nio.ch.FileChannelImpl.read
  [ 2] io.ktor.util.BufferViewJvmKt.read
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20000970 ns (0.01%), 1 sample
  [ 0] java.io.RandomAccessFile.close
  [ 1] io.ktor.util.cio.FileChannelsKt$readChannel$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20000899 ns (0.01%), 1 sample
  [ 0] kotlin.coroutines.CombinedContext.get
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.releaseIntercepted
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 5] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 6] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20000882 ns (0.01%), 1 sample
  [ 0] java.nio.Buffer.limit
  [ 1] java.nio.ByteBuffer.limit
  [ 2] java.nio.MappedByteBuffer.limit
  [ 3] java.nio.MappedByteBuffer.limit
  [ 4] io.ktor.utils.io.ByteBufferChannel.prepareBuffer
  [ 5] io.ktor.utils.io.ByteBufferChannel.prepareWriteBuffer$ktor_io
  [ 6] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20000866 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 2] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20000794 ns (0.01%), 2 samples
  [ 0] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20000783 ns (0.01%), 1 sample
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.tryWriteAtLeast
  [ 1] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20000721 ns (0.01%), 2 samples
  [ 0] java.nio.ByteBuffer.<init>
  [ 1] java.nio.MappedByteBuffer.<init>
  [ 2] java.nio.DirectByteBuffer.<init>
  [ 3] java.nio.DirectByteBuffer.duplicate
  [ 4] io.ktor.util.BufferViewJvmKt.read
  [ 5] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20000647 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.internal.WriteSessionImpl.written
  [ 1] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20000560 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 1] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 2] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20000525 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 1] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20000506 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 2] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 20000448 ns (0.01%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.restoreStateAfterWrite$ktor_io
  [ 1] io.ktor.utils.io.internal.WriteSessionImpl.complete
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeSuspendSession$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspendSession$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

          ns  percent  samples  top
  ----------  -------  -------  ---
 70932840382   35.38%     7092  java.util.concurrent.ConcurrentLinkedQueue.poll
 54732082820   27.30%     4691  io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run
 25430622731   12.68%     2543  io.ktor.benchmarks.dispatchers.HotLoopDispatcher.getQueue
  8910293955    4.44%      891  jlong_disjoint_arraycopy
  7710481744    3.85%      523  read
  4740135757    2.36%      386  java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
  3820286865    1.91%      382  io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  2280115782    1.14%      186  io.ktor.util.internal.LockFreeLinkedListNode.getNext
  1790044088    0.89%      150  java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet
  1440037178    0.72%       98  io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  1010002454    0.50%      101  io.ktor.utils.io.ByteBufferChannel.setupStateForRead
   960027018    0.48%       71  io.ktor.utils.io.ByteBufferChannel.flushImpl
   880028145    0.44%       53  java.nio.MappedByteBuffer.limit
   840020299    0.42%       57  io.ktor.utils.io.internal.RingBufferCapacity.tryWriteAtLeast
   740023348    0.37%       52  kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
   730001176    0.36%       73  java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.lazySet
   720037039    0.36%       72  io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
   580013209    0.29%       42  kotlinx.coroutines.CompletionStateKt.toState$default
   560030066    0.28%       54  kotlin.coroutines.CombinedContext.get
   540124594    0.27%       43  itable stub
   530019937    0.26%       33  io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
   530004026    0.26%       53  kotlinx.coroutines.internal.ThreadContextKt$countAll$1.invoke
   380026185    0.19%       26  sun.nio.ch.FileDispatcherImpl.read0
   360004102    0.18%       24  io.ktor.utils.io.internal.RingBufferCapacity.flush
   350012371    0.17%       25  /usr/lib/x86_64-linux-gnu/libc-2.33.so
   350010785    0.17%       35  kotlin.coroutines.CombinedContext.fold
   340010988    0.17%       20  java.nio.Buffer.position
   339995607    0.17%       22  io.ktor.utils.io.ByteBufferChannel.getClosed
   310010713    0.15%       21  kotlin.coroutines.jvm.internal.ContinuationImpl.getContext
   290003435    0.14%       22  io.ktor.util.internal.LockFreeLinkedListNode.markPrev
   270002561    0.13%       18  kotlinx.coroutines.CompletionStateKt.toState
   260013528    0.13%       19  kotlinx.coroutines.DispatchedTask.run
   260006780    0.13%       23  kotlin.coroutines.ContinuationInterceptor$DefaultImpls.get
   250145443    0.12%       24  /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
   250013821    0.12%       21  io.ktor.util.internal.LockFreeLinkedListNode.remove
   240009135    0.12%       21  io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.run
   230007641    0.11%       18  kotlinx.coroutines.internal.DispatchedContinuation.takeState$kotlinx_coroutines_core
   230005888    0.11%       22  io.ktor.util.internal.LockFreeLinkedListNode.finishRemove
   220001082    0.11%       18  kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
   210007826    0.10%       21  io.ktor.utils.io.internal.RingBufferCapacity.tryReadAtMost
   210000112    0.10%       18  sun.nio.ch.NativeThread.current
   200010800    0.10%       12  io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
   190002724    0.09%       19  io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
   189997590    0.09%       18  kotlin.jvm.internal.Intrinsics.checkNotNull
   180001244    0.09%       13  io.ktor.util.internal.LockFreeLinkedListNode.correctPrev
   170009764    0.08%       17  io.ktor.utils.io.ByteBufferChannel.getState
   160003851    0.08%       15  kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
   159999792    0.08%       16  io.ktor.utils.io.ByteBufferChannel.bytesRead
   150007209    0.07%       13  io.ktor.util.internal.LockFreeLinkedListNode.helpDelete
   140013802    0.07%       14  kotlin.coroutines.jvm.internal.ContinuationImpl.<init>
   140006340    0.07%       14  kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
   130013011    0.06%       13  io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInIo2IoDispatcher$1.invokeSuspend
   130002933    0.06%        8  io.ktor.util.internal.LockFreeLinkedListKt.unwrap
   129997459    0.06%        9  java.nio.DirectByteBuffer.duplicate
   110004383    0.05%       11  kotlinx.coroutines.internal.DispatchedContinuation.getContext
   100004597    0.05%        4  io.ktor.util.BufferViewJvmKt.read
    99996082    0.05%        4  java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.valueCheck
    90005898    0.04%        5  io.ktor.utils.io.internal.WriteSessionImpl.request
    90002173    0.04%        5  kotlinx.coroutines.DispatchedTask.getExceptionalResult$kotlinx_coroutines_core
    90001237    0.04%        7  io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
    89998362    0.04%        7  java.nio.Buffer.limit
    80009243    0.04%        8  io.ktor.utils.io.ByteBufferChannel.getWriteOp
    79998418    0.04%        8  io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
    70005458    0.03%        7  io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.<init>
    70001686    0.03%        7  io.ktor.utils.io.core.ByteOrder.getNioOrder
    60004801    0.03%        5  java.lang.Thread.blockedOn
    60003707    0.03%        4  io.ktor.utils.io.internal.WriteSessionImpl.written
    59997493    0.03%        6  io.ktor.utils.io.ByteBufferChannel.suspensionForSize
    50009142    0.02%        5  io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
    50003104    0.02%        3  sun.nio.ch.NativeThreadSet.add
    50002667    0.02%        4  io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IODispatchedTask.<init>
    50002031    0.02%        3  io.ktor.util.internal.LockFreeLinkedListNode.<init>
    50001614    0.02%        3  io.ktor.utils.io.ByteBufferChannel.prepareBuffer
    50000710    0.02%        5  io.ktor.utils.io.ByteBufferChannel.readSuspend
    50000595    0.02%        5  io.ktor.utils.io.ByteBufferChannel.restoreStateAfterRead
    50000537    0.02%        4  java.nio.ByteBuffer.<init>
    49999595    0.02%        3  io.ktor.utils.io.ByteBufferChannel.writeSuspendPredicate
    49999411    0.02%        3  java.nio.Buffer.<init>
    49999210    0.02%        4  io.ktor.utils.io.ByteBufferChannel.getWriteByteOrder
    40004297    0.02%        2  pthread_self
    40001890    0.02%        4  java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.getAndSet
    39999996    0.02%        3  /usr/lib/jvm/java-11-openjdk-amd64/lib/libnio.so
    39996606    0.02%        4  io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
    39996043    0.02%        4  io.ktor.utils.io.internal.CancellableReusableContinuation.parent
    30004918    0.01%        2  java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.accessCheck
    30003028    0.01%        3  io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
    30002250    0.01%        3  io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher.dispatch
    30002044    0.01%        2  Java_sun_nio_ch_FileDispatcherImpl_read0
    30000568    0.01%        2  Java_sun_nio_ch_NativeThread_current
    30000228    0.01%        2  io.ktor.utils.io.core.Buffer.getMemory-SK3TCg8
    29999794    0.01%        3  java.nio.DirectByteBuffer.get
    29999025    0.01%        2  java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.getAndSet
    20006372    0.01%        2  io.ktor.utils.io.core.Buffer.getStartGap
    20003821    0.01%        2  io.ktor.utils.io.ByteBufferChannel.readAvailable
    20001343    0.01%        2  sun.nio.ch.FileChannelImpl.ensureOpen
    20001016    0.01%        2  java.lang.Object.<init>
    20000970    0.01%        1  java.io.RandomAccessFile.close
    20000448    0.01%        1  io.ktor.utils.io.ByteBufferChannel.restoreStateAfterWrite$ktor_io
    19999889    0.01%        2  Interpreter
    19999495    0.01%        2  java.nio.DirectByteBuffer.<init>
    19999328    0.01%        2  java.nio.Buffer.checkBounds
    19997441    0.01%        2  java.nio.ByteBuffer.order
    10076219    0.01%        1  kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
    10004218    0.00%        1  io.ktor.util.cio.FileChannelsKt.readChannel
    10003039    0.00%        1  kotlin.coroutines.CoroutineContext$Element$DefaultImpls.get
    10002675    0.00%        1  kotlin.coroutines.jvm.internal.BaseContinuationImpl.<init>
    10001672    0.00%        1  io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
    10001579    0.00%        1  unsafe_arraycopy
    10001345    0.00%        1  io.ktor.utils.io.ByteBufferChannel.getReadOp
    10001020    0.00%        1  io.ktor.utils.io.ByteBufferChannel$attachJob$1.invoke
    10000999    0.00%        1  jdk.internal.misc.Unsafe.checkOffset
    10000937    0.00%        1  java.nio.Buffer.hasRemaining
    10000808    0.00%        1  io.ktor.utils.io.ChannelScope.getChannel
    10000797    0.00%        1  io.ktor.utils.io.internal.CancellableReusableContinuation$JobRelation.<init>
    10000542    0.00%        1  io.ktor.utils.io.ByteBufferChannel.bytesWritten
    10000532    0.00%        1  io.ktor.utils.io.ByteBufferChannel.newBuffer
    10000440    0.00%        1  java.nio.DirectByteBuffer.ix
    10000393    0.00%        1  kotlin.jvm.internal.Intrinsics.checkNotNullParameter
    10000263    0.00%        1  java.nio.MappedByteBuffer.<init>
    10000256    0.00%        1  java.nio.HeapByteBuffer.ix
    10000128    0.00%        1  io.ktor.utils.io.ByteBufferChannel.setTotalBytesRead$ktor_io
    10000069    0.00%        1  kotlinx.coroutines.internal.DispatchedContinuation.awaitReusability
    10000048    0.00%        1  jdk.internal.misc.Unsafe.checkSize
     9999982    0.00%        1  kotlinx.coroutines.internal.ThreadContextKt.threadContextElements
     9999794    0.00%        1  io.ktor.util.internal.LockFreeLinkedListNode.addNext
     9999744    0.00%        1  io.ktor.utils.io.ByteBufferChannel.flush
     9999733    0.00%        1  jdk.internal.misc.Unsafe.copyMemory
     9999695    0.00%        1  io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
     9999543    0.00%        1  java.nio.HeapByteBuffer.put
     9999350    0.00%        1  java.nio.Buffer.remaining
     9999319    0.00%        1  io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
     9998471    0.00%        1  kotlin.ResultKt.throwOnFailure
     9997784    0.00%        1  kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
     9997199    0.00%        1  java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.accessCheck
     9985652    0.00%        1  io.ktor.utils.io.core.BufferSharedState.getStartGap

