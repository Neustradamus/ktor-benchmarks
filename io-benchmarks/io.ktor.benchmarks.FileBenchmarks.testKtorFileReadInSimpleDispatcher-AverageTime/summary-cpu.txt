--- Execution profile ---
Total samples       : 4451
unknown_Java        : 1 (0.02%)

--- 15340000000 ns (34.46%), 1534 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 5200000000 ns (11.68%), 520 samples
  [ 0] __psynch_cvsignal
  [ 1] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 6] java.util.concurrent.locks.ReentrantLock.unlock
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [10] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [11] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [12] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [13] io.ktor.benchmarks.SimpleDispatcher.dispatch
  [14] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [15] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [16] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [17] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [18] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [19] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [20] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [21] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [22] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [23] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [24] kotlinx.coroutines.DispatchedTask.run
  [25] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [26] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [27] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [28] kotlinx.coroutines.BuildersKt.runBlocking
  [29] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [30] kotlinx.coroutines.BuildersKt.runBlocking$default
  [31] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [32] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [33] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [34] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [35] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [36] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [37] java.lang.reflect.Method.invoke
  [38] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [39] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [40] java.util.concurrent.FutureTask.run
  [41] java.util.concurrent.Executors$RunnableAdapter.call
  [42] java.util.concurrent.FutureTask.run
  [43] java.util.concurrent.ThreadPoolExecutor.runWorker
  [44] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [45] java.lang.Thread.run

--- 4630000000 ns (10.40%), 463 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.park
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 6] java.util.concurrent.ForkJoinPool.managedBlock
  [ 7] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [10] java.util.concurrent.ThreadPoolExecutor.getTask
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 2230000000 ns (5.01%), 223 samples
  [ 0] jdk.internal.misc.Unsafe.park
  [ 1] java.util.concurrent.locks.LockSupport.parkNanos
  [ 2] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 3] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 4] kotlinx.coroutines.BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 7] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [12] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 2060000000 ns (4.63%), 206 samples
  [ 0] __gettimeofday
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 2000000000 ns (4.49%), 200 samples
  [ 0] read
  [ 1] sun.nio.ch.FileDispatcherImpl.read0
  [ 2] sun.nio.ch.FileDispatcherImpl.read
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] java.util.concurrent.Executors$RunnableAdapter.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.run

--- 1380000000 ns (3.10%), 138 samples
  [ 0] jdk.internal.misc.Unsafe.park
  [ 1] java.util.concurrent.locks.LockSupport.park
  [ 2] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 3] java.util.concurrent.ForkJoinPool.managedBlock
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 7] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 8] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 9] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [10] java.lang.Thread.run

--- 940000000 ns (2.11%), 94 samples
  [ 0] __psynch_cvsignal
  [ 1] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] kotlinx.coroutines.EventLoopImplPlatform.unpark
  [ 5] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 6] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [10] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [11] io.ktor.utils.io.ByteBufferChannel.flush
  [12] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 560000000 ns (1.26%), 56 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] io.ktor.utils.io.internal.RingBufferCapacity.tryReadAtMost
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 470000000 ns (1.06%), 47 samples
  [ 0] __os_ch_md_redzone_cookie
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 380000000 ns (0.85%), 38 samples
  [ 0] kotlin.coroutines.jvm.internal.Boxing.boxBoolean
  [ 1] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInSimpleDispatcher$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 340000000 ns (0.76%), 34 samples
  [ 0] Parker::park(bool, long)
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 340000000 ns (0.76%), 34 samples
  [ 0] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.parkNanos
  [ 3] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 8] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 340000000 ns (0.76%), 34 samples
  [ 0] err_codes_mach_rcv
  [ 1] __os_ch_md_redzone_cookie
  [ 2] Parker::park(bool, long)
  [ 3] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 4] jdk.internal.misc.Unsafe.park
  [ 5] java.util.concurrent.locks.LockSupport.parkNanos
  [ 6] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [10] kotlinx.coroutines.BuildersKt.runBlocking$default
  [11] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 330000000 ns (0.74%), 33 samples
  [ 0] err_codes_mach_rcv
  [ 1] Parker::unpark()
  [ 2] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 3] jdk.internal.misc.Unsafe.unpark
  [ 4] java.util.concurrent.locks.LockSupport.unpark
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 7] java.util.concurrent.locks.ReentrantLock.unlock
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [10] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [11] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [12] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [13] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [14] io.ktor.benchmarks.SimpleDispatcher.dispatch
  [15] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [16] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [17] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [18] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [19] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [20] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [21] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [22] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [23] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [24] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [25] kotlinx.coroutines.DispatchedTask.run
  [26] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [27] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [28] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [29] kotlinx.coroutines.BuildersKt.runBlocking
  [30] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [31] kotlinx.coroutines.BuildersKt.runBlocking$default
  [32] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [33] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [34] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [35] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [36] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [37] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [38] java.lang.reflect.Method.invoke
  [39] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [40] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [41] java.util.concurrent.FutureTask.run
  [42] java.util.concurrent.Executors$RunnableAdapter.call
  [43] java.util.concurrent.FutureTask.run
  [44] java.util.concurrent.ThreadPoolExecutor.runWorker
  [45] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [46] java.lang.Thread.run

--- 200000000 ns (0.45%), 20 samples
  [ 0] err_codes_iokit_usb
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 180000000 ns (0.40%), 18 samples
  [ 0] os::javaTimeNanos()
  [ 1] java.nio.Buffer.position
  [ 2] java.nio.ByteBuffer.position
  [ 3] java.nio.MappedByteBuffer.position
  [ 4] java.nio.MappedByteBuffer.position
  [ 5] java.nio.ByteBuffer.put
  [ 6] java.nio.HeapByteBuffer.put
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [11] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [12] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 170000000 ns (0.38%), 17 samples
  [ 0] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.park
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 4] java.util.concurrent.ForkJoinPool.managedBlock
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 8] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 9] java.util.concurrent.ThreadPoolExecutor.runWorker
  [10] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [11] java.lang.Thread.run

--- 140000000 ns (0.31%), 14 samples
  [ 0] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 1] jdk.internal.misc.Unsafe.unpark
  [ 2] java.util.concurrent.locks.LockSupport.unpark
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 5] java.util.concurrent.locks.ReentrantLock.unlock
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [10] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [11] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [12] io.ktor.benchmarks.SimpleDispatcher.dispatch
  [13] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [14] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [15] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [16] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [17] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [18] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [19] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [20] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [21] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [22] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [23] kotlinx.coroutines.DispatchedTask.run
  [24] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [25] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [26] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [27] kotlinx.coroutines.BuildersKt.runBlocking
  [28] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [29] kotlinx.coroutines.BuildersKt.runBlocking$default
  [30] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [31] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [32] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [33] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [34] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [35] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [36] java.lang.reflect.Method.invoke
  [37] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [38] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [39] java.util.concurrent.FutureTask.run
  [40] java.util.concurrent.Executors$RunnableAdapter.call
  [41] java.util.concurrent.FutureTask.run
  [42] java.util.concurrent.ThreadPoolExecutor.runWorker
  [43] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [44] java.lang.Thread.run

--- 130000000 ns (0.29%), 13 samples
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.releaseIntercepted
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 130000000 ns (0.29%), 13 samples
  [ 0] err_codes_mach_rcv
  [ 1] __os_ch_md_redzone_cookie
  [ 2] Parker::park(bool, long)
  [ 3] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 4] jdk.internal.misc.Unsafe.park
  [ 5] java.util.concurrent.locks.LockSupport.park
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] java.util.concurrent.ForkJoinPool.managedBlock
  [ 8] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [10] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [11] java.util.concurrent.ThreadPoolExecutor.getTask
  [12] java.util.concurrent.ThreadPoolExecutor.runWorker
  [13] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [14] java.lang.Thread.run

--- 120000000 ns (0.27%), 12 samples
  [ 0] Parker::park(bool, long)
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.park
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 5] java.util.concurrent.ForkJoinPool.managedBlock
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 9] java.util.concurrent.ThreadPoolExecutor.getTask
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

--- 120000000 ns (0.27%), 12 samples
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState
  [ 1] java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock
  [ 2] java.util.concurrent.locks.ReentrantLock$Sync.lock
  [ 3] java.util.concurrent.locks.ReentrantLock.lock
  [ 4] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [10] io.ktor.benchmarks.SimpleDispatcher.dispatch
  [11] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [12] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [13] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [14] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [15] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [16] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [17] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [18] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [19] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [20] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [21] kotlinx.coroutines.DispatchedTask.run
  [22] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [23] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [24] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [25] kotlinx.coroutines.BuildersKt.runBlocking
  [26] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [27] kotlinx.coroutines.BuildersKt.runBlocking$default
  [28] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [29] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [30] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [31] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [32] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [33] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [34] java.lang.reflect.Method.invoke
  [35] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [36] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [37] java.util.concurrent.FutureTask.run
  [38] java.util.concurrent.Executors$RunnableAdapter.call
  [39] java.util.concurrent.FutureTask.run
  [40] java.util.concurrent.ThreadPoolExecutor.runWorker
  [41] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [42] java.lang.Thread.run

--- 120000000 ns (0.27%), 12 samples
  [ 0] internal_catch_exc_subsystem
  [ 1] __os_ch_md_redzone_cookie
  [ 2] Parker::park(bool, long)
  [ 3] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 4] jdk.internal.misc.Unsafe.park
  [ 5] java.util.concurrent.locks.LockSupport.parkNanos
  [ 6] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [10] kotlinx.coroutines.BuildersKt.runBlocking$default
  [11] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 110000000 ns (0.25%), 11 samples
  [ 0] jdk.internal.misc.Unsafe.getAndBitwiseAndInt
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus
  [ 2] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.signal
  [ 4] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [10] io.ktor.benchmarks.SimpleDispatcher.dispatch
  [11] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [12] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [13] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [14] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [15] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [16] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [17] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [18] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [19] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [20] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [21] kotlinx.coroutines.DispatchedTask.run
  [22] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [23] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [24] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [25] kotlinx.coroutines.BuildersKt.runBlocking
  [26] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [27] kotlinx.coroutines.BuildersKt.runBlocking$default
  [28] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [29] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [30] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [31] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [32] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [33] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [34] java.lang.reflect.Method.invoke
  [35] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [36] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [37] java.util.concurrent.FutureTask.run
  [38] java.util.concurrent.Executors$RunnableAdapter.call
  [39] java.util.concurrent.FutureTask.run
  [40] java.util.concurrent.ThreadPoolExecutor.runWorker
  [41] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [42] java.lang.Thread.run

--- 110000000 ns (0.25%), 11 samples
  [ 0] __os_ch_md_redzone_cookie
  [ 1] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 6] java.util.concurrent.locks.ReentrantLock.unlock
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [10] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [11] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [12] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [13] io.ktor.benchmarks.SimpleDispatcher.dispatch
  [14] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [15] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [16] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [17] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [18] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [19] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [20] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [21] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [22] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [23] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [24] kotlinx.coroutines.DispatchedTask.run
  [25] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [26] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [27] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [28] kotlinx.coroutines.BuildersKt.runBlocking
  [29] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [30] kotlinx.coroutines.BuildersKt.runBlocking$default
  [31] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [32] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [33] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [34] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [35] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [36] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [37] java.lang.reflect.Method.invoke
  [38] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [39] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [40] java.util.concurrent.FutureTask.run
  [41] java.util.concurrent.Executors$RunnableAdapter.call
  [42] java.util.concurrent.FutureTask.run
  [43] java.util.concurrent.ThreadPoolExecutor.runWorker
  [44] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [45] java.lang.Thread.run

--- 110000000 ns (0.25%), 11 samples
  [ 0] os::javaTimeNanos()
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer.setState
  [ 2] java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock
  [ 3] java.util.concurrent.locks.ReentrantLock$Sync.lockInterruptibly
  [ 4] java.util.concurrent.locks.ReentrantLock.lockInterruptibly
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 7] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 8] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 9] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [10] java.lang.Thread.run

--- 110000000 ns (0.25%), 11 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
  [ 1] kotlinx.coroutines.EventLoopImplBase.dequeue
  [ 2] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 3] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 8] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 100000000 ns (0.22%), 10 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 100000000 ns (0.22%), 10 samples
  [ 0] mach_absolute_time
  [ 1] os::javaTimeNanos()
  [ 2] java.nio.Buffer.position
  [ 3] java.nio.ByteBuffer.position
  [ 4] java.nio.MappedByteBuffer.position
  [ 5] java.nio.MappedByteBuffer.position
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [12] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [13] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [17] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [21] kotlinx.coroutines.BuildersKt.runBlocking$default
  [22] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 100000000 ns (0.22%), 10 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.internal.RingBufferCapacity.completeRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 90000000 ns (0.20%), 9 samples
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 4] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 5] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 6] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 7] java.lang.Thread.run

--- 90000000 ns (0.20%), 9 samples
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 1] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInSimpleDispatcher$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 90000000 ns (0.20%), 9 samples
  [ 0] __psynch_mutexwait
  [ 1] err_codes_iokit_usb
  [ 2] Parker::unpark()
  [ 3] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 4] jdk.internal.misc.Unsafe.unpark
  [ 5] java.util.concurrent.locks.LockSupport.unpark
  [ 6] kotlinx.coroutines.EventLoopImplPlatform.unpark
  [ 7] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 8] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [11] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [12] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [13] io.ktor.utils.io.ByteBufferChannel.flush
  [14] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 90000000 ns (0.20%), 9 samples
  [ 0] __commpage_gettimeofday_internal
  [ 1] [unknown]
  [ 2] [unknown]
  [ 3] to_abstime(timespec*, long, bool, bool)
  [ 4] Parker::park(bool, long)
  [ 5] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 6] jdk.internal.misc.Unsafe.park
  [ 7] java.util.concurrent.locks.LockSupport.parkNanos
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [14] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 90000000 ns (0.20%), 9 samples
  [ 0] java.nio.Buffer.position
  [ 1] java.nio.ByteBuffer.position
  [ 2] java.nio.ByteBuffer.put
  [ 3] java.nio.HeapByteBuffer.put
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [13] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [17] kotlinx.coroutines.BuildersKt.runBlocking$default
  [18] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 80000000 ns (0.18%), 8 samples
  [ 0] kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 3] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 8] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 80000000 ns (0.18%), 8 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 80000000 ns (0.18%), 8 samples
  [ 0] internal_catch_exc_subsystem
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 80000000 ns (0.18%), 8 samples
  [ 0] ThreadsListHandle::ThreadsListHandle(Thread*)
  [ 1] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 6] java.util.concurrent.locks.ReentrantLock.unlock
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [10] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [11] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [12] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [13] io.ktor.benchmarks.SimpleDispatcher.dispatch
  [14] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [15] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [16] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [17] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [18] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [19] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [20] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [21] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [22] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [23] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [24] kotlinx.coroutines.DispatchedTask.run
  [25] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [26] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [27] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [28] kotlinx.coroutines.BuildersKt.runBlocking
  [29] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [30] kotlinx.coroutines.BuildersKt.runBlocking$default
  [31] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [32] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [33] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [34] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [35] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [36] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [37] java.lang.reflect.Method.invoke
  [38] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [39] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [40] java.util.concurrent.FutureTask.run
  [41] java.util.concurrent.Executors$RunnableAdapter.call
  [42] java.util.concurrent.FutureTask.run
  [43] java.util.concurrent.ThreadPoolExecutor.runWorker
  [44] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [45] java.lang.Thread.run

--- 80000000 ns (0.18%), 8 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 80000000 ns (0.18%), 8 samples
  [ 0] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 1] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 2] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 3] java.lang.Thread.run

--- 70000000 ns (0.16%), 7 samples
  [ 0] err_codes_mach_rcv
  [ 1] Mutex::lock_without_safepoint_check()
  [ 2] Parker::park(bool, long)
  [ 3] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 4] jdk.internal.misc.Unsafe.park
  [ 5] java.util.concurrent.locks.LockSupport.parkNanos
  [ 6] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [10] kotlinx.coroutines.BuildersKt.runBlocking$default
  [11] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 70000000 ns (0.16%), 7 samples
  [ 0] mach_absolute_time
  [ 1] __commpage_gettimeofday_internal
  [ 2] [unknown]
  [ 3] [unknown]
  [ 4] to_abstime(timespec*, long, bool, bool)
  [ 5] Parker::park(bool, long)
  [ 6] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 7] jdk.internal.misc.Unsafe.park
  [ 8] java.util.concurrent.locks.LockSupport.parkNanos
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 70000000 ns (0.16%), 7 samples
  [ 0] kotlinx.coroutines.EventLoop.processUnconfinedEvent
  [ 1] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 2] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 3] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 4] kotlinx.coroutines.BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 7] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [12] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 70000000 ns (0.16%), 7 samples
  [ 0] [unknown]
  [ 1] to_abstime(timespec*, long, bool, bool)
  [ 2] Parker::park(bool, long)
  [ 3] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 4] jdk.internal.misc.Unsafe.park
  [ 5] java.util.concurrent.locks.LockSupport.parkNanos
  [ 6] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [10] kotlinx.coroutines.BuildersKt.runBlocking$default
  [11] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 70000000 ns (0.16%), 7 samples
  [ 0] err_codes_mach_rcv
  [ 1] Mutex::lock_without_safepoint_check()
  [ 2] Parker::park(bool, long)
  [ 3] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 4] jdk.internal.misc.Unsafe.park
  [ 5] java.util.concurrent.locks.LockSupport.park
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] java.util.concurrent.ForkJoinPool.managedBlock
  [ 8] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [10] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [11] java.util.concurrent.ThreadPoolExecutor.getTask
  [12] java.util.concurrent.ThreadPoolExecutor.runWorker
  [13] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [14] java.lang.Thread.run

--- 60000000 ns (0.13%), 6 samples
  [ 0] vtable stub
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 60000000 ns (0.13%), 6 samples
  [ 0] ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**)
  [ 1] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 6] java.util.concurrent.locks.ReentrantLock.unlock
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [10] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [11] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [12] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [13] io.ktor.benchmarks.SimpleDispatcher.dispatch
  [14] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [15] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [16] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [17] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [18] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [19] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [20] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [21] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [22] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [23] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [24] kotlinx.coroutines.DispatchedTask.run
  [25] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [26] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [27] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [28] kotlinx.coroutines.BuildersKt.runBlocking
  [29] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [30] kotlinx.coroutines.BuildersKt.runBlocking$default
  [31] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [32] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [33] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [34] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [35] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [36] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [37] java.lang.reflect.Method.invoke
  [38] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [39] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [40] java.util.concurrent.FutureTask.run
  [41] java.util.concurrent.Executors$RunnableAdapter.call
  [42] java.util.concurrent.FutureTask.run
  [43] java.util.concurrent.ThreadPoolExecutor.runWorker
  [44] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [45] java.lang.Thread.run

--- 60000000 ns (0.13%), 6 samples
  [ 0] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInSimpleDispatcher$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 60000000 ns (0.13%), 6 samples
  [ 0] __os_ch_md_redzone_cookie
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.park
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 6] java.util.concurrent.ForkJoinPool.managedBlock
  [ 7] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [10] java.util.concurrent.ThreadPoolExecutor.getTask
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 60000000 ns (0.13%), 6 samples
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 1] java.util.concurrent.locks.ReentrantLock.unlock
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 4] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [ 8] io.ktor.benchmarks.SimpleDispatcher.dispatch
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [11] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [12] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [15] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [16] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [17] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [18] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [19] kotlinx.coroutines.DispatchedTask.run
  [20] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [21] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [23] kotlinx.coroutines.BuildersKt.runBlocking
  [24] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [25] kotlinx.coroutines.BuildersKt.runBlocking$default
  [26] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [27] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [28] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [29] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [30] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [31] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [32] java.lang.reflect.Method.invoke
  [33] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [34] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.Executors$RunnableAdapter.call
  [37] java.util.concurrent.FutureTask.run
  [38] java.util.concurrent.ThreadPoolExecutor.runWorker
  [39] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [40] java.lang.Thread.run

--- 60000000 ns (0.13%), 6 samples
  [ 0] java.lang.Thread.interrupted
  [ 1] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 2] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 3] kotlinx.coroutines.BuildersKt.runBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 6] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 60000000 ns (0.13%), 6 samples
  [ 0] JavaThread::threadObj() const
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.parkNanos
  [ 3] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 8] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 60000000 ns (0.13%), 6 samples
  [ 0] kotlinx.coroutines.AbstractTimeSourceKt.getTimeSource
  [ 1] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 2] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 3] kotlinx.coroutines.BuildersKt.runBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 6] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 60000000 ns (0.13%), 6 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 1] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.flush
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] java.util.concurrent.Executors$RunnableAdapter.call
  [ 7] java.util.concurrent.FutureTask.run
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 9] java.util.concurrent.ThreadPoolExecutor.runWorker
  [10] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [11] java.lang.Thread.run

--- 50000000 ns (0.11%), 5 samples
  [ 0] __os_ch_md_redzone_cookie
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 50000000 ns (0.11%), 5 samples
  [ 0] JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool)
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 50000000 ns (0.11%), 5 samples
  [ 0] gCRAnnotations
  [ 1] __os_ch_md_redzone_cookie
  [ 2] Parker::park(bool, long)
  [ 3] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 4] jdk.internal.misc.Unsafe.park
  [ 5] java.util.concurrent.locks.LockSupport.parkNanos
  [ 6] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [10] kotlinx.coroutines.BuildersKt.runBlocking$default
  [11] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 50000000 ns (0.11%), 5 samples
  [ 0] mach_host_special_port_for_id.hsp_ids
  [ 1] __os_ch_md_redzone_cookie
  [ 2] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 3] jdk.internal.misc.Unsafe.unpark
  [ 4] java.util.concurrent.locks.LockSupport.unpark
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 7] java.util.concurrent.locks.ReentrantLock.unlock
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [10] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [11] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [12] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [13] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [14] io.ktor.benchmarks.SimpleDispatcher.dispatch
  [15] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [16] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [17] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [18] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [19] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [20] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [21] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [22] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [23] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [24] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [25] kotlinx.coroutines.DispatchedTask.run
  [26] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [27] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [28] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [29] kotlinx.coroutines.BuildersKt.runBlocking
  [30] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [31] kotlinx.coroutines.BuildersKt.runBlocking$default
  [32] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [33] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [34] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [35] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [36] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [37] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [38] java.lang.reflect.Method.invoke
  [39] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [40] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [41] java.util.concurrent.FutureTask.run
  [42] java.util.concurrent.Executors$RunnableAdapter.call
  [43] java.util.concurrent.FutureTask.run
  [44] java.util.concurrent.ThreadPoolExecutor.runWorker
  [45] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [46] java.lang.Thread.run

--- 50000000 ns (0.11%), 5 samples
  [ 0] err_codes_iokit_usb
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 50000000 ns (0.11%), 5 samples
  [ 0] to_abstime(timespec*, long, bool, bool)
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 50000000 ns (0.11%), 5 samples
  [ 0] mach_absolute_time
  [ 1] java.nio.Buffer.position
  [ 2] java.nio.ByteBuffer.position
  [ 3] java.nio.MappedByteBuffer.position
  [ 4] java.nio.MappedByteBuffer.position
  [ 5] java.nio.ByteBuffer.put
  [ 6] java.nio.HeapByteBuffer.put
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [11] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [12] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 50000000 ns (0.11%), 5 samples
  [ 0] JavaThread::threadObj() const
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 50000000 ns (0.11%), 5 samples
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.completeRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 50000000 ns (0.11%), 5 samples
  [ 0] err_codes_iokit_usb
  [ 1] Parker::unpark()
  [ 2] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 3] jdk.internal.misc.Unsafe.unpark
  [ 4] java.util.concurrent.locks.LockSupport.unpark
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 7] java.util.concurrent.locks.ReentrantLock.unlock
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [10] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [11] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [12] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [13] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [14] io.ktor.benchmarks.SimpleDispatcher.dispatch
  [15] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [16] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [17] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [18] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [19] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [20] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [21] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [22] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [23] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [24] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [25] kotlinx.coroutines.DispatchedTask.run
  [26] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [27] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [28] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [29] kotlinx.coroutines.BuildersKt.runBlocking
  [30] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [31] kotlinx.coroutines.BuildersKt.runBlocking$default
  [32] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [33] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [34] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [35] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [36] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [37] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [38] java.lang.reflect.Method.invoke
  [39] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [40] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [41] java.util.concurrent.FutureTask.run
  [42] java.util.concurrent.Executors$RunnableAdapter.call
  [43] java.util.concurrent.FutureTask.run
  [44] java.util.concurrent.ThreadPoolExecutor.runWorker
  [45] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [46] java.lang.Thread.run

--- 50000000 ns (0.11%), 5 samples
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer.enqueue
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 2] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.signal
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 4] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [ 9] io.ktor.benchmarks.SimpleDispatcher.dispatch
  [10] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [11] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [12] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [13] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [14] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [15] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [16] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [17] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [18] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [19] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [20] kotlinx.coroutines.DispatchedTask.run
  [21] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [22] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [23] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [24] kotlinx.coroutines.BuildersKt.runBlocking
  [25] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [26] kotlinx.coroutines.BuildersKt.runBlocking$default
  [27] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [28] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [29] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [30] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [31] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [32] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [33] java.lang.reflect.Method.invoke
  [34] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [35] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [36] java.util.concurrent.FutureTask.run
  [37] java.util.concurrent.Executors$RunnableAdapter.call
  [38] java.util.concurrent.FutureTask.run
  [39] java.util.concurrent.ThreadPoolExecutor.runWorker
  [40] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [41] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] Mutex::lock_without_safepoint_check()
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] java_lang_Thread::set_thread_status(oopDesc*, JavaThreadStatus)
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.park
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 5] java.util.concurrent.ForkJoinPool.managedBlock
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 9] java.util.concurrent.ThreadPoolExecutor.getTask
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer.casTail
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer.enqueue
  [ 2] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.signal
  [ 4] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [10] io.ktor.benchmarks.SimpleDispatcher.dispatch
  [11] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [12] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [13] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [14] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [15] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [16] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [17] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [18] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [19] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [20] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [21] kotlinx.coroutines.DispatchedTask.run
  [22] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [23] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [24] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [25] kotlinx.coroutines.BuildersKt.runBlocking
  [26] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [27] kotlinx.coroutines.BuildersKt.runBlocking$default
  [28] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [29] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [30] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [31] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [32] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [33] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [34] java.lang.reflect.Method.invoke
  [35] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [36] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [37] java.util.concurrent.FutureTask.run
  [38] java.util.concurrent.Executors$RunnableAdapter.call
  [39] java.util.concurrent.FutureTask.run
  [40] java.util.concurrent.ThreadPoolExecutor.runWorker
  [41] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [42] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] err_codes_iokit_usb
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.park
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 6] java.util.concurrent.ForkJoinPool.managedBlock
  [ 7] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [10] java.util.concurrent.ThreadPoolExecutor.getTask
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] [unknown]
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] [unknown]
  [ 1] [unknown]
  [ 2] to_abstime(timespec*, long, bool, bool)
  [ 3] Parker::park(bool, long)
  [ 4] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 5] jdk.internal.misc.Unsafe.park
  [ 6] java.util.concurrent.locks.LockSupport.parkNanos
  [ 7] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [11] kotlinx.coroutines.BuildersKt.runBlocking$default
  [12] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [14] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.getContext
  [ 1] kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] java.util.concurrent.Executors$RunnableAdapter.call
  [ 4] java.util.concurrent.FutureTask.run
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 6] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 7] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 8] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ull>::oop_access_barrier(void*)
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
  [ 1] kotlinx.coroutines.EventLoopImplBase.enqueueImpl
  [ 2] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 3] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [11] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [12] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] java_lang_Thread::set_thread_status(oopDesc*, JavaThreadStatus)
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] mach_task_special_port_for_id.tsp_ids
  [ 1] __os_ch_md_redzone_cookie
  [ 2] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 3] jdk.internal.misc.Unsafe.unpark
  [ 4] java.util.concurrent.locks.LockSupport.unpark
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 7] java.util.concurrent.locks.ReentrantLock.unlock
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [10] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [11] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [12] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [13] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [14] io.ktor.benchmarks.SimpleDispatcher.dispatch
  [15] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [16] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [17] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [18] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [19] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [20] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [21] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [22] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [23] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [24] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [25] kotlinx.coroutines.DispatchedTask.run
  [26] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [27] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [28] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [29] kotlinx.coroutines.BuildersKt.runBlocking
  [30] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [31] kotlinx.coroutines.BuildersKt.runBlocking$default
  [32] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [33] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [34] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [35] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [36] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [37] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [38] java.lang.reflect.Method.invoke
  [39] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [40] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [41] java.util.concurrent.FutureTask.run
  [42] java.util.concurrent.Executors$RunnableAdapter.call
  [43] java.util.concurrent.FutureTask.run
  [44] java.util.concurrent.ThreadPoolExecutor.runWorker
  [45] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [46] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.getContext
  [ 1] kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock
  [ 2] java.util.concurrent.locks.ReentrantLock$Sync.lockInterruptibly
  [ 3] java.util.concurrent.locks.ReentrantLock.lockInterruptibly
  [ 4] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 6] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 7] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 8] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 9] java.lang.Thread.run

--- 40000000 ns (0.09%), 4 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 1] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInSimpleDispatcher$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] jdk.internal.misc.Unsafe.unpark
  [ 1] java.util.concurrent.locks.LockSupport.unpark
  [ 2] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 4] java.util.concurrent.locks.ReentrantLock.unlock
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [10] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [11] io.ktor.benchmarks.SimpleDispatcher.dispatch
  [12] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [13] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [14] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [15] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [16] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [17] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [18] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [19] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [20] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [21] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [22] kotlinx.coroutines.DispatchedTask.run
  [23] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [24] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [25] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [26] kotlinx.coroutines.BuildersKt.runBlocking
  [27] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [28] kotlinx.coroutines.BuildersKt.runBlocking$default
  [29] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [30] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [31] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [32] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [33] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [34] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [35] java.lang.reflect.Method.invoke
  [36] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [37] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [38] java.util.concurrent.FutureTask.run
  [39] java.util.concurrent.Executors$RunnableAdapter.call
  [40] java.util.concurrent.FutureTask.run
  [41] java.util.concurrent.ThreadPoolExecutor.runWorker
  [42] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [43] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 1] kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 4] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 5] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 6] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 7] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] SystemDictionaryShared::validate_before_archiving(InstanceKlass*) (.cold.1)
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 1] io.ktor.utils.io.ByteBufferChannel.getState
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInSimpleDispatcher$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] kotlinx.coroutines.internal.ThreadContextKt.threadContextElements
  [ 1] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 2] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 3] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 4] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 5] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 6] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 7] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 8] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 9] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] java.util.concurrent.Executors$RunnableAdapter.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**)
  [ 1] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] kotlinx.coroutines.EventLoopImplPlatform.unpark
  [ 5] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 6] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [10] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [11] io.ktor.utils.io.ByteBufferChannel.flush
  [12] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] stat$INODE64
  [ 1] java.io.UnixFileSystem.getLength
  [ 2] java.io.File.length
  [ 3] io.ktor.util.cio.FileChannelsKt.readChannel
  [ 4] io.ktor.util.cio.FileChannelsKt.readChannel$default
  [ 5] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInSimpleDispatcher$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] io.ktor.utils.io.core.Buffer.resetForWrite
  [ 1] io.ktor.utils.io.core.IoBuffer.resetFromContentToWrite
  [ 2] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] java.util.concurrent.Executors$RunnableAdapter.call
  [ 7] java.util.concurrent.FutureTask.run
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 9] java.util.concurrent.ThreadPoolExecutor.runWorker
  [10] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [11] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] internal_catch_exc_subsystem
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.park
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 6] java.util.concurrent.ForkJoinPool.managedBlock
  [ 7] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [10] java.util.concurrent.ThreadPoolExecutor.getTask
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 1] kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] java.util.concurrent.Executors$RunnableAdapter.call
  [ 4] java.util.concurrent.FutureTask.run
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 6] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 7] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 8] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] __commpage_gettimeofday
  [ 1] [unknown]
  [ 2] to_abstime(timespec*, long, bool, bool)
  [ 3] Parker::park(bool, long)
  [ 4] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 5] jdk.internal.misc.Unsafe.park
  [ 6] java.util.concurrent.locks.LockSupport.parkNanos
  [ 7] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [11] kotlinx.coroutines.BuildersKt.runBlocking$default
  [12] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [14] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] java.lang.Integer.intValue
  [ 1] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInSimpleDispatcher$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] oopDesc::address_field(int) const
  [ 1] ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**)
  [ 2] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 3] jdk.internal.misc.Unsafe.unpark
  [ 4] java.util.concurrent.locks.LockSupport.unpark
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 7] java.util.concurrent.locks.ReentrantLock.unlock
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [10] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [11] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [12] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [13] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [14] io.ktor.benchmarks.SimpleDispatcher.dispatch
  [15] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [16] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [17] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [18] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [19] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [20] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [21] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [22] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [23] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [24] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [25] kotlinx.coroutines.DispatchedTask.run
  [26] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [27] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [28] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [29] kotlinx.coroutines.BuildersKt.runBlocking
  [30] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [31] kotlinx.coroutines.BuildersKt.runBlocking$default
  [32] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [33] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [34] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [35] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [36] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [37] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [38] java.lang.reflect.Method.invoke
  [39] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [40] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [41] java.util.concurrent.FutureTask.run
  [42] java.util.concurrent.Executors$RunnableAdapter.call
  [43] java.util.concurrent.FutureTask.run
  [44] java.util.concurrent.ThreadPoolExecutor.runWorker
  [45] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [46] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] java.util.concurrent.Executors$RunnableAdapter.call
  [ 3] java.util.concurrent.FutureTask.run
  [ 4] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 5] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 6] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 7] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] __os_ch_md_redzone_cookie
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.park
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 5] java.util.concurrent.ForkJoinPool.managedBlock
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 9] java.util.concurrent.ThreadPoolExecutor.getTask
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 2] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 6] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [10] kotlinx.coroutines.BuildersKt.runBlocking$default
  [11] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] err_codes_mach_rcv
  [ 1] Parker::unpark()
  [ 2] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 3] jdk.internal.misc.Unsafe.unpark
  [ 4] java.util.concurrent.locks.LockSupport.unpark
  [ 5] kotlinx.coroutines.EventLoopImplPlatform.unpark
  [ 6] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 7] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [11] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [12] io.ktor.utils.io.ByteBufferChannel.flush
  [13] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 3] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 8] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] unsafe_arraycopy
  [ 1] io.ktor.utils.io.internal.RingBufferCapacity.tryReadAtMost
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ull>::oop_access_barrier(void*)
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.parkNanos
  [ 3] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 8] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] __os_ch_md_redzone_cookie
  [ 1] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] kotlinx.coroutines.EventLoopImplPlatform.unpark
  [ 5] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 6] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [10] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [11] io.ktor.utils.io.ByteBufferChannel.flush
  [12] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] java.nio.ByteBuffer.position
  [ 1] java.nio.MappedByteBuffer.position
  [ 2] java.nio.MappedByteBuffer.position
  [ 3] java.nio.ByteBuffer.put
  [ 4] java.nio.HeapByteBuffer.put
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [10] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] kotlin.Result.exceptionOrNull-impl
  [ 1] kotlinx.coroutines.CompletionStateKt.toState
  [ 2] kotlinx.coroutines.CompletionStateKt.toState$default
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [10] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [11] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] java.util.concurrent.FutureTask.run
  [ 1] java.util.concurrent.Executors$RunnableAdapter.call
  [ 2] java.util.concurrent.FutureTask.run
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 4] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 5] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 6] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] java.util.concurrent.ThreadPoolExecutor.isShutdown
  [ 1] java.util.concurrent.ScheduledThreadPoolExecutor.canRunInCurrentRunState
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 3] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 4] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 5] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 1] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] java.util.concurrent.Executors$RunnableAdapter.call
  [ 5] java.util.concurrent.FutureTask.run
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 7] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 8] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 9] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 30000000 ns (0.07%), 3 samples
  [ 0] java.nio.Buffer.scope
  [ 1] java.nio.ByteBuffer.putBuffer
  [ 2] java.nio.ByteBuffer.put
  [ 3] java.nio.HeapByteBuffer.put
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [13] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [17] kotlinx.coroutines.BuildersKt.runBlocking$default
  [18] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] err_codes_mach_rcv
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.util.concurrent.locks.ReentrantLock$Sync.lock
  [ 1] java.util.concurrent.locks.ReentrantLock.lock
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 4] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [ 8] io.ktor.benchmarks.SimpleDispatcher.dispatch
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [11] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [12] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [15] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [16] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [17] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [18] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [19] kotlinx.coroutines.DispatchedTask.run
  [20] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [21] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [23] kotlinx.coroutines.BuildersKt.runBlocking
  [24] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [25] kotlinx.coroutines.BuildersKt.runBlocking$default
  [26] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [27] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [28] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [29] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [30] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [31] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [32] java.lang.reflect.Method.invoke
  [33] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [34] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.Executors$RunnableAdapter.call
  [37] java.util.concurrent.FutureTask.run
  [38] java.util.concurrent.ThreadPoolExecutor.runWorker
  [39] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [40] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.lang.Thread.interrupted
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 4] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 5] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 6] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 7] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.nio.Buffer.<init>
  [ 1] java.nio.ByteBuffer.<init>
  [ 2] java.nio.ByteBuffer.<init>
  [ 3] java.nio.MappedByteBuffer.<init>
  [ 4] java.nio.DirectByteBuffer.<init>
  [ 5] java.nio.DirectByteBuffer.duplicate
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] java.util.concurrent.Executors$RunnableAdapter.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] JavaFrameAnchor::make_walkable(JavaThread*)
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.park
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 5] java.util.concurrent.ForkJoinPool.managedBlock
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 9] java.util.concurrent.ThreadPoolExecutor.getTask
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 4] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInSimpleDispatcher$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [14] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.util.concurrent.locks.ReentrantLock$Sync.tryRelease
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 2] java.util.concurrent.locks.ReentrantLock.unlock
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 4] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [ 9] io.ktor.benchmarks.SimpleDispatcher.dispatch
  [10] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [11] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [12] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [13] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [14] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [15] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [16] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [17] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [18] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [19] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [20] kotlinx.coroutines.DispatchedTask.run
  [21] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [22] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [23] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [24] kotlinx.coroutines.BuildersKt.runBlocking
  [25] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [26] kotlinx.coroutines.BuildersKt.runBlocking$default
  [27] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [28] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [29] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [30] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [31] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [32] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [33] java.lang.reflect.Method.invoke
  [34] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [35] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [36] java.util.concurrent.FutureTask.run
  [37] java.util.concurrent.Executors$RunnableAdapter.call
  [38] java.util.concurrent.FutureTask.run
  [39] java.util.concurrent.ThreadPoolExecutor.runWorker
  [40] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [41] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] java.util.concurrent.Executors$RunnableAdapter.call
  [ 4] java.util.concurrent.FutureTask.run
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 6] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 7] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 8] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] sun.nio.ch.FileDispatcherImpl.read0
  [ 1] sun.nio.ch.FileDispatcherImpl.read
  [ 2] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.FileChannelImpl.read
  [ 5] io.ktor.util.BufferViewJvmKt.read
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] java.util.concurrent.Executors$RunnableAdapter.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [12] java.util.concurrent.ThreadPoolExecutor.runWorker
  [13] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [14] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 3] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 8] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 1] io.ktor.utils.io.internal.RingBufferCapacity.completeRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] SystemDictionaryShared::validate_before_archiving(InstanceKlass*) (.cold.1)
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.park
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 5] java.util.concurrent.ForkJoinPool.managedBlock
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 9] java.util.concurrent.ThreadPoolExecutor.getTask
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] itable stub
  [ 1] kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 1] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 2] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 3] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 1] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 3] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 4] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 5] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 6] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] java.util.concurrent.Executors$RunnableAdapter.call
  [ 4] java.util.concurrent.FutureTask.run
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 6] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 7] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 8] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState
  [ 1] java.util.concurrent.locks.ReentrantLock$NonfairSync.tryAcquire
  [ 2] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 4] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 6] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 7] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 8] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 9] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] kotlinx.coroutines.JobSupport.getState$kotlinx_coroutines_core
  [ 1] kotlinx.coroutines.JobSupport.isCompleted
  [ 2] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 3] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 4] kotlinx.coroutines.BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 7] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [12] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.nio.Buffer.position
  [ 1] java.nio.ByteBuffer.position
  [ 2] java.nio.MappedByteBuffer.position
  [ 3] java.nio.MappedByteBuffer.position
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [13] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [17] kotlinx.coroutines.BuildersKt.runBlocking$default
  [18] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] JavaFrameAnchor::make_walkable(JavaThread*)
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] jdk.internal.misc.Unsafe.getAndBitwiseAndInt
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus
  [ 2] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 4] java.util.concurrent.locks.ReentrantLock.unlock
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [10] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [11] io.ktor.benchmarks.SimpleDispatcher.dispatch
  [12] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [13] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [14] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [15] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [16] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [17] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [18] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [19] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [20] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [21] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [22] kotlinx.coroutines.DispatchedTask.run
  [23] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [24] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [25] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [26] kotlinx.coroutines.BuildersKt.runBlocking
  [27] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [28] kotlinx.coroutines.BuildersKt.runBlocking$default
  [29] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [30] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [31] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [32] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [33] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [34] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [35] java.lang.reflect.Method.invoke
  [36] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [37] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [38] java.util.concurrent.FutureTask.run
  [39] java.util.concurrent.Executors$RunnableAdapter.call
  [40] java.util.concurrent.FutureTask.run
  [41] java.util.concurrent.ThreadPoolExecutor.runWorker
  [42] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [43] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.internal.RingBufferCapacity.tryWriteAtLeast
  [ 2] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] java.util.concurrent.Executors$RunnableAdapter.call
  [ 7] java.util.concurrent.FutureTask.run
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 9] java.util.concurrent.ThreadPoolExecutor.runWorker
  [10] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [11] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 4] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [ 8] io.ktor.benchmarks.SimpleDispatcher.dispatch
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [11] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [12] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [15] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [16] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [17] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [18] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [19] kotlinx.coroutines.DispatchedTask.run
  [20] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [21] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [23] kotlinx.coroutines.BuildersKt.runBlocking
  [24] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [25] kotlinx.coroutines.BuildersKt.runBlocking$default
  [26] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [27] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [28] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [29] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [30] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [31] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [32] java.lang.reflect.Method.invoke
  [33] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [34] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.Executors$RunnableAdapter.call
  [37] java.util.concurrent.FutureTask.run
  [38] java.util.concurrent.ThreadPoolExecutor.runWorker
  [39] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [40] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] sun.nio.ch.NativeThread.current
  [ 1] sun.nio.ch.NativeThreadSet.add
  [ 2] sun.nio.ch.FileChannelImpl.read
  [ 3] io.ktor.util.BufferViewJvmKt.read
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] java.util.concurrent.Executors$RunnableAdapter.call
  [ 8] java.util.concurrent.FutureTask.run
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.util.concurrent.locks.LockSupport.unpark
  [ 1] kotlinx.coroutines.EventLoopImplPlatform.unpark
  [ 2] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 3] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [11] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [12] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] kotlin.coroutines.CombinedContext.get
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.releaseIntercepted
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] SafeThreadsListPtr::release_stable_list()
  [ 1] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 6] java.util.concurrent.locks.ReentrantLock.unlock
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [10] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [11] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [12] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [13] io.ktor.benchmarks.SimpleDispatcher.dispatch
  [14] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [15] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [16] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [17] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [18] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [19] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [20] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [21] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [22] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [23] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [24] kotlinx.coroutines.DispatchedTask.run
  [25] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [26] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [27] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [28] kotlinx.coroutines.BuildersKt.runBlocking
  [29] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [30] kotlinx.coroutines.BuildersKt.runBlocking$default
  [31] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [32] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [33] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [34] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [35] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [36] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [37] java.lang.reflect.Method.invoke
  [38] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [39] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [40] java.util.concurrent.FutureTask.run
  [41] java.util.concurrent.Executors$RunnableAdapter.call
  [42] java.util.concurrent.FutureTask.run
  [43] java.util.concurrent.ThreadPoolExecutor.runWorker
  [44] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [45] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] Mutex::lock_without_safepoint_check()
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.park
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 6] java.util.concurrent.ForkJoinPool.managedBlock
  [ 7] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [10] java.util.concurrent.ThreadPoolExecutor.getTask
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 1] jdk.internal.misc.Unsafe.unpark
  [ 2] java.util.concurrent.locks.LockSupport.unpark
  [ 3] kotlinx.coroutines.EventLoopImplPlatform.unpark
  [ 4] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 5] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 6] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 7] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 8] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 9] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [10] io.ktor.utils.io.ByteBufferChannel.flush
  [11] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<544868ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 544868ull>::oop_access_barrier(void*)
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 2] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java_lang_Thread::set_thread_status(oopDesc*, JavaThreadStatus)
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.park
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 4] java.util.concurrent.ForkJoinPool.managedBlock
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 8] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 9] java.util.concurrent.ThreadPoolExecutor.runWorker
  [10] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [11] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 3] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 8] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool)
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.parkNanos
  [ 3] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 8] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] kotlinx.coroutines.scheduling.Task.<init>
  [ 1] kotlinx.coroutines.scheduling.Task.<init>
  [ 2] kotlinx.coroutines.DispatchedTask.<init>
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 4] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 5] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 6] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 7] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [12] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInSimpleDispatcher$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 4] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 5] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 6] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 7] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] err_codes_iokit_usb
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.park
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 5] java.util.concurrent.ForkJoinPool.managedBlock
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 9] java.util.concurrent.ThreadPoolExecutor.getTask
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

--- 20000000 ns (0.04%), 2 samples
  [ 0] java.nio.Buffer.scope
  [ 1] java.nio.Buffer.checkScope
  [ 2] java.nio.HeapByteBuffer.put
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 1] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 2] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 3] kotlinx.coroutines.BuildersKt.runBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 6] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] ThreadsListHandle::ThreadsListHandle(Thread*)
  [ 1] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] kotlinx.coroutines.EventLoopImplPlatform.unpark
  [ 5] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 6] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [10] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [11] io.ktor.utils.io.ByteBufferChannel.flush
  [12] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] SafeThreadsListPtr::release_stable_list()
  [ 1] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] kotlinx.coroutines.EventLoopImplPlatform.unpark
  [ 5] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 6] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [10] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [11] io.ktor.utils.io.ByteBufferChannel.flush
  [12] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getClosed
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 3] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInSimpleDispatcher$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 7] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [11] kotlinx.coroutines.BuildersKt.runBlocking$default
  [12] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [14] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] JavaThread::threadObj() const
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.park
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 4] java.util.concurrent.ForkJoinPool.managedBlock
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 8] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 9] java.util.concurrent.ThreadPoolExecutor.runWorker
  [10] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [11] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] jdk.internal.misc.Unsafe.park
  [ 1] java.lang.Thread.interrupted
  [ 2] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 3] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 4] kotlinx.coroutines.BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 7] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [12] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] JavaThread::threadObj() const
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.park
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
  [ 5] java.util.concurrent.ForkJoinPool.managedBlock
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 9] java.util.concurrent.ThreadPoolExecutor.getTask
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] IntervalWalker::walk_to(int)
  [ 1] LinearScan::allocate_registers()
  [ 2] LinearScan::do_linear_scan()
  [ 3] Compilation::emit_lir()
  [ 4] Compilation::compile_java_method()
  [ 5] Compilation::compile_method()
  [ 6] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 7] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] Thread::call_run()
  [12] thread_native_entry(Thread*)
  [13] __os_ch_md_redzone_cookie
  [14] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] java_lang_Thread::thread(oopDesc*)
  [ 1] ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**)
  [ 2] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 3] jdk.internal.misc.Unsafe.unpark
  [ 4] java.util.concurrent.locks.LockSupport.unpark
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 7] java.util.concurrent.locks.ReentrantLock.unlock
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [10] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [11] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [12] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [13] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [14] io.ktor.benchmarks.SimpleDispatcher.dispatch
  [15] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [16] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [17] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [18] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [19] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [20] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [21] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [22] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [23] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [24] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [25] kotlinx.coroutines.DispatchedTask.run
  [26] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [27] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [28] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [29] kotlinx.coroutines.BuildersKt.runBlocking
  [30] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [31] kotlinx.coroutines.BuildersKt.runBlocking$default
  [32] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [33] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [34] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [35] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [36] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [37] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [38] java.lang.reflect.Method.invoke
  [39] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [40] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [41] java.util.concurrent.FutureTask.run
  [42] java.util.concurrent.Executors$RunnableAdapter.call
  [43] java.util.concurrent.FutureTask.run
  [44] java.util.concurrent.ThreadPoolExecutor.runWorker
  [45] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [46] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 2] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 6] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [10] kotlinx.coroutines.BuildersKt.runBlocking$default
  [11] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] kotlin.coroutines.jvm.internal.BaseContinuationImpl.<init>
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.<init>
  [ 2] kotlin.coroutines.jvm.internal.ContinuationImpl.<init>
  [ 3] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.<init>
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [13] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [17] kotlinx.coroutines.BuildersKt.runBlocking$default
  [18] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] [unknown]
  [ 1] jdk.internal.misc.Unsafe.unpark
  [ 2] java.util.concurrent.locks.LockSupport.unpark
  [ 3] kotlinx.coroutines.EventLoopImplPlatform.unpark
  [ 4] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 5] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 6] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 7] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 8] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 9] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [10] io.ktor.utils.io.ByteBufferChannel.flush
  [11] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.writeSuspendPredicate
  [ 1] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 2] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] java.util.concurrent.Executors$RunnableAdapter.call
  [ 7] java.util.concurrent.FutureTask.run
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 9] java.util.concurrent.ThreadPoolExecutor.runWorker
  [10] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [11] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] JavaThread::is_Java_thread() const
  [ 1] jdk.internal.misc.Unsafe.unpark
  [ 2] java.util.concurrent.locks.LockSupport.unpark
  [ 3] kotlinx.coroutines.EventLoopImplPlatform.unpark
  [ 4] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 5] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 6] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 7] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 8] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 9] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [10] io.ktor.utils.io.ByteBufferChannel.flush
  [11] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 2] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 7] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [11] kotlinx.coroutines.BuildersKt.runBlocking$default
  [12] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [14] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] jdk.internal.misc.Unsafe.unpark
  [ 1] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [ 4] io.ktor.benchmarks.SimpleDispatcher.dispatch
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [12] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [13] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [17] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [21] kotlinx.coroutines.BuildersKt.runBlocking$default
  [22] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [24] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getClosed
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 3] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInSimpleDispatcher$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 7] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [11] kotlinx.coroutines.BuildersKt.runBlocking$default
  [12] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [14] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] mach_task_special_port_for_id.tsp_ids
  [ 1] __os_ch_md_redzone_cookie
  [ 2] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 3] jdk.internal.misc.Unsafe.unpark
  [ 4] java.util.concurrent.locks.LockSupport.unpark
  [ 5] kotlinx.coroutines.EventLoopImplPlatform.unpark
  [ 6] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 7] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [11] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [12] io.ktor.utils.io.ByteBufferChannel.flush
  [13] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 3] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInSimpleDispatcher$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 7] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [11] kotlinx.coroutines.BuildersKt.runBlocking$default
  [12] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [14] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] JavaThread::is_Java_thread() const
  [ 1] jdk.internal.misc.Unsafe.unpark
  [ 2] java.util.concurrent.locks.LockSupport.unpark
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 5] java.util.concurrent.locks.ReentrantLock.unlock
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute
  [10] java.util.concurrent.ScheduledThreadPoolExecutor.schedule
  [11] java.util.concurrent.ScheduledThreadPoolExecutor.execute
  [12] io.ktor.benchmarks.SimpleDispatcher.dispatch
  [13] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [14] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [15] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [16] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [17] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [18] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [19] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [20] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [21] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [22] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [23] kotlinx.coroutines.DispatchedTask.run
  [24] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [25] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [26] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [27] kotlinx.coroutines.BuildersKt.runBlocking
  [28] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [29] kotlinx.coroutines.BuildersKt.runBlocking$default
  [30] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [31] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [32] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [33] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [34] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [35] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [36] java.lang.reflect.Method.invoke
  [37] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [38] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [39] java.util.concurrent.FutureTask.run
  [40] java.util.concurrent.Executors$RunnableAdapter.call
  [41] java.util.concurrent.FutureTask.run
  [42] java.util.concurrent.ThreadPoolExecutor.runWorker
  [43] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [44] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.nio.ByteBuffer.limit
  [ 1] java.nio.MappedByteBuffer.limit
  [ 2] java.nio.MappedByteBuffer.limit
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 3] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInSimpleDispatcher$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 7] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [11] kotlinx.coroutines.BuildersKt.runBlocking$default
  [12] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [14] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInSimpleDispatcher$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] mach_absolute_time
  [ 1] os::javaTimeNanos()
  [ 2] java.util.concurrent.locks.AbstractQueuedSynchronizer.setState
  [ 3] java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock
  [ 4] java.util.concurrent.locks.ReentrantLock$Sync.lockInterruptibly
  [ 5] java.util.concurrent.locks.ReentrantLock.lockInterruptibly
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 8] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 9] java.util.concurrent.ThreadPoolExecutor.runWorker
  [10] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [11] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] LinearScan::build_intervals()
  [ 1] LinearScan::do_linear_scan()
  [ 2] Compilation::emit_lir()
  [ 3] Compilation::compile_java_method()
  [ 4] Compilation::compile_method()
  [ 5] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 6] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] __os_ch_md_redzone_cookie
  [13] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] Parker::unpark()
  [ 1] Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] kotlinx.coroutines.EventLoopImplPlatform.unpark
  [ 5] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 6] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [10] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [11] io.ktor.utils.io.ByteBufferChannel.flush
  [12] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] Java_sun_nio_ch_FileDispatcherImpl_read0
  [ 1] sun.nio.ch.FileDispatcherImpl.read0
  [ 2] sun.nio.ch.FileDispatcherImpl.read
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] java.util.concurrent.Executors$RunnableAdapter.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] [unknown]
  [ 1] [unknown]
  [ 2] ChunkPool::clean()
  [ 3] PeriodicTask::real_time_tick(int)
  [ 4] WatcherThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] __os_ch_md_redzone_cookie
  [ 8] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] JavaThread::threadObj() const
  [ 1] JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$getState
  [ 2] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInSimpleDispatcher$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 3] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInSimpleDispatcher$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 7] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [11] kotlinx.coroutines.BuildersKt.runBlocking$default
  [12] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [14] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] kotlin.coroutines.CombinedContext.get
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 2] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInSimpleDispatcher$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.nio.Buffer.limit
  [ 1] java.nio.ByteBuffer.limit
  [ 2] java.nio.MappedByteBuffer.limit
  [ 3] java.nio.MappedByteBuffer.limit
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [13] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [17] kotlinx.coroutines.BuildersKt.runBlocking$default
  [18] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] kotlin.coroutines.EmptyCoroutineContext.get
  [ 1] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 2] kotlinx.coroutines.BuildersKt.runBlocking
  [ 3] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 4] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 5] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] kotlin.jvm.internal.Intrinsics.checkNotNullParameter
  [ 1] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInSimpleDispatcher$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.nio.Buffer.position
  [ 1] java.nio.ByteBuffer.position
  [ 2] java.nio.MappedByteBuffer.position
  [ 3] java.nio.MappedByteBuffer.position
  [ 4] java.nio.Buffer.<init>
  [ 5] java.nio.ByteBuffer.<init>
  [ 6] java.nio.ByteBuffer.<init>
  [ 7] java.nio.MappedByteBuffer.<init>
  [ 8] java.nio.DirectByteBuffer.<init>
  [ 9] java.nio.DirectByteBuffer.duplicate
  [10] io.ktor.util.BufferViewJvmKt.read
  [11] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] kotlinx.coroutines.JobSupport.isCompleted
  [ 1] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 2] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 3] kotlinx.coroutines.BuildersKt.runBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 6] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.core.IoBuffer.resetFromContentToWrite
  [ 1] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] java.util.concurrent.Executors$RunnableAdapter.call
  [ 6] java.util.concurrent.FutureTask.run
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 8] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 9] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [10] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] PhaseChaitin::Split(unsigned int, ResourceArea*)
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, DirectiveSet*)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] __os_ch_md_redzone_cookie
  [11] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ull>::oop_access_barrier(void*)
  [ 1] JavaThread::is_interrupted(bool)
  [ 2] Parker::park(bool, long)
  [ 3] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 4] jdk.internal.misc.Unsafe.park
  [ 5] java.util.concurrent.locks.LockSupport.parkNanos
  [ 6] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [10] kotlinx.coroutines.BuildersKt.runBlocking$default
  [11] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] Compile::remove_speculative_types(PhaseIterGVN&)
  [ 1] Compile::Optimize()
  [ 2] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, DirectiveSet*)
  [ 3] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 4] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 5] CompileBroker::compiler_thread_loop()
  [ 6] JavaThread::thread_main_inner()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] __os_ch_md_redzone_cookie
  [10] internal_catch_exc_subsystem

--- 10000000 ns (0.02%), 1 sample
  [ 0] java_lang_Thread::get_thread_status(oopDesc*)
  [ 1] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInSimpleDispatcher$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.nio.ByteBuffer.put
  [ 1] java.nio.HeapByteBuffer.put
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.nio.Buffer.position
  [ 1] java.nio.ByteBuffer.position
  [ 2] java.nio.MappedByteBuffer.position
  [ 3] java.nio.MappedByteBuffer.position
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [13] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [17] kotlinx.coroutines.BuildersKt.runBlocking$default
  [18] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInSimpleDispatcher$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 10000000 ns (0.02%), 1 sample
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.accessCheck
  [ 1] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet
  [ 2] io.ktor.utils.io.internal.RingBufferCapacity.tryReadAtMost
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInSimpleDispatcher
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInSimpleDispatcher_jmhTest.testKtorFileReadInSimpleDispatcher_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

          ns  percent  samples  top
  ----------  -------  -------  ---
 19980000000   44.89%     1998  __psynch_cvwait
  6150000000   13.82%      615  __psynch_cvsignal
  3630000000    8.16%      363  jdk.internal.misc.Unsafe.park
  2060000000    4.63%      206  __gettimeofday
  2000000000    4.49%      200  read
   990000000    2.22%       99  err_codes_mach_rcv
   750000000    1.69%       75  __os_ch_md_redzone_cookie
   560000000    1.26%       56  jlong_disjoint_arraycopy
   510000000    1.15%       51  Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
   460000000    1.03%       46  Parker::park(bool, long)
   380000000    0.85%       38  kotlin.coroutines.jvm.internal.Boxing.boxBoolean
   360000000    0.81%       36  err_codes_iokit_usb
   290000000    0.65%       29  os::javaTimeNanos()
   240000000    0.54%       24  mach_absolute_time
   230000000    0.52%       23  io.ktor.utils.io.ByteBufferChannel.setupStateForRead
   230000000    0.52%       23  internal_catch_exc_subsystem
   200000000    0.45%       20  [unknown]
   170000000    0.38%       17  java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
   160000000    0.36%       16  Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*)
   150000000    0.34%       15  kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
   140000000    0.31%       14  JavaThread::threadObj() const
   140000000    0.31%       14  java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState
   130000000    0.29%       13  java.nio.Buffer.position
   130000000    0.29%       13  jdk.internal.misc.Unsafe.getAndBitwiseAndInt
   130000000    0.29%       13  io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
   130000000    0.29%       13  kotlin.coroutines.jvm.internal.ContinuationImpl.releaseIntercepted
   120000000    0.27%       12  java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet
   110000000    0.25%       11  io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
   110000000    0.25%       11  java.util.concurrent.ThreadPoolExecutor.getTask
   110000000    0.25%       11  kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
   100000000    0.22%       10  java_lang_Thread::set_thread_status(oopDesc*, JavaThreadStatus)
    90000000    0.20%        9  ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**)
    90000000    0.20%        9  __commpage_gettimeofday_internal
    90000000    0.20%        9  ThreadsListHandle::ThreadsListHandle(Thread*)
    90000000    0.20%        9  kotlin.coroutines.jvm.internal.ContinuationImpl.getContext
    90000000    0.20%        9  kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
    90000000    0.20%        9  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ull>::oop_access_barrier(void*)
    90000000    0.20%        9  __psynch_mutexwait
    90000000    0.20%        9  io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInSimpleDispatcher$1.invokeSuspend
    90000000    0.20%        9  java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.enableWait
    80000000    0.18%        8  java.lang.Thread.interrupted
    70000000    0.16%        7  JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool)
    70000000    0.16%        7  kotlinx.coroutines.EventLoop.processUnconfinedEvent
    70000000    0.16%        7  io.ktor.utils.io.ByteBufferChannel.resumeReadOp
    60000000    0.13%        6  vtable stub
    60000000    0.13%        6  java.util.concurrent.locks.AbstractQueuedSynchronizer.release
    60000000    0.13%        6  Mutex::lock_without_safepoint_check()
    60000000    0.13%        6  kotlinx.coroutines.AbstractTimeSourceKt.getTimeSource
    60000000    0.13%        6  gCRAnnotations
    50000000    0.11%        5  io.ktor.utils.io.ByteBufferChannel.getClosed
    50000000    0.11%        5  to_abstime(timespec*, long, bool, bool)
    50000000    0.11%        5  mach_host_special_port_for_id.hsp_ids
    50000000    0.11%        5  mach_task_special_port_for_id.tsp_ids
    50000000    0.11%        5  io.ktor.utils.io.internal.RingBufferCapacity.completeRead
    50000000    0.11%        5  java.util.concurrent.locks.AbstractQueuedSynchronizer.enqueue
    50000000    0.11%        5  SystemDictionaryShared::validate_before_archiving(InstanceKlass*) (.cold.1)
    50000000    0.11%        5  io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
    50000000    0.11%        5  JavaFrameAnchor::make_walkable(JavaThread*)
    50000000    0.11%        5  java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
    50000000    0.11%        5  java.nio.Buffer.scope
    50000000    0.11%        5  io.ktor.utils.io.ByteBufferChannel.suspensionForSize
    40000000    0.09%        4  oopDesc::address_field(int) const
    40000000    0.09%        4  java.util.concurrent.locks.AbstractQueuedSynchronizer.casTail
    40000000    0.09%        4  io.ktor.utils.io.core.Buffer.resetForWrite
    40000000    0.09%        4  SafeThreadsListPtr::release_stable_list()
    40000000    0.09%        4  __commpage_gettimeofday
    40000000    0.09%        4  java.nio.ByteBuffer.put
    40000000    0.09%        4  java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread
    40000000    0.09%        4  jdk.internal.misc.Unsafe.unpark
    30000000    0.07%        3  java.lang.Integer.intValue
    30000000    0.07%        3  itable stub
    30000000    0.07%        3  io.ktor.utils.io.internal.WriteSessionImpl.request
    30000000    0.07%        3  java.util.concurrent.locks.ReentrantLock$Sync.tryRelease
    30000000    0.07%        3  kotlin.Result.exceptionOrNull-impl
    30000000    0.07%        3  kotlinx.coroutines.internal.ThreadContextKt.threadContextElements
    30000000    0.07%        3  io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
    30000000    0.07%        3  io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
    30000000    0.07%        3  java.nio.ByteBuffer.position
    30000000    0.07%        3  kotlin.coroutines.CombinedContext.get
    30000000    0.07%        3  java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.doSignal
    30000000    0.07%        3  java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
    30000000    0.07%        3  io.ktor.utils.io.ByteBufferChannel.prepareBuffer
    30000000    0.07%        3  java.util.concurrent.FutureTask.run
    30000000    0.07%        3  stat$INODE64
    30000000    0.07%        3  io.ktor.utils.io.ByteBufferChannel.getState
    30000000    0.07%        3  unsafe_arraycopy
    30000000    0.07%        3  java.util.concurrent.ThreadPoolExecutor.isShutdown
    20000000    0.04%        2  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<544868ull, G1BarrierSet>, (AccessInternal::BarrierType)2, 544868ull>::oop_access_barrier(void*)
    20000000    0.04%        2  sun.nio.ch.NativeThread.current
    20000000    0.04%        2  sun.nio.ch.FileDispatcherImpl.read0
    20000000    0.04%        2  java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
    20000000    0.04%        2  semaphore_wait_trap
    20000000    0.04%        2  JavaThread::is_Java_thread() const
    20000000    0.04%        2  kotlinx.coroutines.scheduling.Task.<init>
    20000000    0.04%        2  kotlinx.coroutines.JobSupport.getState$kotlinx_coroutines_core
    20000000    0.04%        2  kotlinx.coroutines.EventLoopImplBase.processNextEvent
    20000000    0.04%        2  io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
    20000000    0.04%        2  io.ktor.utils.io.ByteBufferChannel.readAvailable
    20000000    0.04%        2  io.ktor.utils.io.ByteBufferChannel.readSuspend
    20000000    0.04%        2  java.nio.Buffer.limit
    20000000    0.04%        2  java.nio.Buffer.<init>
    20000000    0.04%        2  java.util.concurrent.locks.ReentrantLock$Sync.lock
    20000000    0.04%        2  java.util.concurrent.locks.LockSupport.unpark
    10000000    0.02%        1  io.ktor.utils.io.core.IoBuffer.resetFromContentToWrite
    10000000    0.02%        1  io.ktor.utils.io.internal.ReadWriteBufferState$Writing.startReading$ktor_io
    10000000    0.02%        1  io.ktor.utils.io.ByteBufferChannel.writeSuspendPredicate
    10000000    0.02%        1  java_lang_Thread::get_thread_status(oopDesc*)
    10000000    0.02%        1  java_lang_Thread::interrupted(oopDesc*)
    10000000    0.02%        1  java.util.concurrent.ThreadPoolExecutor.workerCountOf
    10000000    0.02%        1  java_lang_Thread::thread(oopDesc*)
    10000000    0.02%        1  java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&, Thread*)
    10000000    0.02%        1  io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
    10000000    0.02%        1  java.nio.ByteBuffer.order
    10000000    0.02%        1  io.ktor.utils.io.ByteBufferChannel.isClosedForRead
    10000000    0.02%        1  io.ktor.utils.io.ByteBufferChannel.bytesRead
    10000000    0.02%        1  java.nio.DirectByteBuffer.duplicate
    10000000    0.02%        1  fdval
    10000000    0.02%        1  kotlin.coroutines.EmptyCoroutineContext.get
    10000000    0.02%        1  kotlin.coroutines.jvm.internal.BaseContinuationImpl.<init>
    10000000    0.02%        1  _platform_memmove$VARIANT$Haswell
    10000000    0.02%        1  VtableStubs::entry_point(unsigned char*)
    10000000    0.02%        1  RegionNode::Opcode() const
    10000000    0.02%        1  PhaseIFG::remove_node(unsigned int)
    10000000    0.02%        1  PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&, IndexSet*, unsigned int&)
    10000000    0.02%        1  kotlin.jvm.internal.Intrinsics.checkNotNullParameter
    10000000    0.02%        1  PhaseChaitin::Split(unsigned int, ResourceArea*)
    10000000    0.02%        1  Parker::unpark()
    10000000    0.02%        1  java.nio.MappedByteBuffer.limit
    10000000    0.02%        1  java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block
    10000000    0.02%        1  kotlinx.coroutines.JobSupport.isCompleted
    10000000    0.02%        1  kotlinx.coroutines.internal.DispatchedContinuation.takeState$kotlinx_coroutines_core
    10000000    0.02%        1  NullCheckEliminator::iterate_one(BlockBegin*)
    10000000    0.02%        1  Mutex::unlock()
    10000000    0.02%        1  java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.<init>
    10000000    0.02%        1  LinearScan::build_intervals()
    10000000    0.02%        1  Java_sun_nio_ch_FileDispatcherImpl_read0
    10000000    0.02%        1  JavaThread::is_interrupted(bool)
    10000000    0.02%        1  java.nio.MappedByteBuffer.position
    10000000    0.02%        1  org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
    10000000    0.02%        1  IntervalWalker::walk_to(int)
    10000000    0.02%        1  pthread_dependency_wait_np.cold.3
    10000000    0.02%        1  Interpreter
    10000000    0.02%        1  semaphore_signal_trap
    10000000    0.02%        1  java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread
    10000000    0.02%        1  ConstantPool::impl_klass_ref_index_at(int, bool)
    10000000    0.02%        1  sun.nio.ch.FileChannelImpl.<init>
    10000000    0.02%        1  java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
    10000000    0.02%        1  java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.accessCheck
    10000000    0.02%        1  Compile::remove_speculative_types(PhaseIterGVN&)
    10000000    0.02%        1  CodeBuffer::copy_code_to(CodeBlob*)
    10000000    0.02%        1  java.nio.ByteBuffer.limit

