--- Execution profile ---
Total samples       : 2397
unknown_Java        : 1 (0.04%)
not_walkable_Java   : 1 (0.04%)

--- 21901177315 ns (28.51%), 373 samples
  [ 0] write
  [ 1] sun.nio.ch.FileDispatcherImpl.write0
  [ 2] sun.nio.ch.SocketDispatcher.write
  [ 3] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 4] sun.nio.ch.IOUtil.write
  [ 5] sun.nio.ch.IOUtil.write
  [ 6] sun.nio.ch.SocketChannelImpl.write
  [ 7] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [11] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [12] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [13] io.ktor.utils.io.ByteBufferChannel.flush
  [14] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [15] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [16] io.ktor.utils.io.ByteBufferChannel.writeFully
  [17] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [18] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [19] kotlinx.coroutines.DispatchedTask.run
  [20] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [21] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [23] kotlinx.coroutines.BuildersKt.runBlocking
  [24] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [25] kotlinx.coroutines.BuildersKt.runBlocking$default
  [26] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [27] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [28] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [29] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [30] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [31] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [32] java.lang.reflect.Method.invoke
  [33] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [34] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.Executors$RunnableAdapter.call
  [37] java.util.concurrent.FutureTask.run
  [38] java.util.concurrent.ThreadPoolExecutor.runWorker
  [39] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [40] java.lang.Thread.run

--- 12645637210 ns (16.46%), 709 samples
  [ 0] __recv
  [ 1] java.net.SocketInputStream.socketRead0
  [ 2] java.net.SocketInputStream.socketRead
  [ 3] java.net.SocketInputStream.read
  [ 4] java.net.SocketInputStream.read
  [ 5] java.net.SocketInputStream.read
  [ 6] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 7] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 8] java.util.concurrent.Executors$RunnableAdapter.call
  [ 9] java.util.concurrent.FutureTask.run
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

--- 8240471515 ns (10.73%), 126 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] java.nio.Buffer.position
  [ 2] java.nio.ByteBuffer.position
  [ 3] java.nio.MappedByteBuffer.position
  [ 4] java.nio.DirectByteBuffer.put
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 6] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 8] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [18] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 5652137866 ns (7.36%), 337 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libc-2.33.so
  [ 1] Java_java_net_SocketInputStream_socketRead0
  [ 2] java.net.SocketInputStream.socketRead0
  [ 3] java.net.SocketInputStream.socketRead
  [ 4] java.net.SocketInputStream.read
  [ 5] java.net.SocketInputStream.read
  [ 6] java.net.SocketInputStream.read
  [ 7] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 8] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 9] java.util.concurrent.Executors$RunnableAdapter.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 1813677045 ns (2.36%), 110 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] Java_java_net_SocketInputStream_socketRead0
  [ 3] java.net.SocketInputStream.socketRead0
  [ 4] java.net.SocketInputStream.socketRead
  [ 5] java.net.SocketInputStream.read
  [ 6] java.net.SocketInputStream.read
  [ 7] java.net.SocketInputStream.read
  [ 8] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 9] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [10] java.util.concurrent.Executors$RunnableAdapter.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.ThreadPoolExecutor.runWorker
  [13] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [14] java.lang.Thread.run

--- 1670132335 ns (2.17%), 29 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libc-2.33.so
  [ 1] sun.nio.ch.FileDispatcherImpl.write0
  [ 2] sun.nio.ch.SocketDispatcher.write
  [ 3] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 4] sun.nio.ch.IOUtil.write
  [ 5] sun.nio.ch.IOUtil.write
  [ 6] sun.nio.ch.SocketChannelImpl.write
  [ 7] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [11] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [12] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [13] io.ktor.utils.io.ByteBufferChannel.flush
  [14] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [15] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [16] io.ktor.utils.io.ByteBufferChannel.writeFully
  [17] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [18] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [19] kotlinx.coroutines.DispatchedTask.run
  [20] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [21] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [23] kotlinx.coroutines.BuildersKt.runBlocking
  [24] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [25] kotlinx.coroutines.BuildersKt.runBlocking$default
  [26] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [27] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [28] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [29] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [30] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [31] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [32] java.lang.reflect.Method.invoke
  [33] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [34] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.Executors$RunnableAdapter.call
  [37] java.util.concurrent.FutureTask.run
  [38] java.util.concurrent.ThreadPoolExecutor.runWorker
  [39] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [40] java.lang.Thread.run

--- 1387006740 ns (1.81%), 79 samples
  [ 0] __GI___pthread_mutex_lock
  [ 1] Java_java_net_SocketInputStream_socketRead0
  [ 2] java.net.SocketInputStream.socketRead0
  [ 3] java.net.SocketInputStream.socketRead
  [ 4] java.net.SocketInputStream.read
  [ 5] java.net.SocketInputStream.read
  [ 6] java.net.SocketInputStream.read
  [ 7] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 8] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 9] java.util.concurrent.Executors$RunnableAdapter.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 1360053733 ns (1.77%), 21 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForWrite$ktor_io
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 4] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 1310066523 ns (1.71%), 17 samples
  [ 0] [vdso]
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.flush
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully
  [12] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 1231928729 ns (1.60%), 59 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] Java_java_net_SocketInputStream_socketRead0
  [ 2] java.net.SocketInputStream.socketRead0
  [ 3] java.net.SocketInputStream.socketRead
  [ 4] java.net.SocketInputStream.read
  [ 5] java.net.SocketInputStream.read
  [ 6] java.net.SocketInputStream.read
  [ 7] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 8] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 9] java.util.concurrent.Executors$RunnableAdapter.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 1010030896 ns (1.31%), 15 samples
  [ 0] sun.nio.ch.FileDispatcherImpl.write0
  [ 1] sun.nio.ch.SocketDispatcher.write
  [ 2] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 3] sun.nio.ch.IOUtil.write
  [ 4] sun.nio.ch.IOUtil.write
  [ 5] sun.nio.ch.SocketChannelImpl.write
  [ 6] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [11] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [12] io.ktor.utils.io.ByteBufferChannel.flush
  [13] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [14] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [15] io.ktor.utils.io.ByteBufferChannel.writeFully
  [16] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [17] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [18] kotlinx.coroutines.DispatchedTask.run
  [19] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [20] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt.runBlocking
  [23] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [24] kotlinx.coroutines.BuildersKt.runBlocking$default
  [25] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [26] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [27] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [29] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [30] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [31] java.lang.reflect.Method.invoke
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.Executors$RunnableAdapter.call
  [36] java.util.concurrent.FutureTask.run
  [37] java.util.concurrent.ThreadPoolExecutor.runWorker
  [38] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [39] java.lang.Thread.run

--- 940059886 ns (1.22%), 21 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.internal.RingBufferCapacity.completeWrite
  [ 2] io.ktor.utils.io.ByteBufferChannel.bytesWritten
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 6] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 848393408 ns (1.10%), 37 samples
  [ 0] __GI___pthread_mutex_unlock
  [ 1] Java_java_net_SocketInputStream_socketRead0
  [ 2] java.net.SocketInputStream.socketRead0
  [ 3] java.net.SocketInputStream.socketRead
  [ 4] java.net.SocketInputStream.read
  [ 5] java.net.SocketInputStream.read
  [ 6] java.net.SocketInputStream.read
  [ 7] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 8] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 9] java.util.concurrent.Executors$RunnableAdapter.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 693845960 ns (0.90%), 30 samples
  [ 0] Java_java_net_SocketInputStream_socketRead0
  [ 1] java.net.SocketInputStream.socketRead0
  [ 2] java.net.SocketInputStream.socketRead
  [ 3] java.net.SocketInputStream.read
  [ 4] java.net.SocketInputStream.read
  [ 5] java.net.SocketInputStream.read
  [ 6] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 7] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 8] java.util.concurrent.Executors$RunnableAdapter.call
  [ 9] java.util.concurrent.FutureTask.run
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

--- 561465940 ns (0.73%), 30 samples
  [ 0] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 1] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 2] java.util.concurrent.Executors$RunnableAdapter.call
  [ 3] java.util.concurrent.FutureTask.run
  [ 4] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 5] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 6] java.lang.Thread.run

--- 560014501 ns (0.73%), 4 samples
  [ 0] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.flush
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully
  [10] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [20] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 510045257 ns (0.66%), 12 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$getState
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 5] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 508737387 ns (0.66%), 30 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libc-2.33.so
  [ 1] java.net.SocketInputStream.socketRead0
  [ 2] java.net.SocketInputStream.socketRead
  [ 3] java.net.SocketInputStream.read
  [ 4] java.net.SocketInputStream.read
  [ 5] java.net.SocketInputStream.read
  [ 6] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 7] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 8] java.util.concurrent.Executors$RunnableAdapter.call
  [ 9] java.util.concurrent.FutureTask.run
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

--- 490024888 ns (0.64%), 6 samples
  [ 0] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1$timeout$1.<init>
  [ 1] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.flush
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully
  [11] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 480006297 ns (0.62%), 7 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.carryIndex
  [ 1] io.ktor.utils.io.ByteBufferChannel.request
  [ 2] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.flush
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully
  [12] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 470023594 ns (0.61%), 5 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.addAndGet
  [ 1] io.ktor.utils.io.internal.RingBufferCapacity.flush
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.flush
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 7] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [17] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 370038190 ns (0.48%), 5 samples
  [ 0] Java_sun_nio_ch_FileDispatcherImpl_write0
  [ 1] sun.nio.ch.FileDispatcherImpl.write0
  [ 2] sun.nio.ch.SocketDispatcher.write
  [ 3] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 4] sun.nio.ch.IOUtil.write
  [ 5] sun.nio.ch.IOUtil.write
  [ 6] sun.nio.ch.SocketChannelImpl.write
  [ 7] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [11] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [12] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [13] io.ktor.utils.io.ByteBufferChannel.flush
  [14] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [15] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [16] io.ktor.utils.io.ByteBufferChannel.writeFully
  [17] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [18] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [19] kotlinx.coroutines.DispatchedTask.run
  [20] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [21] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [23] kotlinx.coroutines.BuildersKt.runBlocking
  [24] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [25] kotlinx.coroutines.BuildersKt.runBlocking$default
  [26] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [27] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [28] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [29] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [30] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [31] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [32] java.lang.reflect.Method.invoke
  [33] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [34] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.Executors$RunnableAdapter.call
  [37] java.util.concurrent.FutureTask.run
  [38] java.util.concurrent.ThreadPoolExecutor.runWorker
  [39] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [40] java.lang.Thread.run

--- 370033349 ns (0.48%), 12 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 2] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.flush
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully
  [12] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 360021341 ns (0.47%), 7 samples
  [ 0] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.flush
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully
  [10] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [20] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 350012777 ns (0.46%), 8 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$getState
  [ 2] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 5] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [10] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [11] io.ktor.utils.io.ByteBufferChannel.flush
  [12] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.writeFully
  [15] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [25] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 340016312 ns (0.44%), 4 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.getAndAdd
  [ 1] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.addAndGet
  [ 2] io.ktor.utils.io.internal.RingBufferCapacity.flush
  [ 3] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.flush
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 6] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 8] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [18] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 330018175 ns (0.43%), 4 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.internal.RingBufferCapacity.tryWriteAtMost
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 5] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 324525528 ns (0.42%), 18 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/libnet.so
  [ 1] Java_java_net_SocketInputStream_socketRead0
  [ 2] java.net.SocketInputStream.socketRead0
  [ 3] java.net.SocketInputStream.socketRead
  [ 4] java.net.SocketInputStream.read
  [ 5] java.net.SocketInputStream.read
  [ 6] java.net.SocketInputStream.read
  [ 7] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 8] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 9] java.util.concurrent.Executors$RunnableAdapter.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 320012205 ns (0.42%), 4 samples
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.isFull
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 4] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 310015235 ns (0.40%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.prepareBuffer
  [ 1] io.ktor.utils.io.ByteBufferChannel.request
  [ 2] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.flush
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully
  [12] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 280013812 ns (0.36%), 8 samples
  [ 0] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.flush
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully
  [10] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [20] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 240006652 ns (0.31%), 5 samples
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.<init>
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.<init>
  [ 2] kotlin.coroutines.jvm.internal.SuspendLambda.<init>
  [ 3] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1$timeout$1.<init>
  [ 4] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 7] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 8] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 9] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [10] io.ktor.utils.io.ByteBufferChannel.flush
  [11] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.writeFully
  [14] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [24] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 220008092 ns (0.29%), 5 samples
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 1] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 2] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 3] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.flush
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 6] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 8] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [18] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 220003565 ns (0.29%), 5 samples
  [ 0] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.flush
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully
  [10] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [20] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 200017024 ns (0.26%), 5 samples
  [ 0] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.flush
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully
  [10] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [20] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 200014150 ns (0.26%), 7 samples
  [ 0] kotlinx.coroutines.CoroutineDispatcher.get
  [ 1] kotlin.coroutines.CombinedContext.get
  [ 2] io.ktor.utils.io.internal.CancellableReusableContinuation.parent
  [ 3] io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
  [ 4] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 6] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [11] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [12] io.ktor.utils.io.ByteBufferChannel.flush
  [13] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [14] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [15] io.ktor.utils.io.ByteBufferChannel.writeFully
  [16] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [17] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [18] kotlinx.coroutines.DispatchedTask.run
  [19] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [20] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt.runBlocking
  [23] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [24] kotlinx.coroutines.BuildersKt.runBlocking$default
  [25] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [26] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [27] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [29] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [30] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [31] java.lang.reflect.Method.invoke
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.Executors$RunnableAdapter.call
  [36] java.util.concurrent.FutureTask.run
  [37] java.util.concurrent.ThreadPoolExecutor.runWorker
  [38] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [39] java.lang.Thread.run

--- 200006984 ns (0.26%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getWriteByteOrder
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 4] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 190010955 ns (0.25%), 1 sample
  [ 0] I2C/C2I adapters
  [ 1] kotlinx.coroutines.BuildersKt__Builders_commonKt.startCoroutineImpl
  [ 2] kotlinx.coroutines.BuildersKt.startCoroutineImpl
  [ 3] kotlinx.coroutines.AbstractCoroutine.start
  [ 4] kotlinx.coroutines.BuildersKt__Builders_commonKt.launch
  [ 5] kotlinx.coroutines.BuildersKt.launch
  [ 6] kotlinx.coroutines.BuildersKt__Builders_commonKt.launch$default
  [ 7] kotlinx.coroutines.BuildersKt.launch$default
  [ 8] io.ktor.utils.io.CoroutinesKt.launchChannel
  [ 9] io.ktor.utils.io.CoroutinesKt.reader
  [10] io.ktor.network.sockets.CIOWriterKt.attachForWritingDirectImpl
  [11] io.ktor.network.sockets.NIOSocketImpl$attachForWriting$1.invoke
  [12] io.ktor.network.sockets.NIOSocketImpl$attachForWriting$1.invoke
  [13] io.ktor.network.sockets.NIOSocketImpl.attachFor
  [14] io.ktor.network.sockets.NIOSocketImpl.attachForWriting
  [15] io.ktor.network.sockets.SocketsKt.openWriteChannel
  [16] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [17] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [18] kotlinx.coroutines.DispatchedTask.run
  [19] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [20] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt.runBlocking
  [23] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [24] kotlinx.coroutines.BuildersKt.runBlocking$default
  [25] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [26] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [27] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [29] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [30] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [31] java.lang.reflect.Method.invoke
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.Executors$RunnableAdapter.call
  [36] java.util.concurrent.FutureTask.run
  [37] java.util.concurrent.ThreadPoolExecutor.runWorker
  [38] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [39] java.lang.Thread.run

--- 180007746 ns (0.23%), 2 samples
  [ 0] kotlin.ResultKt.throwOnFailure
  [ 1] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.flush
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully
  [11] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 177725273 ns (0.23%), 13 samples
  [ 0] java.net.SocketInputStream.socketRead0
  [ 1] java.net.SocketInputStream.socketRead
  [ 2] java.net.SocketInputStream.read
  [ 3] java.net.SocketInputStream.read
  [ 4] java.net.SocketInputStream.read
  [ 5] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 6] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 7] java.util.concurrent.Executors$RunnableAdapter.call
  [ 8] java.util.concurrent.FutureTask.run
  [ 9] java.util.concurrent.ThreadPoolExecutor.runWorker
  [10] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [11] java.lang.Thread.run

--- 170010151 ns (0.22%), 1 sample
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] kotlinx.coroutines.internal.LockFreeLinkedListNode.addOneIfEmpty
  [ 6] kotlinx.coroutines.JobSupport.promoteSingleToNodeList
  [ 7] kotlinx.coroutines.JobSupport.invokeOnCompletion
  [ 8] kotlinx.coroutines.JobSupport.invokeOnCompletion
  [ 9] io.ktor.utils.io.CoroutinesKt.launchChannel
  [10] io.ktor.utils.io.CoroutinesKt.reader
  [11] io.ktor.network.sockets.CIOWriterKt.attachForWritingDirectImpl
  [12] io.ktor.network.sockets.NIOSocketImpl$attachForWriting$1.invoke
  [13] io.ktor.network.sockets.NIOSocketImpl$attachForWriting$1.invoke
  [14] io.ktor.network.sockets.NIOSocketImpl.attachFor
  [15] io.ktor.network.sockets.NIOSocketImpl.attachForWriting
  [16] io.ktor.network.sockets.SocketsKt.openWriteChannel
  [17] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [18] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [19] kotlinx.coroutines.DispatchedTask.run
  [20] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [21] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [23] kotlinx.coroutines.BuildersKt.runBlocking
  [24] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [25] kotlinx.coroutines.BuildersKt.runBlocking$default
  [26] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [27] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [28] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [29] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [30] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [31] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [32] java.lang.reflect.Method.invoke
  [33] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [34] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.Executors$RunnableAdapter.call
  [37] java.util.concurrent.FutureTask.run
  [38] java.util.concurrent.ThreadPoolExecutor.runWorker
  [39] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [40] java.lang.Thread.run

--- 160008424 ns (0.21%), 2 samples
  [ 0] java.nio.Buffer.position
  [ 1] java.nio.ByteBuffer.position
  [ 2] java.nio.MappedByteBuffer.position
  [ 3] java.nio.MappedByteBuffer.position
  [ 4] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 5] sun.nio.ch.IOUtil.write
  [ 6] sun.nio.ch.IOUtil.write
  [ 7] sun.nio.ch.SocketChannelImpl.write
  [ 8] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [11] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [12] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [13] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [14] io.ktor.utils.io.ByteBufferChannel.flush
  [15] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [16] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [17] io.ktor.utils.io.ByteBufferChannel.writeFully
  [18] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [19] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [20] kotlinx.coroutines.DispatchedTask.run
  [21] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [22] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [23] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [24] kotlinx.coroutines.BuildersKt.runBlocking
  [25] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [26] kotlinx.coroutines.BuildersKt.runBlocking$default
  [27] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [28] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [29] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [30] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [31] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [32] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [33] java.lang.reflect.Method.invoke
  [34] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [35] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [36] java.util.concurrent.FutureTask.run
  [37] java.util.concurrent.Executors$RunnableAdapter.call
  [38] java.util.concurrent.FutureTask.run
  [39] java.util.concurrent.ThreadPoolExecutor.runWorker
  [40] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [41] java.lang.Thread.run

--- 160007441 ns (0.21%), 1 sample
  [ 0] java.nio.Buffer.remaining
  [ 1] io.ktor.utils.io.ByteBufferChannel.request
  [ 2] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.flush
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully
  [12] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 160000466 ns (0.21%), 3 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 1] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.flush
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 6] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 155440122 ns (0.20%), 10 samples
  [ 0] java.net.AbstractPlainSocketImpl.releaseFD
  [ 1] java.net.SocketInputStream.read
  [ 2] java.net.SocketInputStream.read
  [ 3] java.net.SocketInputStream.read
  [ 4] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 5] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 6] java.util.concurrent.Executors$RunnableAdapter.call
  [ 7] java.util.concurrent.FutureTask.run
  [ 8] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 9] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [10] java.lang.Thread.run

--- 150009209 ns (0.20%), 3 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.prepareBuffer
  [ 1] io.ktor.utils.io.ByteBufferChannel.request
  [ 2] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.flush
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully
  [12] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 150008399 ns (0.20%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getReadOp
  [ 1] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 4] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 7] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 8] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 9] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [10] io.ktor.utils.io.ByteBufferChannel.flush
  [11] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.writeFully
  [14] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [24] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 150003198 ns (0.20%), 2 samples
  [ 0] java.nio.ByteBuffer.order
  [ 1] io.ktor.utils.io.ByteBufferChannel.prepareBuffer
  [ 2] io.ktor.utils.io.ByteBufferChannel.setupStateForWrite$ktor_io
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 6] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 140009078 ns (0.18%), 3 samples
  [ 0] jdk.internal.misc.Unsafe.copyMemory
  [ 1] java.nio.DirectByteBuffer.put
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 5] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 140006276 ns (0.18%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 2] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.flush
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully
  [12] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 130004291 ns (0.17%), 1 sample
  [ 0] sun.nio.ch.SocketOptionRegistry$RegistryKey.equals
  [ 1] java.util.HashMap.getNode
  [ 2] java.util.HashMap.get
  [ 3] sun.nio.ch.SocketOptionRegistry.findOption
  [ 4] sun.nio.ch.Net.setSocketOption
  [ 5] sun.nio.ch.SocketChannelImpl.setOption
  [ 6] sun.nio.ch.SocketAdaptor.setBooleanOption
  [ 7] sun.nio.ch.SocketAdaptor.setTcpNoDelay
  [ 8] io.ktor.network.sockets.JavaSocketOptionsKt.assignOptions
  [ 9] io.ktor.network.sockets.ConnectUtilsJvmKt.connect
  [10] io.ktor.network.sockets.TcpSocketBuilder.connect
  [11] io.ktor.network.sockets.TcpSocketBuilder.connect
  [12] io.ktor.network.sockets.TcpSocketBuilder.connect$default
  [13] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [17] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [21] kotlinx.coroutines.BuildersKt.runBlocking$default
  [22] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [24] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 124431497 ns (0.16%), 4 samples
  [ 0] __recv
  [ 1] Java_java_net_SocketInputStream_socketRead0
  [ 2] java.net.SocketInputStream.socketRead0
  [ 3] java.net.SocketInputStream.socketRead
  [ 4] java.net.SocketInputStream.read
  [ 5] java.net.SocketInputStream.read
  [ 6] java.net.SocketInputStream.read
  [ 7] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 8] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 9] java.util.concurrent.Executors$RunnableAdapter.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 123271587 ns (0.16%), 5 samples
  [ 0] java.net.SocketInputStream.read
  [ 1] java.net.SocketInputStream.read
  [ 2] java.net.SocketInputStream.read
  [ 3] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 4] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 5] java.util.concurrent.Executors$RunnableAdapter.call
  [ 6] java.util.concurrent.FutureTask.run
  [ 7] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 8] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 9] java.lang.Thread.run

--- 120012349 ns (0.16%), 3 samples
  [ 0] kotlinx.coroutines.JobSupport.get
  [ 1] kotlin.coroutines.CombinedContext.get
  [ 2] io.ktor.utils.io.internal.CancellableReusableContinuation.parent
  [ 3] io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
  [ 4] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 6] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [11] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [12] io.ktor.utils.io.ByteBufferChannel.flush
  [13] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [14] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [15] io.ktor.utils.io.ByteBufferChannel.writeFully
  [16] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [17] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [18] kotlinx.coroutines.DispatchedTask.run
  [19] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [20] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt.runBlocking
  [23] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [24] kotlinx.coroutines.BuildersKt.runBlocking$default
  [25] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [26] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [27] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [29] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [30] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [31] java.lang.reflect.Method.invoke
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.Executors$RunnableAdapter.call
  [36] java.util.concurrent.FutureTask.run
  [37] java.util.concurrent.ThreadPoolExecutor.runWorker
  [38] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [39] java.lang.Thread.run

--- 120008062 ns (0.16%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 1] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 2] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.flush
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully
  [12] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 120003746 ns (0.16%), 1 sample
  [ 0] kotlin.coroutines.CombinedContext.get
  [ 1] io.ktor.utils.io.internal.CancellableReusableContinuation.parent
  [ 2] io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 5] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [10] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [11] io.ktor.utils.io.ByteBufferChannel.flush
  [12] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.writeFully
  [15] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [25] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 110006851 ns (0.14%), 1 sample
  [ 0] kotlinx.coroutines.JobSupport.getKey
  [ 1] kotlin.jvm.internal.Intrinsics.areEqual
  [ 2] kotlin.coroutines.CoroutineContext$Element$DefaultImpls.minusKey
  [ 3] kotlinx.coroutines.Job$DefaultImpls.minusKey
  [ 4] kotlinx.coroutines.JobSupport.minusKey
  [ 5] kotlin.coroutines.CoroutineContext$plus$1.invoke
  [ 6] kotlin.coroutines.CoroutineContext$plus$1.invoke
  [ 7] kotlin.coroutines.CoroutineContext$Element$DefaultImpls.fold
  [ 8] kotlin.coroutines.AbstractCoroutineContextElement.fold
  [ 9] kotlin.coroutines.CombinedContext.fold
  [10] kotlin.coroutines.CoroutineContext$DefaultImpls.plus
  [11] kotlin.coroutines.CoroutineContext$Element$DefaultImpls.plus
  [12] kotlinx.coroutines.Job$DefaultImpls.plus
  [13] kotlinx.coroutines.JobSupport.plus
  [14] kotlinx.coroutines.CoroutineContextKt.newCoroutineContext
  [15] kotlinx.coroutines.BuildersKt__Builders_commonKt.launch
  [16] kotlinx.coroutines.BuildersKt.launch
  [17] kotlinx.coroutines.BuildersKt__Builders_commonKt.launch$default
  [18] kotlinx.coroutines.BuildersKt.launch$default
  [19] io.ktor.utils.io.CoroutinesKt.launchChannel
  [20] io.ktor.utils.io.CoroutinesKt.reader
  [21] io.ktor.network.sockets.CIOWriterKt.attachForWritingDirectImpl
  [22] io.ktor.network.sockets.NIOSocketImpl$attachForWriting$1.invoke
  [23] io.ktor.network.sockets.NIOSocketImpl$attachForWriting$1.invoke
  [24] io.ktor.network.sockets.NIOSocketImpl.attachFor
  [25] io.ktor.network.sockets.NIOSocketImpl.attachForWriting
  [26] io.ktor.network.sockets.SocketsKt.openWriteChannel
  [27] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [28] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [29] kotlinx.coroutines.DispatchedTask.run
  [30] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [31] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [32] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [33] kotlinx.coroutines.BuildersKt.runBlocking
  [34] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [35] kotlinx.coroutines.BuildersKt.runBlocking$default
  [36] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [37] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [38] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [39] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [40] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [41] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [42] java.lang.reflect.Method.invoke
  [43] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [44] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [45] java.util.concurrent.FutureTask.run
  [46] java.util.concurrent.Executors$RunnableAdapter.call
  [47] java.util.concurrent.FutureTask.run
  [48] java.util.concurrent.ThreadPoolExecutor.runWorker
  [49] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [50] java.lang.Thread.run

--- 110005848 ns (0.14%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 3] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 7] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [11] kotlinx.coroutines.BuildersKt.runBlocking$default
  [12] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [13] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 110005156 ns (0.14%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 1] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.flush
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 6] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 110004301 ns (0.14%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.setTotalBytesWritten$ktor_io
  [ 1] io.ktor.utils.io.ByteBufferChannel.bytesWritten
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 5] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 100033180 ns (0.13%), 8 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [12] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [13] start_thread

--- 100022890 ns (0.13%), 2 samples
  [ 0] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.flush
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully
  [10] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [20] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 100012674 ns (0.13%), 1 sample
  [ 0] kotlinx.coroutines.DispatchedTask.run
  [ 1] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 2] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 3] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 4] kotlinx.coroutines.BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 7] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [ 8] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [ 9] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [12] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 100007522 ns (0.13%), 1 sample
  [ 0] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.flush
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 7] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [17] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 100006324 ns (0.13%), 3 samples
  [ 0] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.flush
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully
  [10] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [20] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 100003522 ns (0.13%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.request
  [ 1] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.flush
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully
  [11] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 90011734 ns (0.12%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getClosed
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.flush
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 7] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [17] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 90006122 ns (0.12%), 1 sample
  [ 0] io.ktor.utils.io.internal.CancellableReusableContinuation.parent
  [ 1] io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 4] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 7] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 8] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 9] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [10] io.ktor.utils.io.ByteBufferChannel.flush
  [11] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.writeFully
  [14] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [24] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 90005500 ns (0.12%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.bytesWritten
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 4] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 90005376 ns (0.12%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 1] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 3] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 6] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 7] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 8] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.flush
  [10] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [12] io.ktor.utils.io.ByteBufferChannel.writeFully
  [13] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [17] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [21] kotlinx.coroutines.BuildersKt.runBlocking$default
  [22] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [24] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 90000612 ns (0.12%), 3 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.request
  [ 2] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.flush
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully
  [12] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 84098959 ns (0.11%), 3 samples
  [ 0] java.net.AbstractPlainSocketImpl.acquireFD
  [ 1] java.net.SocketInputStream.read
  [ 2] java.net.SocketInputStream.read
  [ 3] java.net.SocketInputStream.read
  [ 4] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 5] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 6] java.util.concurrent.Executors$RunnableAdapter.call
  [ 7] java.util.concurrent.FutureTask.run
  [ 8] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 9] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [10] java.lang.Thread.run

--- 80009454 ns (0.10%), 8 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] start_thread

--- 80003212 ns (0.10%), 1 sample
  [ 0] [vdso]
  [ 1] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.flush
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully
  [11] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 80002844 ns (0.10%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$getState
  [ 2] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 3] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 6] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 7] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 8] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.flush
  [10] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [12] io.ktor.utils.io.ByteBufferChannel.writeFully
  [13] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [17] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [21] kotlinx.coroutines.BuildersKt.runBlocking$default
  [22] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [24] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 80002561 ns (0.10%), 3 samples
  [ 0] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.flush
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully
  [10] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [20] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 79999902 ns (0.10%), 3 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.flush
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 6] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 73442919 ns (0.10%), 4 samples
  [ 0] pthread_mutex_lock
  [ 1] Java_java_net_SocketInputStream_socketRead0
  [ 2] java.net.SocketInputStream.socketRead0
  [ 3] java.net.SocketInputStream.socketRead
  [ 4] java.net.SocketInputStream.read
  [ 5] java.net.SocketInputStream.read
  [ 6] java.net.SocketInputStream.read
  [ 7] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 8] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 9] java.util.concurrent.Executors$RunnableAdapter.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 70009201 ns (0.09%), 1 sample
  [ 0] I2C/C2I adapters
  [ 1] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 2] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 3] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 4] kotlinx.coroutines.BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 7] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [ 8] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [ 9] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [12] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 70001835 ns (0.09%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.request
  [ 1] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.flush
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully
  [11] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 70000639 ns (0.09%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForWrite$ktor_io
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 4] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 70000037 ns (0.09%), 1 sample
  [ 0] java.nio.Buffer.capacity
  [ 1] io.ktor.utils.io.ByteBufferChannel.prepareBuffer
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 5] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 60003705 ns (0.08%), 1 sample
  [ 0] io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
  [ 1] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 3] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 6] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 7] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 8] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.flush
  [10] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [12] io.ktor.utils.io.ByteBufferChannel.writeFully
  [13] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [17] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [21] kotlinx.coroutines.BuildersKt.runBlocking$default
  [22] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [24] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 60003033 ns (0.08%), 2 samples
  [ 0] sun.nio.ch.SocketDispatcher.write
  [ 1] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 2] sun.nio.ch.IOUtil.write
  [ 3] sun.nio.ch.IOUtil.write
  [ 4] sun.nio.ch.SocketChannelImpl.write
  [ 5] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [10] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [11] io.ktor.utils.io.ByteBufferChannel.flush
  [12] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.writeFully
  [15] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [25] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 60002839 ns (0.08%), 1 sample
  [ 0] io.ktor.network.selector.SelectorManagerSupport.<init>
  [ 1] io.ktor.network.selector.ActorSelectorManager.<init>
  [ 2] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 6] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [10] kotlinx.coroutines.BuildersKt.runBlocking$default
  [11] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [12] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [13] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 60000248 ns (0.08%), 2 samples
  [ 0] java.nio.Buffer.checkBounds
  [ 1] java.nio.DirectByteBuffer.put
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 5] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 52965533 ns (0.07%), 4 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] java.net.SocketInputStream.socketRead0
  [ 2] java.net.SocketInputStream.socketRead
  [ 3] java.net.SocketInputStream.read
  [ 4] java.net.SocketInputStream.read
  [ 5] java.net.SocketInputStream.read
  [ 6] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 7] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 8] java.util.concurrent.Executors$RunnableAdapter.call
  [ 9] java.util.concurrent.FutureTask.run
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

--- 52390492 ns (0.07%), 2 samples
  [ 0] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 1] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 2] java.util.concurrent.Executors$RunnableAdapter.call
  [ 3] java.util.concurrent.FutureTask.run
  [ 4] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 5] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 6] java.lang.Thread.run

--- 50009381 ns (0.07%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForWrite$ktor_io
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 4] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 50009121 ns (0.07%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.writeSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$writeSuspend
  [ 2] io.ktor.utils.io.ByteBufferChannel$writeSuspend$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 6] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [10] kotlinx.coroutines.BuildersKt.runBlocking$default
  [11] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [12] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [13] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 50006395 ns (0.07%), 1 sample
  [ 0] java.lang.invoke.VarHandleGuards.guard_LILL_Z
  [ 1] java.util.concurrent.atomic.AtomicReferenceArray.compareAndSet
  [ 2] io.ktor.utils.io.pool.DefaultPool.tryPush
  [ 3] io.ktor.utils.io.pool.DefaultPool.recycle
  [ 4] io.ktor.utils.io.ByteBufferChannel.releaseBuffer
  [ 5] io.ktor.utils.io.ByteBufferChannel.restoreStateAfterRead
  [ 6] io.ktor.utils.io.ByteBufferChannel.lookAheadSuspend$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel$lookAheadSuspend$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [11] io.ktor.utils.io.ByteBufferChannel.resumeClosed
  [12] io.ktor.utils.io.ByteBufferChannel.close
  [13] io.ktor.utils.io.ByteWriteChannelKt.close
  [14] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [24] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 50005197 ns (0.07%), 1 sample
  [ 0] io.ktor.network.selector.LockFreeMPSCQueueCore$Companion.access$updateTail
  [ 1] io.ktor.network.selector.LockFreeMPSCQueueCore.addLast
  [ 2] io.ktor.network.selector.LockFreeMPSCQueue.addLast
  [ 3] io.ktor.network.selector.ActorSelectorManager.publishInterest
  [ 4] io.ktor.network.selector.SelectorManagerSupport.select
  [ 5] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [10] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [11] io.ktor.utils.io.ByteBufferChannel.flush
  [12] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.writeFully
  [15] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [25] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 50004205 ns (0.07%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 2] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 6] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [10] kotlinx.coroutines.BuildersKt.runBlocking$default
  [11] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [12] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [13] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 50003911 ns (0.07%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.access$getJoining$p
  [ 1] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 3] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 6] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 7] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 8] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.flush
  [10] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [12] io.ktor.utils.io.ByteBufferChannel.writeFully
  [13] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [17] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [21] kotlinx.coroutines.BuildersKt.runBlocking$default
  [22] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [24] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 50003616 ns (0.07%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.prepareBuffer
  [ 1] io.ktor.utils.io.ByteBufferChannel.setupStateForWrite$ktor_io
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 5] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 50002585 ns (0.07%), 1 sample
  [ 0] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.flush
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully
  [10] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [20] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 50002328 ns (0.07%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 3] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 7] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [11] kotlinx.coroutines.BuildersKt.runBlocking$default
  [12] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [13] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 50000967 ns (0.07%), 1 sample
  [ 0] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.flush
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully
  [10] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [20] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 50000833 ns (0.07%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.request
  [ 1] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.flush
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully
  [11] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 50000819 ns (0.07%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.prepareBuffer
  [ 1] io.ktor.utils.io.ByteBufferChannel.setupStateForWrite$ktor_io
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 5] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 49998771 ns (0.07%), 1 sample
  [ 0] java.nio.DirectByteBuffer.ix
  [ 1] java.nio.DirectByteBuffer.put
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 5] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 40009869 ns (0.05%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getClosed
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$getClosed
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 5] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 40009177 ns (0.05%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$getState
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 4] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 7] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 8] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 9] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [10] io.ktor.utils.io.ByteBufferChannel.flush
  [11] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [12] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [13] io.ktor.utils.io.ByteBufferChannel.writeFully
  [14] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [15] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [16] kotlinx.coroutines.DispatchedTask.run
  [17] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [18] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [22] kotlinx.coroutines.BuildersKt.runBlocking$default
  [23] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [24] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [25] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 40004084 ns (0.05%), 1 sample
  [ 0] java.nio.Buffer.position
  [ 1] java.nio.ByteBuffer.position
  [ 2] java.nio.MappedByteBuffer.position
  [ 3] java.nio.DirectByteBuffer.put
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 7] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [17] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 40003777 ns (0.05%), 1 sample
  [ 0] kotlin.jvm.internal.Intrinsics.checkNotNullParameter
  [ 1] kotlin.coroutines.CoroutineContext$Element$DefaultImpls.get
  [ 2] kotlinx.coroutines.Job$DefaultImpls.get
  [ 3] kotlinx.coroutines.JobSupport.get
  [ 4] kotlin.coroutines.CombinedContext.get
  [ 5] io.ktor.utils.io.internal.CancellableReusableContinuation.parent
  [ 6] io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
  [ 7] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 9] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [12] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [13] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [14] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [15] io.ktor.utils.io.ByteBufferChannel.flush
  [16] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [17] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [18] io.ktor.utils.io.ByteBufferChannel.writeFully
  [19] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [20] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [21] kotlinx.coroutines.DispatchedTask.run
  [22] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [23] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [24] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [25] kotlinx.coroutines.BuildersKt.runBlocking
  [26] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [27] kotlinx.coroutines.BuildersKt.runBlocking$default
  [28] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [29] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [30] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [31] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [32] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [33] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [34] java.lang.reflect.Method.invoke
  [35] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [36] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [37] java.util.concurrent.FutureTask.run
  [38] java.util.concurrent.Executors$RunnableAdapter.call
  [39] java.util.concurrent.FutureTask.run
  [40] java.util.concurrent.ThreadPoolExecutor.runWorker
  [41] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [42] java.lang.Thread.run

--- 40003542 ns (0.05%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 1] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.flush
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully
  [11] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 40003120 ns (0.05%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 1] io.ktor.utils.io.ByteBufferChannel.flush
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 5] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 40002736 ns (0.05%), 1 sample
  [ 0] jdk.internal.misc.Unsafe.checkSize
  [ 1] jdk.internal.misc.Unsafe.copyMemoryChecks
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] java.nio.DirectByteBuffer.put
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 7] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [17] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 40001075 ns (0.05%), 1 sample
  [ 0] io.ktor.network.selector.LockFreeMPSCQueueCore.<init>
  [ 1] io.ktor.network.selector.LockFreeMPSCQueue.<init>
  [ 2] io.ktor.network.selector.ActorSelectorManager.<init>
  [ 3] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 7] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [11] kotlinx.coroutines.BuildersKt.runBlocking$default
  [12] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [13] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 40000987 ns (0.05%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 3] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 7] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [11] kotlinx.coroutines.BuildersKt.runBlocking$default
  [12] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [13] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 40000797 ns (0.05%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.restoreStateAfterRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.lookAheadSuspend$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel$lookAheadSuspend$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeClosed
  [ 7] io.ktor.utils.io.ByteBufferChannel.close
  [ 8] io.ktor.utils.io.ByteWriteChannelKt.close
  [ 9] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [13] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [17] kotlinx.coroutines.BuildersKt.runBlocking$default
  [18] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [19] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [20] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 40000655 ns (0.05%), 1 sample
  [ 0] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.flush
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully
  [10] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [20] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 39999435 ns (0.05%), 2 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.flush
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully
  [11] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 39998816 ns (0.05%), 1 sample
  [ 0] java.nio.MappedByteBuffer.position
  [ 1] java.nio.MappedByteBuffer.position
  [ 2] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 3] sun.nio.ch.IOUtil.write
  [ 4] sun.nio.ch.IOUtil.write
  [ 5] sun.nio.ch.SocketChannelImpl.write
  [ 6] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [11] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [12] io.ktor.utils.io.ByteBufferChannel.flush
  [13] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [14] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [15] io.ktor.utils.io.ByteBufferChannel.writeFully
  [16] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [17] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [18] kotlinx.coroutines.DispatchedTask.run
  [19] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [20] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt.runBlocking
  [23] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [24] kotlinx.coroutines.BuildersKt.runBlocking$default
  [25] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [26] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [27] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [29] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [30] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [31] java.lang.reflect.Method.invoke
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.Executors$RunnableAdapter.call
  [36] java.util.concurrent.FutureTask.run
  [37] java.util.concurrent.ThreadPoolExecutor.runWorker
  [38] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [39] java.lang.Thread.run

--- 31644941 ns (0.04%), 2 samples
  [ 0] java.net.AbstractPlainSocketImpl.acquireFD
  [ 1] java.net.SocketInputStream.read
  [ 2] java.net.SocketInputStream.read
  [ 3] java.net.SocketInputStream.read
  [ 4] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 5] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 6] java.util.concurrent.Executors$RunnableAdapter.call
  [ 7] java.util.concurrent.FutureTask.run
  [ 8] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 9] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [10] java.lang.Thread.run

--- 31552996 ns (0.04%), 2 samples
  [ 0] java.net.SocketInputStream.socketRead0
  [ 1] java.net.SocketInputStream.read
  [ 2] java.net.SocketInputStream.read
  [ 3] java.net.SocketInputStream.read
  [ 4] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 5] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 6] java.util.concurrent.Executors$RunnableAdapter.call
  [ 7] java.util.concurrent.FutureTask.run
  [ 8] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 9] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [10] java.lang.Thread.run

--- 30026697 ns (0.04%), 1 sample
  [ 0] kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 3] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 8] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [ 9] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 30021898 ns (0.04%), 3 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] start_thread

--- 30004599 ns (0.04%), 1 sample
  [ 0] kotlinx.coroutines.JobSupport.tryMakeCompletingSlowPath
  [ 1] kotlinx.coroutines.JobSupport.tryMakeCompleting
  [ 2] kotlinx.coroutines.JobSupport.makeCompletingOnce$kotlinx_coroutines_core
  [ 3] kotlinx.coroutines.AbstractCoroutine.resumeWith
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 6] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 7] io.ktor.utils.io.ByteBufferChannel.resumeClosed
  [ 8] io.ktor.utils.io.ByteBufferChannel.close
  [ 9] io.ktor.utils.io.ByteWriteChannelKt.close
  [10] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [20] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 30004347 ns (0.04%), 1 sample
  [ 0] java.lang.Object.<init>
  [ 1] java.lang.Number.<init>
  [ 2] java.util.concurrent.atomic.AtomicLong.<init>
  [ 3] io.ktor.network.selector.ActorSelectorManager.<init>
  [ 4] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 30004324 ns (0.04%), 1 sample
  [ 0] I2C/C2I adapters
  [ 1] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 2] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 3] kotlinx.coroutines.BuildersKt.runBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 6] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [ 7] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [ 8] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 30002703 ns (0.04%), 1 sample
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.getContext
  [ 1] kotlinx.coroutines.internal.DispatchedContinuation.getContext
  [ 2] io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 5] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [10] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [11] io.ktor.utils.io.ByteBufferChannel.flush
  [12] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.writeFully
  [15] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [25] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 30001756 ns (0.04%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 1] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.flush
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 6] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 30001533 ns (0.04%), 1 sample
  [ 0] kotlin.ranges.RangesKt___RangesKt.coerceAtMost
  [ 1] io.ktor.utils.io.ByteBufferChannel.prepareBuffer
  [ 2] io.ktor.utils.io.ByteBufferChannel.request
  [ 3] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 6] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 7] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 8] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.flush
  [10] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [12] io.ktor.utils.io.ByteBufferChannel.writeFully
  [13] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [17] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [21] kotlinx.coroutines.BuildersKt.runBlocking$default
  [22] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [24] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 30001360 ns (0.04%), 1 sample
  [ 0] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.flush
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 7] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [17] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 30001284 ns (0.04%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getWriteByteOrder
  [ 1] io.ktor.utils.io.ByteBufferChannel.setupStateForWrite$ktor_io
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 5] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 30000413 ns (0.04%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.request
  [ 1] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.flush
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully
  [11] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 29999499 ns (0.04%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$getState
  [ 2] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 5] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [10] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [11] io.ktor.utils.io.ByteBufferChannel.flush
  [12] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.writeFully
  [15] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [25] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 21027761 ns (0.03%), 2 samples
  [ 0] pthread_mutex_unlock
  [ 1] Java_java_net_SocketInputStream_socketRead0
  [ 2] java.net.SocketInputStream.socketRead0
  [ 3] java.net.SocketInputStream.socketRead
  [ 4] java.net.SocketInputStream.read
  [ 5] java.net.SocketInputStream.read
  [ 6] java.net.SocketInputStream.read
  [ 7] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 8] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 9] java.util.concurrent.Executors$RunnableAdapter.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 21015047 ns (0.03%), 1 sample
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/libnet.so
  [ 1] java.net.SocketInputStream.socketRead0
  [ 2] java.net.SocketInputStream.socketRead
  [ 3] java.net.SocketInputStream.read
  [ 4] java.net.SocketInputStream.read
  [ 5] java.net.SocketInputStream.read
  [ 6] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 7] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 8] java.util.concurrent.Executors$RunnableAdapter.call
  [ 9] java.util.concurrent.FutureTask.run
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

--- 20230361 ns (0.03%), 1 sample
  [ 0] java.nio.channels.spi.AbstractSelector.begin
  [ 1] sun.nio.ch.SelectorImpl.begin
  [ 2] sun.nio.ch.EPollSelectorImpl.doSelect
  [ 3] sun.nio.ch.SelectorImpl.lockAndDoSelect
  [ 4] sun.nio.ch.SelectorImpl.select
  [ 5] io.ktor.network.selector.ActorSelectorManager.select
  [ 6] io.ktor.network.selector.ActorSelectorManager.access$select
  [ 7] io.ktor.network.selector.ActorSelectorManager$select$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely
  [11] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask
  [12] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker
  [13] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run

--- 20133201 ns (0.03%), 1 sample
  [ 0] sun.nio.ch.SelectorImpl.keys
  [ 1] io.ktor.network.selector.ActorSelectorManager.process
  [ 2] io.ktor.network.selector.ActorSelectorManager.access$process
  [ 3] io.ktor.network.selector.ActorSelectorManager$process$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely
  [ 7] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask
  [ 8] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker
  [ 9] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run

--- 20099851 ns (0.03%), 2 samples
  [ 0] __futex_abstimed_wait_cancelable64
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.parkNanos
  [ 3] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.park
  [ 4] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.tryPark
  [ 5] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker
  [ 6] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run

--- 20025326 ns (0.03%), 1 sample
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [12] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [13] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [14] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [15] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [16] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [17] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [18] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [19] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [20] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [21] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [22] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [23] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [24] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [25] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [26] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [27] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [28] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [29] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [30] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [31] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [32] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [33] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [34] start_thread

--- 20009760 ns (0.03%), 2 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [12] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [13] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [14] start_thread

--- 20008981 ns (0.03%), 1 sample
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [12] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [13] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [14] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [15] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [16] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [17] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [18] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [19] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [20] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [21] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [22] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [23] start_thread

--- 20008831 ns (0.03%), 1 sample
  [ 0] __tls_get_addr
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [12] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [13] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [14] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [15] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [16] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [17] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [18] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [19] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [20] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [21] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [22] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [23] start_thread

--- 20005185 ns (0.03%), 1 sample
  [ 0] kotlin.coroutines.CombinedContext.get
  [ 1] io.ktor.utils.io.internal.CancellableReusableContinuation.parent
  [ 2] io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 5] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [10] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [11] io.ktor.utils.io.ByteBufferChannel.flush
  [12] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.writeFully
  [15] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [25] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 20005053 ns (0.03%), 1 sample
  [ 0] __futex_abstimed_wait_cancelable64
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.parkNanos
  [ 3] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 8] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [ 9] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 20004689 ns (0.03%), 1 sample
  [ 0] Interpreter
  [ 1] [unknown_Java]

--- 20004577 ns (0.03%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 2] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 6] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [10] kotlinx.coroutines.BuildersKt.runBlocking$default
  [11] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [12] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [13] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 20002460 ns (0.03%), 1 sample
  [ 0] io.ktor.network.selector.ActorSelectorManager.process
  [ 1] io.ktor.network.selector.ActorSelectorManager.access$process
  [ 2] io.ktor.network.selector.ActorSelectorManager$process$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] io.ktor.network.selector.ActorSelectorManager$ContinuationHolder.resume
  [ 5] io.ktor.network.selector.ActorSelectorManager.publishInterest
  [ 6] io.ktor.network.selector.SelectorManagerSupport.select
  [ 7] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [11] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [12] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [13] io.ktor.utils.io.ByteBufferChannel.flush
  [14] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [15] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [16] io.ktor.utils.io.ByteBufferChannel.writeFully
  [17] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [18] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [19] kotlinx.coroutines.DispatchedTask.run
  [20] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [21] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [23] kotlinx.coroutines.BuildersKt.runBlocking
  [24] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [25] kotlinx.coroutines.BuildersKt.runBlocking$default
  [26] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [27] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [28] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [29] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [30] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [31] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [32] java.lang.reflect.Method.invoke
  [33] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [34] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.Executors$RunnableAdapter.call
  [37] java.util.concurrent.FutureTask.run
  [38] java.util.concurrent.ThreadPoolExecutor.runWorker
  [39] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [40] java.lang.Thread.run

--- 20002016 ns (0.03%), 1 sample
  [ 0] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.flush
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully
  [10] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [20] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 20001525 ns (0.03%), 1 sample
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/libnio.so
  [ 1] sun.nio.ch.FileDispatcherImpl.write0
  [ 2] sun.nio.ch.SocketDispatcher.write
  [ 3] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 4] sun.nio.ch.IOUtil.write
  [ 5] sun.nio.ch.IOUtil.write
  [ 6] sun.nio.ch.SocketChannelImpl.write
  [ 7] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [10] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [11] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [12] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [13] io.ktor.utils.io.ByteBufferChannel.flush
  [14] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [15] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [16] io.ktor.utils.io.ByteBufferChannel.writeFully
  [17] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [18] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [19] kotlinx.coroutines.DispatchedTask.run
  [20] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [21] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [23] kotlinx.coroutines.BuildersKt.runBlocking
  [24] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [25] kotlinx.coroutines.BuildersKt.runBlocking$default
  [26] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [27] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [28] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [29] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [30] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [31] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [32] java.lang.reflect.Method.invoke
  [33] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [34] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.Executors$RunnableAdapter.call
  [37] java.util.concurrent.FutureTask.run
  [38] java.util.concurrent.ThreadPoolExecutor.runWorker
  [39] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [40] java.lang.Thread.run

--- 20001186 ns (0.03%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 2] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.flush
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully
  [12] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 20000873 ns (0.03%), 1 sample
  [ 0] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 3] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 5] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.flush
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully
  [10] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [20] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 19999897 ns (0.03%), 1 sample
  [ 0] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.flush
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 7] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [17] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 19998022 ns (0.03%), 2 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 2] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 3] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.flush
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 6] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 8] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [18] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 10548637 ns (0.01%), 1 sample
  [ 0] java.net.SocketInputStream.read
  [ 1] java.net.SocketInputStream.read
  [ 2] java.net.SocketInputStream.read
  [ 3] io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
  [ 4] io.ktor.benchmarks.SocketBenchmarks$$Lambda$35.268579710.run
  [ 5] java.util.concurrent.Executors$RunnableAdapter.call
  [ 6] java.util.concurrent.FutureTask.run
  [ 7] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 8] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 9] java.lang.Thread.run

--- 10151018 ns (0.01%), 1 sample
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] start_thread

--- 10084244 ns (0.01%), 1 sample
  [ 0] java.nio.channels.SocketChannel.validOps
  [ 1] sun.nio.ch.SelectionKeyImpl.interestOps
  [ 2] io.ktor.network.selector.SelectorManagerSupport.handleSelectedKey
  [ 3] io.ktor.network.selector.SelectorManagerSupport.handleSelectedKeys
  [ 4] io.ktor.network.selector.ActorSelectorManager.process
  [ 5] io.ktor.network.selector.ActorSelectorManager.access$process
  [ 6] io.ktor.network.selector.ActorSelectorManager$process$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely
  [10] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask
  [11] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker
  [12] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run

--- 10082135 ns (0.01%), 1 sample
  [ 0] io.ktor.network.selector.ActorSelectorManager.receiveOrNullSuspend
  [ 1] io.ktor.network.selector.ActorSelectorManager.receiveOrNull
  [ 2] io.ktor.network.selector.ActorSelectorManager.process
  [ 3] io.ktor.network.selector.ActorSelectorManager.access$process
  [ 4] io.ktor.network.selector.ActorSelectorManager$process$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely
  [ 8] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask
  [ 9] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker
  [10] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run

--- 10053478 ns (0.01%), 1 sample
  [ 0] Interpreter
  [ 1] [not_walkable_Java]

--- 10051542 ns (0.01%), 1 sample
  [ 0] java.util.concurrent.atomic.AtomicReference.compareAndSet
  [ 1] io.ktor.network.selector.ActorSelectorManager.receiveOrNullSuspend
  [ 2] io.ktor.network.selector.ActorSelectorManager.receiveOrNull
  [ 3] io.ktor.network.selector.ActorSelectorManager.process
  [ 4] io.ktor.network.selector.ActorSelectorManager.access$process
  [ 5] io.ktor.network.selector.ActorSelectorManager$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely
  [ 9] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask
  [10] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker
  [11] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run

--- 10043783 ns (0.01%), 1 sample
  [ 0] sun.nio.ch.EPoll.allocatePollArray
  [ 1] sun.nio.ch.EPollSelectorImpl.<init>
  [ 2] sun.nio.ch.EPollSelectorProvider.openSelector
  [ 3] io.ktor.network.selector.ActorSelectorManager$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely
  [ 7] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask
  [ 8] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker
  [ 9] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run

--- 10043594 ns (0.01%), 1 sample
  [ 0] sun.nio.ch.SelectorImpl.begin
  [ 1] sun.nio.ch.EPollSelectorImpl.doSelect
  [ 2] sun.nio.ch.SelectorImpl.lockAndDoSelect
  [ 3] sun.nio.ch.SelectorImpl.select
  [ 4] io.ktor.network.selector.ActorSelectorManager.select
  [ 5] io.ktor.network.selector.ActorSelectorManager.access$select
  [ 6] io.ktor.network.selector.ActorSelectorManager$select$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely
  [10] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask
  [11] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker
  [12] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run

--- 10043032 ns (0.01%), 1 sample
  [ 0] io.ktor.network.selector.ActorSelectorManager.process
  [ 1] io.ktor.network.selector.ActorSelectorManager.access$process
  [ 2] io.ktor.network.selector.ActorSelectorManager$process$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely
  [ 6] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask
  [ 7] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker
  [ 8] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run

--- 10042051 ns (0.01%), 1 sample
  [ 0] java.nio.channels.spi.AbstractSelectionKey.isValid
  [ 1] sun.nio.ch.SelectionKeyImpl.ensureValid
  [ 2] sun.nio.ch.SelectionKeyImpl.interestOps
  [ 3] io.ktor.network.selector.SelectorManagerSupport.handleSelectedKey
  [ 4] io.ktor.network.selector.SelectorManagerSupport.handleSelectedKeys
  [ 5] io.ktor.network.selector.ActorSelectorManager.process
  [ 6] io.ktor.network.selector.ActorSelectorManager.access$process
  [ 7] io.ktor.network.selector.ActorSelectorManager$process$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely
  [11] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask
  [12] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker
  [13] kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run

--- 10040464 ns (0.01%), 1 sample
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [12] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [13] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [14] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [15] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [16] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [17] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [18] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [19] start_thread

--- 10016477 ns (0.01%), 1 sample
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [12] start_thread

--- 10014868 ns (0.01%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForWrite$ktor_io
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 4] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 10011556 ns (0.01%), 1 sample
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [12] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [13] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [14] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [15] start_thread

--- 10010183 ns (0.01%), 1 sample
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [12] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [13] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [14] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [15] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [16] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [17] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [18] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [19] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [20] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [21] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [22] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [23] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [24] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [25] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [26] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [27] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [28] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [29] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [30] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [31] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [32] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [33] start_thread

--- 10009507 ns (0.01%), 1 sample
  [ 0] __GI___pthread_mutex_lock
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [12] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [13] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [14] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [15] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [16] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [17] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [18] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [19] start_thread

--- 10008360 ns (0.01%), 1 sample
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [12] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [13] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [14] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [15] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [16] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [17] start_thread

--- 10002941 ns (0.01%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.prepareBuffer
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 4] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 10002098 ns (0.01%), 1 sample
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.accessCheck
  [ 1] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet
  [ 2] io.ktor.network.selector.SelectableBase.interestOp
  [ 3] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 6] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 7] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 8] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.flush
  [10] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [12] io.ktor.utils.io.ByteBufferChannel.writeFully
  [13] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [17] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [21] kotlinx.coroutines.BuildersKt.runBlocking$default
  [22] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [24] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 10002008 ns (0.01%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.restoreStateAfterWrite$ktor_io
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 4] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 10001937 ns (0.01%), 1 sample
  [ 0] kotlin.coroutines.CombinedContext.get
  [ 1] io.ktor.utils.io.internal.CancellableReusableContinuation.parent
  [ 2] io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 5] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [10] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [11] io.ktor.utils.io.ByteBufferChannel.flush
  [12] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.writeFully
  [15] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [25] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 10001665 ns (0.01%), 1 sample
  [ 0] io.ktor.network.selector.ActorSelectorManager.<init>
  [ 1] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [11] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 10001485 ns (0.01%), 1 sample
  [ 0] java.lang.AbstractStringBuilder.isLatin1
  [ 1] java.lang.AbstractStringBuilder.append
  [ 2] java.lang.StringBuilder.append
  [ 3] java.net.Inet4Address.numericToTextFormat
  [ 4] java.net.Inet4Address.getHostAddress
  [ 5] io.ktor.network.sockets.SocketImpl.selfConnect
  [ 6] io.ktor.network.sockets.SocketImpl.connect$ktor_network
  [ 7] io.ktor.network.sockets.SocketImpl$connect$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [17] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 10001305 ns (0.01%), 1 sample
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [12] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [13] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [14] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [15] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [16] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [17] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [18] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [19] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [20] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [21] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [22] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [23] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [24] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [25] start_thread

--- 10001233 ns (0.01%), 1 sample
  [ 0] clock_gettime

--- 10001169 ns (0.01%), 1 sample
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [12] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [13] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [14] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [15] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [16] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [17] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [18] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [19] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [20] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [21] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [22] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [23] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [24] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [25] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [26] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [27] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [28] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [29] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [30] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [31] start_thread

--- 10001147 ns (0.01%), 1 sample
  [ 0] java.lang.Object.equals
  [ 1] kotlin.jvm.internal.Intrinsics.areEqual
  [ 2] kotlin.coroutines.CoroutineContext$Element$DefaultImpls.get
  [ 3] kotlinx.coroutines.Job$DefaultImpls.get
  [ 4] kotlinx.coroutines.JobSupport.get
  [ 5] kotlin.coroutines.CombinedContext.get
  [ 6] io.ktor.utils.io.internal.CancellableReusableContinuation.parent
  [ 7] io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
  [ 8] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [10] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [13] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [14] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [15] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [16] io.ktor.utils.io.ByteBufferChannel.flush
  [17] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [18] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [19] io.ktor.utils.io.ByteBufferChannel.writeFully
  [20] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [21] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [22] kotlinx.coroutines.DispatchedTask.run
  [23] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [24] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [25] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [26] kotlinx.coroutines.BuildersKt.runBlocking
  [27] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [28] kotlinx.coroutines.BuildersKt.runBlocking$default
  [29] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [30] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [31] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [32] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [33] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [34] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [35] java.lang.reflect.Method.invoke
  [36] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [37] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [38] java.util.concurrent.FutureTask.run
  [39] java.util.concurrent.Executors$RunnableAdapter.call
  [40] java.util.concurrent.FutureTask.run
  [41] java.util.concurrent.ThreadPoolExecutor.runWorker
  [42] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [43] java.lang.Thread.run

--- 10001033 ns (0.01%), 1 sample
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] start_thread

--- 10000964 ns (0.01%), 1 sample
  [ 0] kotlinx.coroutines.internal.LockFreeLinkedListNode.isRemoved
  [ 1] kotlinx.coroutines.JobSupport.nextChild
  [ 2] kotlinx.coroutines.JobSupport.firstChild
  [ 3] kotlinx.coroutines.JobSupport.tryMakeCompletingSlowPath
  [ 4] kotlinx.coroutines.JobSupport.tryMakeCompleting
  [ 5] kotlinx.coroutines.JobSupport.makeCompletingOnce$kotlinx_coroutines_core
  [ 6] kotlinx.coroutines.AbstractCoroutine.resumeWith
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeClosed
  [11] io.ktor.utils.io.ByteBufferChannel.close
  [12] io.ktor.utils.io.ByteWriteChannelKt.close
  [13] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [17] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [21] kotlinx.coroutines.BuildersKt.runBlocking$default
  [22] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [24] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 10000817 ns (0.01%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.prepareBuffer
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 4] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [14] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 10000512 ns (0.01%), 1 sample
  [ 0] kotlinx.coroutines.internal.LockFreeLinkedListHead.isRemoved
  [ 1] kotlinx.coroutines.JobSupport.nextChild
  [ 2] kotlinx.coroutines.JobSupport.firstChild
  [ 3] kotlinx.coroutines.JobSupport.tryMakeCompletingSlowPath
  [ 4] kotlinx.coroutines.JobSupport.tryMakeCompleting
  [ 5] kotlinx.coroutines.JobSupport.makeCompletingOnce$kotlinx_coroutines_core
  [ 6] kotlinx.coroutines.AbstractCoroutine.resumeWith
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 9] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [10] io.ktor.utils.io.ByteBufferChannel.resumeClosed
  [11] io.ktor.utils.io.ByteBufferChannel.close
  [12] io.ktor.utils.io.ByteWriteChannelKt.close
  [13] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [17] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt.runBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [21] kotlinx.coroutines.BuildersKt.runBlocking$default
  [22] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [24] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [26] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 10000179 ns (0.01%), 1 sample
  [ 0] java.nio.DirectByteBuffer.ix
  [ 1] java.nio.DirectByteBuffer.put
  [ 2] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 5] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [15] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 10000126 ns (0.01%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.request
  [ 2] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.flush
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully
  [12] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 9999994 ns (0.01%), 1 sample
  [ 0] kotlin.coroutines.CoroutineContext$Element$DefaultImpls.get
  [ 1] kotlinx.coroutines.Job$DefaultImpls.get
  [ 2] kotlinx.coroutines.JobSupport.get
  [ 3] kotlin.coroutines.CombinedContext.get
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.parent
  [ 5] io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
  [ 6] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 8] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [11] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [12] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [13] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [14] io.ktor.utils.io.ByteBufferChannel.flush
  [15] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [16] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [17] io.ktor.utils.io.ByteBufferChannel.writeFully
  [18] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [19] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [20] kotlinx.coroutines.DispatchedTask.run
  [21] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [22] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [23] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [24] kotlinx.coroutines.BuildersKt.runBlocking
  [25] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [26] kotlinx.coroutines.BuildersKt.runBlocking$default
  [27] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [28] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [29] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [30] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [31] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [32] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [33] java.lang.reflect.Method.invoke
  [34] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [35] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [36] java.util.concurrent.FutureTask.run
  [37] java.util.concurrent.Executors$RunnableAdapter.call
  [38] java.util.concurrent.FutureTask.run
  [39] java.util.concurrent.ThreadPoolExecutor.runWorker
  [40] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [41] java.lang.Thread.run

--- 9999847 ns (0.01%), 1 sample
  [ 0] __vdso_gettimeofday
  [ 1] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.flush
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully
  [11] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 9999728 ns (0.01%), 1 sample
  [ 0] io.ktor.network.sockets.SocketOptions$TCPClientSocketOptions.getSocketTimeout
  [ 1] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.flush
  [ 8] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully
  [11] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [21] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 9999556 ns (0.01%), 1 sample
  [ 0] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.flush
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 7] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [17] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 9999094 ns (0.01%), 1 sample
  [ 0] java.nio.ByteBuffer.limit
  [ 1] java.nio.MappedByteBuffer.limit
  [ 2] java.nio.MappedByteBuffer.limit
  [ 3] io.ktor.utils.io.ByteBufferChannel.prepareBuffer
  [ 4] io.ktor.utils.io.ByteBufferChannel.request
  [ 5] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [10] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [11] io.ktor.utils.io.ByteBufferChannel.flush
  [12] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [13] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [14] io.ktor.utils.io.ByteBufferChannel.writeFully
  [15] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [16] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [17] kotlinx.coroutines.DispatchedTask.run
  [18] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [19] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [20] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [21] kotlinx.coroutines.BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [23] kotlinx.coroutines.BuildersKt.runBlocking$default
  [24] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [25] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [26] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [27] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [29] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [30] java.lang.reflect.Method.invoke
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.Executors$RunnableAdapter.call
  [35] java.util.concurrent.FutureTask.run
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [38] java.lang.Thread.run

--- 9998917 ns (0.01%), 1 sample
  [ 0] io.ktor.utils.io.internal.ReadWriteBufferState$Initial.getReadingState$ktor_io
  [ 1] io.ktor.utils.io.internal.ReadWriteBufferState$ReadingWriting.stopWriting$ktor_io
  [ 2] io.ktor.utils.io.internal.ReadWriteBufferState$ReadingWriting.stopWriting$ktor_io
  [ 3] io.ktor.utils.io.ByteBufferChannel.restoreStateAfterWrite$ktor_io
  [ 4] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.writeFully
  [ 7] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [17] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 9998243 ns (0.01%), 1 sample
  [ 0] kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp.complete
  [ 1] kotlinx.coroutines.internal.LockFreeLinkedListNode.tryCondAddNext
  [ 2] kotlinx.coroutines.JobSupport.addLastAtomic
  [ 3] kotlinx.coroutines.JobSupport.invokeOnCompletion
  [ 4] kotlinx.coroutines.Job$DefaultImpls.invokeOnCompletion$default
  [ 5] kotlinx.coroutines.CancellableContinuationImpl.installParentHandle
  [ 6] kotlinx.coroutines.CancellableContinuationImpl.initCancellability
  [ 7] io.ktor.network.selector.SelectorManagerSupport.select
  [ 8] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [11] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [12] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [13] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [14] io.ktor.utils.io.ByteBufferChannel.flush
  [15] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [16] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [17] io.ktor.utils.io.ByteBufferChannel.writeFully
  [18] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [19] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [20] kotlinx.coroutines.DispatchedTask.run
  [21] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [22] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [23] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [24] kotlinx.coroutines.BuildersKt.runBlocking
  [25] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [26] kotlinx.coroutines.BuildersKt.runBlocking$default
  [27] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [28] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [29] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [30] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [31] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [32] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [33] java.lang.reflect.Method.invoke
  [34] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [35] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [36] java.util.concurrent.FutureTask.run
  [37] java.util.concurrent.Executors$RunnableAdapter.call
  [38] java.util.concurrent.FutureTask.run
  [39] java.util.concurrent.ThreadPoolExecutor.runWorker
  [40] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [41] java.lang.Thread.run

--- 9998191 ns (0.01%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
  [ 2] io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 5] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 6] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 7] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.flush
  [ 9] io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
  [10] io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.writeFully
  [12] io.ktor.benchmarks.SocketBenchmarks$testKtorSocketWrite$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.SocketBenchmarks.testKtorSocketWrite
  [22] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.SocketBenchmarks_testKtorSocketWrite_jmhTest.testKtorSocketWrite_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

          ns  percent  samples  top
  ----------  -------  -------  ---
 21901177315   28.51%      373  write
 12770068707   16.62%      713  __recv
  8240471515   10.73%      126  jlong_disjoint_arraycopy
  7831007588   10.19%      396  /usr/lib/x86_64-linux-gnu/libc-2.33.so
  3668931057    4.78%      208  /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  2090108670    2.72%       43  io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1.invokeSuspend
  1730109196    2.25%       45  io.ktor.utils.io.ByteBufferChannel.getState
  1490078621    1.94%       24  io.ktor.utils.io.ByteBufferChannel.setupStateForWrite$ktor_io
  1397016247    1.82%       80  __GI___pthread_mutex_lock
  1390069735    1.81%       18  [vdso]
  1270078061    1.65%       25  java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet
  1010030896    1.31%       15  sun.nio.ch.FileDispatcherImpl.write0
   848393408    1.10%       37  __GI___pthread_mutex_unlock
   693845960    0.90%       30  Java_java_net_SocketInputStream_socketRead0
   613856432    0.80%       32  io.ktor.benchmarks.SocketBenchmarks.setup$lambda-2
   580032637    0.76%        9  io.ktor.utils.io.ByteBufferChannel.prepareBuffer
   490024888    0.64%        6  io.ktor.network.sockets.CIOWriterKt$attachForWritingDirectImpl$1$1$timeout$1.<init>
   480006297    0.62%        7  io.ktor.utils.io.ByteBufferChannel.carryIndex
   470023594    0.61%        5  java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.addAndGet
   370038190    0.48%        5  Java_sun_nio_ch_FileDispatcherImpl_write0
   345540575    0.45%       19  /usr/lib/jvm/java-11-openjdk-amd64/lib/libnet.so
   340016312    0.44%        4  java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.getAndAdd
   320012205    0.42%        4  io.ktor.utils.io.internal.RingBufferCapacity.isFull
   300007378    0.39%        6  io.ktor.utils.io.ByteBufferChannel.resumeReadOp
   290024480    0.38%        3  I2C/C2I adapters
   250006603    0.33%        5  io.ktor.utils.io.ByteBufferChannel.request
   240006652    0.31%        5  kotlin.coroutines.jvm.internal.ContinuationImpl.<init>
   230008268    0.30%        2  io.ktor.utils.io.ByteBufferChannel.getWriteByteOrder
   220008092    0.29%        5  kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
   209278269    0.27%       15  java.net.SocketInputStream.socketRead0
   200014150    0.26%        7  kotlinx.coroutines.CoroutineDispatcher.get
   200012508    0.26%        3  java.nio.Buffer.position
   200009163    0.26%        5  io.ktor.utils.io.ByteBufferChannel.writeAsMuchAsPossible
   180007746    0.23%        2  kotlin.ResultKt.throwOnFailure
   160007441    0.21%        1  java.nio.Buffer.remaining
   155440122    0.20%       10  java.net.AbstractPlainSocketImpl.releaseFD
   150010868    0.20%        3  kotlin.coroutines.CombinedContext.get
   150008779    0.20%        3  io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
   150008399    0.20%        2  io.ktor.utils.io.ByteBufferChannel.getReadOp
   150003198    0.20%        2  java.nio.ByteBuffer.order
   140009078    0.18%        3  jdk.internal.misc.Unsafe.copyMemory
   133820224    0.17%        6  java.net.SocketInputStream.read
   130021603    0.17%        2  io.ktor.utils.io.ByteBufferChannel.getClosed
   130004291    0.17%        1  sun.nio.ch.SocketOptionRegistry$RegistryKey.equals
   120012349    0.16%        3  kotlinx.coroutines.JobSupport.get
   120008062    0.16%        1  io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
   115743900    0.15%        5  java.net.AbstractPlainSocketImpl.acquireFD
   110006851    0.14%        1  kotlinx.coroutines.JobSupport.getKey
   110004301    0.14%        1  io.ktor.utils.io.ByteBufferChannel.setTotalBytesWritten$ktor_io
   100012674    0.13%        1  kotlinx.coroutines.DispatchedTask.run
    90006122    0.12%        1  io.ktor.utils.io.internal.CancellableReusableContinuation.parent
    90005500    0.12%        1  io.ktor.utils.io.ByteBufferChannel.bytesWritten
    90005376    0.12%        1  io.ktor.utils.io.ByteBufferChannel.suspensionForSize
    73442919    0.10%        4  pthread_mutex_lock
    70008782    0.09%        2  io.ktor.utils.io.ByteBufferChannel.writeFully$suspendImpl
    70000037    0.09%        1  java.nio.Buffer.capacity
    60003705    0.08%        1  io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
    60003033    0.08%        2  sun.nio.ch.SocketDispatcher.write
    60002839    0.08%        1  io.ktor.network.selector.SelectorManagerSupport.<init>
    60000248    0.08%        2  java.nio.Buffer.checkBounds
    59998950    0.08%        2  java.nio.DirectByteBuffer.ix
    50009121    0.07%        1  io.ktor.utils.io.ByteBufferChannel.writeSuspend
    50006395    0.07%        1  java.lang.invoke.VarHandleGuards.guard_LILL_Z
    50005197    0.07%        1  io.ktor.network.selector.LockFreeMPSCQueueCore$Companion.access$updateTail
    50003911    0.07%        1  io.ktor.utils.io.ByteBufferChannel.access$getJoining$p
    40104904    0.05%        3  __futex_abstimed_wait_cancelable64
    40003777    0.05%        1  kotlin.jvm.internal.Intrinsics.checkNotNullParameter
    40003542    0.05%        1  io.ktor.utils.io.ByteBufferChannel.awaitAtLeast
    40003120    0.05%        2  io.ktor.utils.io.ByteBufferChannel.flushImpl
    40002736    0.05%        1  jdk.internal.misc.Unsafe.checkSize
    40001075    0.05%        1  io.ktor.network.selector.LockFreeMPSCQueueCore.<init>
    40000797    0.05%        1  io.ktor.utils.io.ByteBufferChannel.restoreStateAfterRead
    39998816    0.05%        1  java.nio.MappedByteBuffer.position
    30058167    0.04%        2  Interpreter
    30045492    0.04%        2  io.ktor.network.selector.ActorSelectorManager.process
    30026697    0.04%        1  kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
    30004599    0.04%        1  kotlinx.coroutines.JobSupport.tryMakeCompletingSlowPath
    30004347    0.04%        1  java.lang.Object.<init>
    30002703    0.04%        1  kotlin.coroutines.jvm.internal.ContinuationImpl.getContext
    30001533    0.04%        1  kotlin.ranges.RangesKt___RangesKt.coerceAtMost
    21027761    0.03%        2  pthread_mutex_unlock
    20230361    0.03%        1  java.nio.channels.spi.AbstractSelector.begin
    20133201    0.03%        1  sun.nio.ch.SelectorImpl.keys
    20008831    0.03%        1  __tls_get_addr
    20001525    0.03%        1  /usr/lib/jvm/java-11-openjdk-amd64/lib/libnio.so
    19998022    0.03%        2  java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
    10084244    0.01%        1  java.nio.channels.SocketChannel.validOps
    10082135    0.01%        1  io.ktor.network.selector.ActorSelectorManager.receiveOrNullSuspend
    10051542    0.01%        1  java.util.concurrent.atomic.AtomicReference.compareAndSet
    10043783    0.01%        1  sun.nio.ch.EPoll.allocatePollArray
    10043594    0.01%        1  sun.nio.ch.SelectorImpl.begin
    10042051    0.01%        1  java.nio.channels.spi.AbstractSelectionKey.isValid
    10002098    0.01%        1  java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.accessCheck
    10002008    0.01%        1  io.ktor.utils.io.ByteBufferChannel.restoreStateAfterWrite$ktor_io
    10001665    0.01%        1  io.ktor.network.selector.ActorSelectorManager.<init>
    10001485    0.01%        1  java.lang.AbstractStringBuilder.isLatin1
    10001233    0.01%        1  clock_gettime
    10001147    0.01%        1  java.lang.Object.equals
    10000964    0.01%        1  kotlinx.coroutines.internal.LockFreeLinkedListNode.isRemoved
    10000512    0.01%        1  kotlinx.coroutines.internal.LockFreeLinkedListHead.isRemoved
     9999994    0.01%        1  kotlin.coroutines.CoroutineContext$Element$DefaultImpls.get
     9999847    0.01%        1  __vdso_gettimeofday
     9999728    0.01%        1  io.ktor.network.sockets.SocketOptions$TCPClientSocketOptions.getSocketTimeout
     9999094    0.01%        1  java.nio.ByteBuffer.limit
     9998917    0.01%        1  io.ktor.utils.io.internal.ReadWriteBufferState$Initial.getReadingState$ktor_io
     9998243    0.01%        1  kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp.complete

