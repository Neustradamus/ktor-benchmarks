--- Execution profile ---
Total samples       : 21596
unknown_Java        : 1 (0.00%)

--- 86372757122 ns (36.96%), 8633 samples
  [ 0] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 29821191000 ns (12.76%), 2723 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 3] java.lang.Thread.run

--- 18940559299 ns (8.10%), 1763 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 3] java.lang.Thread.run

--- 17510619836 ns (7.49%), 1653 samples
  [ 0] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.getQueue
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 3] java.lang.Thread.run

--- 14223174843 ns (6.09%), 1219 samples
  [ 0] __GI___pthread_mutex_unlock
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 12730777649 ns (5.45%), 955 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 3] java.lang.Thread.run

--- 8140416327 ns (3.48%), 814 samples
  [ 0] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 4080128785 ns (1.75%), 408 samples
  [ 0] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 3980121982 ns (1.70%), 293 samples
  [ 0] __pthread_cond_signal
  [ 1] jdk.internal.misc.Unsafe.unpark
  [ 2] java.util.concurrent.locks.LockSupport.unpark
  [ 3] kotlinx.coroutines.EventLoopImplPlatform.unpark
  [ 4] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 5] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 6] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 7] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 8] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 9] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [10] io.ktor.utils.io.ByteBufferChannel.flush
  [11] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [15] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [16] java.lang.Thread.run

--- 3430089638 ns (1.47%), 249 samples
  [ 0] java.lang.invoke.VarHandleObjects$FieldInstanceReadWrite.compareAndSet
  [ 1] java.lang.invoke.VarHandleGuards.guard_LLL_Z
  [ 2] java.util.concurrent.ConcurrentLinkedQueue$Node.casItem
  [ 3] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 6] java.lang.Thread.run

--- 3420067468 ns (1.46%), 343 samples
  [ 0] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 3127118907 ns (1.34%), 259 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] java.nio.Buffer.position
  [ 2] java.nio.ByteBuffer.position
  [ 3] java.nio.MappedByteBuffer.position
  [ 4] java.nio.MappedByteBuffer.position
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [10] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 2920128871 ns (1.25%), 210 samples
  [ 0] read
  [ 1] sun.nio.ch.FileDispatcherImpl.read0
  [ 2] sun.nio.ch.FileDispatcherImpl.read
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [12] java.lang.Thread.run

--- 2632532195 ns (1.13%), 224 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 2540153436 ns (1.09%), 243 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 3] java.lang.Thread.run

--- 1990104803 ns (0.85%), 197 samples
  [ 0] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 2] java.lang.Thread.run

--- 990028609 ns (0.42%), 77 samples
  [ 0] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 2] java.lang.Thread.run

--- 889700030 ns (0.38%), 73 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 680026728 ns (0.29%), 54 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 3] java.lang.Thread.run

--- 460044402 ns (0.20%), 37 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] kotlinx.coroutines.EventLoopImplPlatform.unpark
  [ 5] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 6] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [10] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [11] io.ktor.utils.io.ByteBufferChannel.flush
  [12] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [16] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [17] java.lang.Thread.run

--- 440020557 ns (0.19%), 32 samples
  [ 0] __GI___pthread_mutex_lock
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] kotlinx.coroutines.EventLoopImplPlatform.unpark
  [ 5] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 6] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [10] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [11] io.ktor.utils.io.ByteBufferChannel.flush
  [12] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [16] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [17] java.lang.Thread.run

--- 413886237 ns (0.18%), 36 samples
  [ 0] kotlinx.coroutines.EventLoopImplBase.dequeue
  [ 1] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 2] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 3] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 4] kotlinx.coroutines.BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 7] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [12] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 403329658 ns (0.17%), 36 samples
  [ 0] __tls_get_addr
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 380007458 ns (0.16%), 27 samples
  [ 0] java.nio.MappedByteBuffer.limit
  [ 1] java.nio.Buffer.<init>
  [ 2] java.nio.ByteBuffer.<init>
  [ 3] java.nio.ByteBuffer.<init>
  [ 4] java.nio.MappedByteBuffer.<init>
  [ 5] java.nio.DirectByteBuffer.<init>
  [ 6] java.nio.DirectByteBuffer.duplicate
  [ 7] io.ktor.util.BufferViewJvmKt.read
  [ 8] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [12] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [13] java.lang.Thread.run

--- 370013763 ns (0.16%), 25 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] jdk.internal.misc.Unsafe.unpark
  [ 2] java.util.concurrent.locks.LockSupport.unpark
  [ 3] kotlinx.coroutines.EventLoopImplPlatform.unpark
  [ 4] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 5] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 6] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 7] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 8] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 9] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [10] io.ktor.utils.io.ByteBufferChannel.flush
  [11] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [15] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [16] java.lang.Thread.run

--- 282857564 ns (0.12%), 19 samples
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 1] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 2] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 3] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 4] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 9] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [13] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [17] kotlinx.coroutines.BuildersKt.runBlocking$default
  [18] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 270007349 ns (0.12%), 17 samples
  [ 0] __GI___pthread_mutex_unlock
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] kotlinx.coroutines.EventLoopImplPlatform.unpark
  [ 5] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 6] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [10] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [11] io.ktor.utils.io.ByteBufferChannel.flush
  [12] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [16] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [17] java.lang.Thread.run

--- 260258006 ns (0.11%), 20 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.valueCheck
  [ 1] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
  [ 2] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 3] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [13] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [17] kotlinx.coroutines.BuildersKt.runBlocking$default
  [18] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 250548558 ns (0.11%), 20 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 3] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 7] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [11] kotlinx.coroutines.BuildersKt.runBlocking$default
  [12] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [14] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 239501157 ns (0.10%), 16 samples
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 1] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 2] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 3] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 4] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 9] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [13] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [17] kotlinx.coroutines.BuildersKt.runBlocking$default
  [18] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 228776062 ns (0.10%), 18 samples
  [ 0] [vdso]
  [ 1] clock_gettime
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 228667964 ns (0.10%), 17 samples
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.releaseIntercepted
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 227681515 ns (0.10%), 19 samples
  [ 0] kotlinx.coroutines.EventLoop.processUnconfinedEvent
  [ 1] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 2] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 3] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 4] kotlinx.coroutines.BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 7] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [12] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 218897721 ns (0.09%), 18 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.carryIndex
  [ 1] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 217938502 ns (0.09%), 18 samples
  [ 0] pthread_cond_timedwait@@GLIBC_2.3.2
  [ 1] [unknown]
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 210005053 ns (0.09%), 10 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 1] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.flush
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 8] java.lang.Thread.run

--- 207422677 ns (0.09%), 18 samples
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 1] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 2] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 3] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 4] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 9] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [13] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [17] kotlinx.coroutines.BuildersKt.runBlocking$default
  [18] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 196440420 ns (0.08%), 18 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 2] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 6] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [10] kotlinx.coroutines.BuildersKt.runBlocking$default
  [11] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 190008597 ns (0.08%), 13 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.internal.RingBufferCapacity.completeWrite
  [ 2] io.ktor.utils.io.ByteBufferChannel.bytesWritten
  [ 3] io.ktor.utils.io.ByteBufferChannel.bytesWrittenFromSession$ktor_io
  [ 4] io.ktor.utils.io.internal.WriteSessionImpl.written
  [ 5] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [10] java.lang.Thread.run

--- 190006195 ns (0.08%), 14 samples
  [ 0] sun.nio.ch.FileDispatcherImpl.read0
  [ 1] sun.nio.ch.FileDispatcherImpl.read
  [ 2] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.FileChannelImpl.read
  [ 5] io.ktor.util.BufferViewJvmKt.read
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [11] java.lang.Thread.run

--- 190001066 ns (0.08%), 16 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.internal.RingBufferCapacity.tryWriteAtLeast
  [ 2] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 8] java.lang.Thread.run

--- 186808143 ns (0.08%), 16 samples
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.tryReadAtMost
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 176867031 ns (0.08%), 15 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 176167537 ns (0.08%), 15 samples
  [ 0] jdk.internal.misc.Unsafe.park
  [ 1] java.util.concurrent.locks.LockSupport.parkNanos
  [ 2] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 3] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 4] kotlinx.coroutines.BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 7] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [12] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 160002908 ns (0.07%), 13 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.valueCheck
  [ 1] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
  [ 2] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 3] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 4] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.flush
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [11] java.lang.Thread.run

--- 150004037 ns (0.06%), 13 samples
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.tryWriteAtLeast
  [ 1] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 7] java.lang.Thread.run

--- 150003359 ns (0.06%), 14 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 3] java.lang.Thread.run

--- 146197193 ns (0.06%), 11 samples
  [ 0] __pthread_enable_asynccancel
  [ 1] [unknown]
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 145525071 ns (0.06%), 12 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 140006227 ns (0.06%), 9 samples
  [ 0] sun.nio.ch.NativeThread.current
  [ 1] sun.nio.ch.NativeThreadSet.add
  [ 2] sun.nio.ch.FileChannelImpl.read
  [ 3] io.ktor.util.BufferViewJvmKt.read
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 9] java.lang.Thread.run

--- 140004089 ns (0.06%), 10 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 1] io.ktor.utils.io.ByteBufferChannel.flush
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 7] java.lang.Thread.run

--- 140002110 ns (0.06%), 10 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libc-2.33.so
  [ 1] sun.nio.ch.FileDispatcherImpl.read0
  [ 2] sun.nio.ch.FileDispatcherImpl.read
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [12] java.lang.Thread.run

--- 130002868 ns (0.06%), 9 samples
  [ 0] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 5] java.lang.Thread.run

--- 130000410 ns (0.06%), 9 samples
  [ 0] itable stub
  [ 1] kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 5] java.lang.Thread.run

--- 125739656 ns (0.05%), 10 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.parkNanos
  [ 3] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 8] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 124459534 ns (0.05%), 12 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 124351922 ns (0.05%), 10 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 1] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 124293096 ns (0.05%), 8 samples
  [ 0] kotlinx.coroutines.CoroutineDispatcher.get
  [ 1] kotlin.coroutines.CombinedContext.get
  [ 2] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 3] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 4] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 9] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [13] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [17] kotlinx.coroutines.BuildersKt.runBlocking$default
  [18] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 120004557 ns (0.05%), 4 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 1] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.flush
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 8] java.lang.Thread.run

--- 114473214 ns (0.05%), 11 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 3] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 7] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [11] kotlinx.coroutines.BuildersKt.runBlocking$default
  [12] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [14] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 110005820 ns (0.05%), 10 samples
  [ 0] kotlinx.coroutines.DispatchedTask.run
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 3] java.lang.Thread.run

--- 105794699 ns (0.05%), 8 samples
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.takeState$kotlinx_coroutines_core
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 3] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 8] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 103901435 ns (0.04%), 10 samples
  [ 0] __GI___pthread_mutex_trylock
  [ 1] [unknown]
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 93390026 ns (0.04%), 8 samples
  [ 0] itable stub
  [ 1] kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 93003003 ns (0.04%), 8 samples
  [ 0] kotlin.ResultKt.throwOnFailure
  [ 1] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 90006603 ns (0.04%), 9 samples
  [ 0] io.ktor.util.internal.LockFreeLinkedListNode.getNext
  [ 1] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 90004392 ns (0.04%), 6 samples
  [ 0] jdk.internal.misc.Unsafe.unpark
  [ 1] java.util.concurrent.locks.LockSupport.unpark
  [ 2] kotlinx.coroutines.EventLoopImplPlatform.unpark
  [ 3] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 4] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 5] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 6] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 7] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 8] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.flush
  [10] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [14] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [15] java.lang.Thread.run

--- 90002365 ns (0.04%), 7 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.getAndSet
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.access$flushImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 5] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 6] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 7] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 8] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [12] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [13] java.lang.Thread.run

--- 90002029 ns (0.04%), 5 samples
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.completeWrite
  [ 1] io.ktor.utils.io.ByteBufferChannel.bytesWritten
  [ 2] io.ktor.utils.io.ByteBufferChannel.bytesWrittenFromSession$ktor_io
  [ 3] io.ktor.utils.io.internal.WriteSessionImpl.written
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 9] java.lang.Thread.run

--- 83953391 ns (0.04%), 4 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getClosed
  [ 1] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 83445741 ns (0.04%), 7 samples
  [ 0] clock_gettime
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.parkNanos
  [ 3] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 8] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 83197700 ns (0.04%), 7 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 82818283 ns (0.04%), 8 samples
  [ 0] jdk.internal.misc.Unsafe.checkPointer
  [ 1] jdk.internal.misc.Unsafe.checkPrimitivePointer
  [ 2] jdk.internal.misc.Unsafe.copyMemoryChecks
  [ 3] jdk.internal.misc.Unsafe.copyMemory
  [ 4] java.nio.DirectByteBuffer.get
  [ 5] java.nio.HeapByteBuffer.put
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [10] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [11] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 82769015 ns (0.04%), 7 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 80002477 ns (0.03%), 5 samples
  [ 0] java.nio.Buffer.position
  [ 1] java.nio.ByteBuffer.position
  [ 2] java.nio.MappedByteBuffer.position
  [ 3] java.nio.MappedByteBuffer.position
  [ 4] java.nio.Buffer.<init>
  [ 5] java.nio.ByteBuffer.<init>
  [ 6] java.nio.ByteBuffer.<init>
  [ 7] java.nio.MappedByteBuffer.<init>
  [ 8] java.nio.DirectByteBuffer.<init>
  [ 9] java.nio.DirectByteBuffer.duplicate
  [10] io.ktor.util.BufferViewJvmKt.read
  [11] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [15] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [16] java.lang.Thread.run

--- 80002335 ns (0.03%), 7 samples
  [ 0] kotlinx.coroutines.Job$DefaultImpls.fold
  [ 1] kotlinx.coroutines.JobSupport.fold
  [ 2] kotlin.coroutines.CombinedContext.fold
  [ 3] kotlinx.coroutines.internal.ThreadContextKt.threadContextElements
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 5] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 6] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 7] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 8] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 9] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [10] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [11] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [12] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [16] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [17] java.lang.Thread.run

--- 74101304 ns (0.03%), 7 samples
  [ 0] __futex_abstimed_wait_cancelable64
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.parkNanos
  [ 3] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 8] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 73183080 ns (0.03%), 7 samples
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.getContext
  [ 1] kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 72988274 ns (0.03%), 4 samples
  [ 0] kotlinx.coroutines.JobSupport.getState$kotlinx_coroutines_core
  [ 1] kotlinx.coroutines.JobSupport.isCompleted
  [ 2] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 3] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 4] kotlinx.coroutines.BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 7] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [12] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 72847695 ns (0.03%), 6 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
  [ 1] kotlinx.coroutines.EventLoopImplBase.dequeue
  [ 2] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 3] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 8] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 70001605 ns (0.03%), 5 samples
  [ 0] Java_sun_nio_ch_FileDispatcherImpl_read0
  [ 1] sun.nio.ch.FileDispatcherImpl.read0
  [ 2] sun.nio.ch.FileDispatcherImpl.read
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [12] java.lang.Thread.run

--- 62599629 ns (0.03%), 6 samples
  [ 0] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 62460896 ns (0.03%), 5 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 62353935 ns (0.03%), 4 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 62187732 ns (0.03%), 6 samples
  [ 0] java.lang.Thread.interrupted
  [ 1] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 2] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 3] kotlinx.coroutines.BuildersKt.runBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 6] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 60001843 ns (0.03%), 2 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.getAndSet
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.flush
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 9] java.lang.Thread.run

--- 52368428 ns (0.02%), 4 samples
  [ 0] __pthread_mutex_unlock_usercnt
  [ 1] [unknown]
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 52141675 ns (0.02%), 4 samples
  [ 0] java.lang.Class.getComponentType
  [ 1] jdk.internal.misc.Unsafe.checkPrimitiveArray
  [ 2] jdk.internal.misc.Unsafe.checkPrimitivePointer
  [ 3] jdk.internal.misc.Unsafe.copyMemoryChecks
  [ 4] jdk.internal.misc.Unsafe.copyMemory
  [ 5] java.nio.DirectByteBuffer.get
  [ 6] java.nio.HeapByteBuffer.put
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [11] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [12] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 52118016 ns (0.02%), 4 samples
  [ 0] java.util.concurrent.locks.LockSupport.setBlocker
  [ 1] java.util.concurrent.locks.LockSupport.parkNanos
  [ 2] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 3] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 4] kotlinx.coroutines.BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 7] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [12] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 52069670 ns (0.02%), 5 samples
  [ 0] itable stub
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 3] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 8] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 52052488 ns (0.02%), 5 samples
  [ 0] java.nio.Buffer.position
  [ 1] java.nio.ByteBuffer.position
  [ 2] java.nio.HeapByteBuffer.put
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 51595660 ns (0.02%), 5 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 1] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 50004248 ns (0.02%), 4 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 3] java.lang.Thread.run

--- 50002080 ns (0.02%), 5 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.getAndSet
  [ 1] io.ktor.utils.io.internal.RingBufferCapacity.flush
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.flush
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 9] java.lang.Thread.run

--- 50001391 ns (0.02%), 3 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 1] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 7] java.lang.Thread.run

--- 50001118 ns (0.02%), 3 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.carryIndex
  [ 1] io.ktor.utils.io.ByteBufferChannel.bytesWritten
  [ 2] io.ktor.utils.io.ByteBufferChannel.bytesWrittenFromSession$ktor_io
  [ 3] io.ktor.utils.io.internal.WriteSessionImpl.written
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 9] java.lang.Thread.run

--- 50001077 ns (0.02%), 3 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.valueCheck
  [ 1] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
  [ 2] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 3] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 4] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.flush
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [11] java.lang.Thread.run

--- 50000739 ns (0.02%), 4 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.accessCheck
  [ 1] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.getAndSet
  [ 2] io.ktor.utils.io.internal.RingBufferCapacity.flush
  [ 3] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.flush
  [ 5] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [10] java.lang.Thread.run

--- 50000303 ns (0.02%), 4 samples
  [ 0] itable stub
  [ 1] kotlinx.coroutines.internal.DispatchedContinuation.takeState$kotlinx_coroutines_core
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 5] java.lang.Thread.run

--- 50000194 ns (0.02%), 2 samples
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.takeState$kotlinx_coroutines_core
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 4] java.lang.Thread.run

--- 42130149 ns (0.02%), 4 samples
  [ 0] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 3] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 8] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 42023386 ns (0.02%), 4 samples
  [ 0] kotlinx.coroutines.internal.ThreadContextKt$countAll$1.invoke
  [ 1] kotlin.coroutines.CombinedContext.fold
  [ 2] kotlinx.coroutines.internal.ThreadContextKt.threadContextElements
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 4] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 5] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 6] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 7] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [12] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 41832935 ns (0.02%), 3 samples
  [ 0] kotlin.coroutines.CombinedContext.get
  [ 1] io.ktor.utils.io.internal.CancellableReusableContinuation.parent
  [ 2] io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 41779488 ns (0.02%), 4 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 2] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 6] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [10] kotlinx.coroutines.BuildersKt.runBlocking$default
  [11] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 41726063 ns (0.02%), 4 samples
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.completeRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 41564561 ns (0.02%), 2 samples
  [ 0] java.util.concurrent.locks.LockSupport.parkNanos
  [ 1] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 2] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 3] kotlinx.coroutines.BuildersKt.runBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 6] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 40002953 ns (0.02%), 4 samples
  [ 0] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 4] java.lang.Thread.run

--- 40000564 ns (0.02%), 4 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getWriteByteOrder
  [ 1] io.ktor.utils.io.ByteBufferChannel.prepareWriteBuffer$ktor_io
  [ 2] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 8] java.lang.Thread.run

--- 39999829 ns (0.02%), 4 samples
  [ 0] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 1] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 6] java.lang.Thread.run

--- 39999556 ns (0.02%), 2 samples
  [ 0] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 5] java.lang.Thread.run

--- 32067339 ns (0.01%), 2 samples
  [ 0] java.nio.ByteBuffer.limit
  [ 1] java.nio.MappedByteBuffer.limit
  [ 2] java.nio.MappedByteBuffer.limit
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 31949180 ns (0.01%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 1] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 31519665 ns (0.01%), 2 samples
  [ 0] java.nio.Buffer.limit
  [ 1] java.nio.ByteBuffer.limit
  [ 2] java.nio.MappedByteBuffer.limit
  [ 3] java.nio.MappedByteBuffer.limit
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [13] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [17] kotlinx.coroutines.BuildersKt.runBlocking$default
  [18] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 31510516 ns (0.01%), 2 samples
  [ 0] kotlin.jvm.internal.Intrinsics.checkNotNullParameter
  [ 1] kotlin.coroutines.CombinedContext.fold
  [ 2] kotlinx.coroutines.internal.ThreadContextKt.threadContextElements
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 4] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 5] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 6] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 7] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [12] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 31480277 ns (0.01%), 3 samples
  [ 0] java.nio.DirectByteBuffer.get
  [ 1] java.nio.HeapByteBuffer.put
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 31471456 ns (0.01%), 3 samples
  [ 0] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 3] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 8] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 31415833 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 31397049 ns (0.01%), 3 samples
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 31305205 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.tryReadAtMost
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 31271796 ns (0.01%), 2 samples
  [ 0] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 1] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 9] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [13] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [17] kotlinx.coroutines.BuildersKt.runBlocking$default
  [18] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 31255922 ns (0.01%), 2 samples
  [ 0] kotlin.coroutines.CombinedContext.get
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.releaseIntercepted
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 31218862 ns (0.01%), 3 samples
  [ 0] java.nio.Buffer.limit
  [ 1] java.nio.ByteBuffer.limit
  [ 2] java.nio.MappedByteBuffer.limit
  [ 3] java.nio.MappedByteBuffer.limit
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [13] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [17] kotlinx.coroutines.BuildersKt.runBlocking$default
  [18] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 31160601 ns (0.01%), 3 samples
  [ 0] kotlinx.coroutines.scheduling.Task.<init>
  [ 1] kotlinx.coroutines.scheduling.Task.<init>
  [ 2] kotlinx.coroutines.DispatchedTask.<init>
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 4] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 5] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 6] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 7] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [12] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 31150049 ns (0.01%), 2 samples
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 1] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 2] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 3] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 4] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 9] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [13] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [17] kotlinx.coroutines.BuildersKt.runBlocking$default
  [18] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 31115915 ns (0.01%), 2 samples
  [ 0] kotlin.jvm.internal.Intrinsics.checkNotNull
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.getContext
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.getContext
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 4] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 5] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 6] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 7] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [12] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [16] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt.runBlocking
  [19] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [20] kotlinx.coroutines.BuildersKt.runBlocking$default
  [21] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [23] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [25] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 31052773 ns (0.01%), 3 samples
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.awaitReusability
  [ 1] kotlinx.coroutines.internal.DispatchedContinuation.release
  [ 2] kotlinx.coroutines.CoroutineDispatcher.releaseInterceptedContinuation
  [ 3] kotlin.coroutines.jvm.internal.ContinuationImpl.releaseIntercepted
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 7] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [11] kotlinx.coroutines.BuildersKt.runBlocking$default
  [12] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [14] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 31031616 ns (0.01%), 3 samples
  [ 0] java.nio.ByteBuffer.position
  [ 1] java.nio.MappedByteBuffer.position
  [ 2] java.nio.MappedByteBuffer.position
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 31013913 ns (0.01%), 2 samples
  [ 0] java.nio.Buffer.limit
  [ 1] java.nio.ByteBuffer.limit
  [ 2] java.nio.MappedByteBuffer.limit
  [ 3] java.nio.MappedByteBuffer.limit
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [13] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [17] kotlinx.coroutines.BuildersKt.runBlocking$default
  [18] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 31007228 ns (0.01%), 3 samples
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.<init>
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.<init>
  [ 2] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.<init>
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 31002756 ns (0.01%), 3 samples
  [ 0] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 30006906 ns (0.01%), 3 samples
  [ 0] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 30003334 ns (0.01%), 3 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.getAndSet
  [ 1] io.ktor.utils.io.internal.RingBufferCapacity.flush
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.access$flushImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 5] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 6] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 7] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 8] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [12] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [13] java.lang.Thread.run

--- 30002025 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 1] io.ktor.utils.io.ByteBufferChannel.flush
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 7] java.lang.Thread.run

--- 30001721 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.prepareBuffer
  [ 1] io.ktor.utils.io.ByteBufferChannel.prepareWriteBuffer$ktor_io
  [ 2] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 8] java.lang.Thread.run

--- 30001526 ns (0.01%), 3 samples
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.tryWriteAtLeast
  [ 1] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 7] java.lang.Thread.run

--- 30001367 ns (0.01%), 3 samples
  [ 0] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 5] java.lang.Thread.run

--- 30001243 ns (0.01%), 1 sample
  [ 0] java.nio.Buffer.<init>
  [ 1] java.nio.ByteBuffer.<init>
  [ 2] java.nio.ByteBuffer.<init>
  [ 3] java.nio.MappedByteBuffer.<init>
  [ 4] java.nio.DirectByteBuffer.<init>
  [ 5] java.nio.DirectByteBuffer.duplicate
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [12] java.lang.Thread.run

--- 30000900 ns (0.01%), 2 samples
  [ 0] __tls_get_addr
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] kotlinx.coroutines.EventLoopImplPlatform.unpark
  [ 5] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 6] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [10] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [11] io.ktor.utils.io.ByteBufferChannel.flush
  [12] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [16] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [17] java.lang.Thread.run

--- 30000857 ns (0.01%), 3 samples
  [ 0] java.nio.MappedByteBuffer.<init>
  [ 1] java.nio.DirectByteBuffer.<init>
  [ 2] java.nio.DirectByteBuffer.duplicate
  [ 3] io.ktor.util.BufferViewJvmKt.read
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 9] java.lang.Thread.run

--- 30000791 ns (0.01%), 1 sample
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 3] java.lang.Thread.run

--- 30000721 ns (0.01%), 3 samples
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.flush
  [ 1] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.flush
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 8] java.lang.Thread.run

--- 30000192 ns (0.01%), 2 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 2] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 3] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.flush
  [ 5] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [10] java.lang.Thread.run

--- 29999918 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.internal.WriteSessionImpl.written
  [ 1] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 6] java.lang.Thread.run

--- 29999834 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.prepareBuffer
  [ 1] io.ktor.utils.io.ByteBufferChannel.prepareWriteBuffer$ktor_io
  [ 2] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 8] java.lang.Thread.run

--- 29999623 ns (0.01%), 3 samples
  [ 0] pthread_mutex_unlock
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] kotlinx.coroutines.EventLoopImplPlatform.unpark
  [ 5] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 6] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 7] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 8] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 9] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [10] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [11] io.ktor.utils.io.ByteBufferChannel.flush
  [12] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [16] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [17] java.lang.Thread.run

--- 29998726 ns (0.01%), 2 samples
  [ 0] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 5] java.lang.Thread.run

--- 22231259 ns (0.01%), 1 sample
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 1] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 2] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 3] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 4] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 21299754 ns (0.01%), 1 sample
  [ 0] kotlin.coroutines.CombinedContext.get
  [ 1] io.ktor.utils.io.internal.CancellableReusableContinuation.parent
  [ 2] io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 21101179 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 21020698 ns (0.01%), 1 sample
  [ 0] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 20938438 ns (0.01%), 2 samples
  [ 0] vtable stub
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 20936689 ns (0.01%), 2 samples
  [ 0] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 20923361 ns (0.01%), 2 samples
  [ 0] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 1] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 2] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 3] kotlinx.coroutines.BuildersKt.runBlocking
  [ 4] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 5] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 6] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 20897775 ns (0.01%), 2 samples
  [ 0] kotlin.coroutines.CombinedContext.get
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.releaseIntercepted
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 5] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 6] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt.runBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking$default
  [10] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [12] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [14] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 20887589 ns (0.01%), 2 samples
  [ 0] kotlin.coroutines.ContinuationInterceptor$DefaultImpls.get
  [ 1] kotlinx.coroutines.CoroutineDispatcher.get
  [ 2] kotlin.coroutines.CombinedContext.get
  [ 3] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 4] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 5] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [10] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 20860484 ns (0.01%), 2 samples
  [ 0] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 20732188 ns (0.01%), 2 samples
  [ 0] jdk.internal.misc.Unsafe.checkPrimitiveArray
  [ 1] jdk.internal.misc.Unsafe.checkPrimitivePointer
  [ 2] jdk.internal.misc.Unsafe.copyMemoryChecks
  [ 3] jdk.internal.misc.Unsafe.copyMemory
  [ 4] java.nio.DirectByteBuffer.get
  [ 5] java.nio.HeapByteBuffer.put
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [10] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [11] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 20728300 ns (0.01%), 2 samples
  [ 0] java.nio.HeapByteBuffer.put
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 20719787 ns (0.01%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 1] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 20709162 ns (0.01%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 1] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 2] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 3] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 4] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 5] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [10] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 20690756 ns (0.01%), 2 samples
  [ 0] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt.getCOROUTINE_SUSPENDED
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 4] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 8] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 9] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [12] kotlinx.coroutines.BuildersKt.runBlocking$default
  [13] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [14] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 20690599 ns (0.01%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$getState
  [ 2] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 20690461 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 1] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 20689862 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 9] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [11] kotlinx.coroutines.BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [13] kotlinx.coroutines.BuildersKt.runBlocking$default
  [14] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [15] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [17] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 20688209 ns (0.01%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getReadOp
  [ 1] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [11] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [12] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [15] kotlinx.coroutines.BuildersKt.runBlocking$default
  [16] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 20672378 ns (0.01%), 1 sample
  [ 0] kotlin.jvm.internal.Intrinsics.checkNotNull
  [ 1] kotlinx.coroutines.internal.ThreadContextKt.threadContextElements
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 3] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 4] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 5] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 6] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [11] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 20657963 ns (0.01%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 2] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 7] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 8] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 9] kotlinx.coroutines.BuildersKt.runBlocking
  [10] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [11] kotlinx.coroutines.BuildersKt.runBlocking$default
  [12] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [13] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [14] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 20648968 ns (0.01%), 1 sample
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] JVM_FillInStackTrace
  [ 6] Java_java_lang_Throwable_fillInStackTrace
  [ 7] java.lang.Throwable.fillInStackTrace
  [ 8] java.lang.Throwable.fillInStackTrace
  [ 9] java.lang.Throwable.<init>
  [10] java.lang.Exception.<init>
  [11] java.lang.RuntimeException.<init>
  [12] java.lang.IllegalStateException.<init>
  [13] java.util.concurrent.CancellationException.<init>
  [14] io.ktor.utils.io.ByteBufferChannel.cancel
  [15] io.ktor.utils.io.ByteReadChannelKt.cancel
  [16] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [17] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [18] kotlinx.coroutines.DispatchedTask.run
  [19] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [20] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [21] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [22] kotlinx.coroutines.BuildersKt.runBlocking
  [23] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [24] kotlinx.coroutines.BuildersKt.runBlocking$default
  [25] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [26] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [27] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [28] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [29] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [30] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [31] java.lang.reflect.Method.invoke
  [32] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [33] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.Executors$RunnableAdapter.call
  [36] java.util.concurrent.FutureTask.run
  [37] java.util.concurrent.ThreadPoolExecutor.runWorker
  [38] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [39] java.lang.Thread.run

--- 20593258 ns (0.01%), 2 samples
  [ 0] pthread_cond_timedwait
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 20586816 ns (0.01%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 1] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [10] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [11] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [12] kotlinx.coroutines.BuildersKt.runBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [14] kotlinx.coroutines.BuildersKt.runBlocking$default
  [15] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [16] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [17] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [18] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [19] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 20056583 ns (0.01%), 2 samples
  [ 0] __tls_get_addr
  [ 1] jdk.internal.misc.Unsafe.unpark
  [ 2] java.util.concurrent.locks.LockSupport.unpark
  [ 3] kotlinx.coroutines.EventLoopImplPlatform.unpark
  [ 4] kotlinx.coroutines.EventLoopImplBase.enqueue
  [ 5] kotlinx.coroutines.EventLoopImplBase.dispatch
  [ 6] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 7] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 8] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 9] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [10] io.ktor.utils.io.ByteBufferChannel.flush
  [11] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [15] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [16] java.lang.Thread.run

--- 20002553 ns (0.01%), 2 samples
  [ 0] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 4] java.lang.Thread.run

--- 20001841 ns (0.01%), 2 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/libnio.so
  [ 1] sun.nio.ch.FileDispatcherImpl.read0
  [ 2] sun.nio.ch.FileDispatcherImpl.read
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [12] java.lang.Thread.run

--- 20001350 ns (0.01%), 2 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.getAndSet
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.flush
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 9] java.lang.Thread.run

--- 20001223 ns (0.01%), 1 sample
  [ 0] java.lang.Object.<init>
  [ 1] java.nio.Buffer.<init>
  [ 2] java.nio.ByteBuffer.<init>
  [ 3] java.nio.ByteBuffer.<init>
  [ 4] java.nio.MappedByteBuffer.<init>
  [ 5] java.nio.DirectByteBuffer.<init>
  [ 6] java.nio.DirectByteBuffer.duplicate
  [ 7] io.ktor.util.BufferViewJvmKt.read
  [ 8] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [12] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [13] java.lang.Thread.run

--- 20001143 ns (0.01%), 1 sample
  [ 0] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 5] java.lang.Thread.run

--- 20001025 ns (0.01%), 2 samples
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.getContext
  [ 1] kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 5] java.lang.Thread.run

--- 20000977 ns (0.01%), 2 samples
  [ 0] kotlin.coroutines.ContinuationInterceptor$DefaultImpls.get
  [ 1] kotlinx.coroutines.CoroutineDispatcher.get
  [ 2] kotlin.coroutines.CombinedContext.get
  [ 3] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 4] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 5] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 6] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 7] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 8] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 9] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [13] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [14] java.lang.Thread.run

--- 20000894 ns (0.01%), 1 sample
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 1] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 2] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 5] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [11] java.lang.Thread.run

--- 20000819 ns (0.01%), 1 sample
  [ 0] kotlinx.coroutines.internal.LockFreeLinkedListNode.addOneIfEmpty
  [ 1] kotlinx.coroutines.JobSupport.promoteSingleToNodeList
  [ 2] kotlinx.coroutines.JobSupport.invokeOnCompletion
  [ 3] kotlinx.coroutines.Job$DefaultImpls.invokeOnCompletion$default
  [ 4] io.ktor.utils.io.ByteBufferChannel.attachJob
  [ 5] io.ktor.utils.io.CoroutinesKt$launchChannel$job$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [10] java.lang.Thread.run

--- 20000702 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.flush
  [ 1] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.flush
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 8] java.lang.Thread.run

--- 20000670 ns (0.01%), 1 sample
  [ 0] kotlinx.coroutines.Job$DefaultImpls.get
  [ 1] kotlinx.coroutines.JobSupport.get
  [ 2] kotlin.coroutines.CombinedContext.get
  [ 3] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 4] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 5] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 6] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 7] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 8] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 9] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [13] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [14] java.lang.Thread.run

--- 20000661 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.internal.WriteSessionImpl.written
  [ 1] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 6] java.lang.Thread.run

--- 20000598 ns (0.01%), 1 sample
  [ 0] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 2] java.lang.Thread.run

--- 20000593 ns (0.01%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeSuspendPredicate
  [ 2] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 3] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 9] java.lang.Thread.run

--- 20000441 ns (0.01%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.flush
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 8] java.lang.Thread.run

--- 20000440 ns (0.01%), 1 sample
  [ 0] io.ktor.util.BufferViewJvmKt.read
  [ 1] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 6] java.lang.Thread.run

--- 20000371 ns (0.01%), 2 samples
  [ 0] java.nio.DirectByteBuffer.duplicate
  [ 1] io.ktor.util.BufferViewJvmKt.read
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 7] java.lang.Thread.run

--- 20000263 ns (0.01%), 2 samples
  [ 0] java.nio.channels.spi.AbstractInterruptibleChannel.begin
  [ 1] sun.nio.ch.FileChannelImpl.beginBlocking
  [ 2] sun.nio.ch.FileChannelImpl.read
  [ 3] io.ktor.util.BufferViewJvmKt.read
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 9] java.lang.Thread.run

--- 20000172 ns (0.01%), 1 sample
  [ 0] kotlinx.coroutines.DispatchedTask.run
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 3] java.lang.Thread.run

--- 20000088 ns (0.01%), 1 sample
  [ 0] java.nio.DirectByteBuffer.duplicate
  [ 1] io.ktor.util.BufferViewJvmKt.read
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 7] java.lang.Thread.run

--- 20000045 ns (0.01%), 1 sample
  [ 0] sun.nio.ch.NativeThreadSet.add
  [ 1] sun.nio.ch.FileChannelImpl.read
  [ 2] io.ktor.util.BufferViewJvmKt.read
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 8] java.lang.Thread.run

--- 19999202 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 1] io.ktor.utils.io.internal.RingBufferCapacity.tryWriteAtLeast
  [ 2] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.923625673.run
  [ 8] java.lang.Thread.run

--- 10955398 ns (0.00%), 1 sample
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so

--- 10767133 ns (0.00%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$getState
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [10] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [14] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [16] kotlinx.coroutines.BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [18] kotlinx.coroutines.BuildersKt.runBlocking$default
  [19] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [20] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [22] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 10630448 ns (0.00%), 1 sample
  [ 0] java.lang.Integer.valueOf
  [ 1] kotlinx.coroutines.internal.ThreadContextKt.threadContextElements
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 3] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 4] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 5] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 6] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [11] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 10597713 ns (0.00%), 1 sample
  [ 0] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [ 4] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [ 5] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [ 6] kotlinx.coroutines.BuildersKt.runBlocking
  [ 7] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [ 8] kotlinx.coroutines.BuildersKt.runBlocking$default
  [ 9] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 10582725 ns (0.00%), 1 sample
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so

--- 10579533 ns (0.00%), 1 sample
  [ 0] kotlin.coroutines.CombinedContext.fold
  [ 1] kotlinx.coroutines.internal.ThreadContextKt.threadContextElements
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 3] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 4] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 5] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 6] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [11] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [15] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [16] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [17] kotlinx.coroutines.BuildersKt.runBlocking
  [18] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [19] kotlinx.coroutines.BuildersKt.runBlocking$default
  [20] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [21] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [22] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [23] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [24] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 10578042 ns (0.00%), 1 sample
  [ 0] kotlin.coroutines.CombinedContext.get
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 2] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] kotlinx.coroutines.EventLoopImplBase.processNextEvent
  [12] kotlinx.coroutines.BlockingCoroutine.joinBlocking
  [13] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking
  [14] kotlinx.coroutines.BuildersKt.runBlocking
  [15] kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default
  [16] kotlinx.coroutines.BuildersKt.runBlocking$default
  [17] io.ktor.benchmarks.FileBenchmarks.testKtorFileReadInHotDispatcher
  [18] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_avgt_jmhStub
  [19] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testKtorFileReadInHotDispatcher_jmhTest.testKtorFileReadInHotDispatcher_AverageTime
  [20] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [21] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

          ns  percent  samples  top
  ----------  -------  -------  ---
102043376608   43.66%    10201  io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run
 64942716510   27.79%     5757  java.util.concurrent.ConcurrentLinkedQueue.poll
 17510619836    7.49%     1653  io.ktor.benchmarks.dispatchers.HotLoopDispatcher.getQueue
 14493182192    6.20%     1236  __GI___pthread_mutex_unlock
  4600822091    1.97%      380  /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  3980121982    1.70%      293  __pthread_cond_signal
  3430089638    1.47%      249  java.lang.invoke.VarHandleObjects$FieldInstanceReadWrite.compareAndSet
  3127118907    1.34%      259  jlong_disjoint_arraycopy
  3000134010    1.28%      275  io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  2920128871    1.25%      210  read
   783162706    0.34%       56  kotlinx.coroutines.internal.DispatchedContinuation.<init>
   645533805    0.28%       55  io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
   529475665    0.23%       44  io.ktor.utils.io.ByteBufferChannel.setupStateForRead
   470261991    0.20%       36  java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.valueCheck
   453387141    0.19%       40  __tls_get_addr
   440020557    0.19%       32  __GI___pthread_mutex_lock
   413886237    0.18%       36  kotlinx.coroutines.EventLoopImplBase.dequeue
   380009663    0.16%       29  java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet
   380007458    0.16%       27  java.nio.MappedByteBuffer.limit
   340011763    0.15%       15  io.ktor.utils.io.ByteBufferChannel.resumeReadOp
   325460409    0.14%       26  itable stub
   278899108    0.12%       22  io.ktor.utils.io.ByteBufferChannel.carryIndex
   260003985    0.11%       18  io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
   238997364    0.10%       18  kotlin.coroutines.jvm.internal.ContinuationImpl.releaseIntercepted
   228776062    0.10%       18  [vdso]
   228233884    0.10%       19  pthread_cond_timedwait@@GLIBC_2.3.2
   227681515    0.10%       19  kotlinx.coroutines.EventLoop.processUnconfinedEvent
   227307421    0.10%       20  java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
   218113348    0.09%       18  io.ktor.utils.io.internal.RingBufferCapacity.tryReadAtMost
   210005339    0.09%       16  io.ktor.utils.io.ByteBufferChannel.flushImpl
   200006327    0.09%       15  sun.nio.ch.FileDispatcherImpl.read0
   180005563    0.08%       16  io.ktor.utils.io.internal.RingBufferCapacity.tryWriteAtLeast
   177462101    0.08%       16  io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHotDispatcher$1.invokeSuspend
   176167537    0.08%       15  jdk.internal.misc.Unsafe.park
   174846062    0.07%       17  kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
   171412827    0.07%       15  kotlinx.coroutines.DispatchedTask.run
   170005558    0.07%       11  java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.getAndSet
   166269184    0.07%       14  io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
   166121499    0.07%       11  kotlinx.coroutines.internal.DispatchedContinuation.takeState$kotlinx_coroutines_core
   156381307    0.07%       13  io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
   155009054    0.07%       12  io.ktor.utils.io.ByteBufferChannel.suspensionForSize
   152724129    0.07%       12  java.nio.Buffer.position
   150472150    0.06%       11  /usr/lib/x86_64-linux-gnu/libc-2.33.so
   146197193    0.06%       11  __pthread_enable_asynccancel
   145055731    0.06%       10  kotlinx.coroutines.CoroutineDispatcher.get
   140006227    0.06%        9  sun.nio.ch.NativeThread.current
   125864428    0.05%        9  kotlin.coroutines.CombinedContext.get
   114088070    0.05%        9  java.nio.Buffer.limit
   113711884    0.05%       10  kotlin.ResultKt.throwOnFailure
   113183376    0.05%       11  kotlin.coroutines.jvm.internal.ContinuationImpl.getContext
   103901435    0.04%       10  __GI___pthread_mutex_trylock
   102812940    0.04%        7  io.ktor.utils.io.ByteBufferChannel.getState
   100747373    0.04%        8  io.ktor.utils.io.ByteBufferChannel.prepareBuffer
    93953676    0.04%        5  io.ktor.utils.io.ByteBufferChannel.getClosed
    90006603    0.04%        9  io.ktor.util.internal.LockFreeLinkedListNode.getNext
    90004392    0.04%        6  jdk.internal.misc.Unsafe.unpark
    90002029    0.04%        5  io.ktor.utils.io.internal.RingBufferCapacity.completeWrite
    83445741    0.04%        7  clock_gettime
    83311024    0.04%        5  kotlinx.coroutines.JobSupport.getState$kotlinx_coroutines_core
    82818283    0.04%        8  jdk.internal.misc.Unsafe.checkPointer
    80005414    0.03%        8  java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.getAndSet
    80002335    0.03%        7  kotlinx.coroutines.Job$DefaultImpls.fold
    74101304    0.03%        7  __futex_abstimed_wait_cancelable64
    70352595    0.03%        6  java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.accessCheck
    70001605    0.03%        5  Java_sun_nio_ch_FileDispatcherImpl_read0
    62460896    0.03%        5  io.ktor.utils.io.ByteBufferChannel.bytesRead
    62187732    0.03%        6  java.lang.Thread.interrupted
    62140868    0.03%        4  kotlin.jvm.internal.Intrinsics.checkNotNull
    52368428    0.02%        4  __pthread_mutex_unlock_usercnt
    52347812    0.02%        5  kotlinx.coroutines.internal.ThreadContextKt$countAll$1.invoke
    52141675    0.02%        4  java.lang.Class.getComponentType
    52118016    0.02%        4  java.util.concurrent.locks.LockSupport.setBlocker
    52068413    0.02%        5  io.ktor.utils.io.internal.RingBufferCapacity.completeRead
    50001423    0.02%        5  io.ktor.utils.io.internal.RingBufferCapacity.flush
    50001391    0.02%        3  io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
    50000579    0.02%        4  io.ktor.utils.io.internal.WriteSessionImpl.written
    49999763    0.02%        4  java.nio.DirectByteBuffer.duplicate
    41564561    0.02%        2  java.util.concurrent.locks.LockSupport.parkNanos
    41362340    0.02%        4  java.nio.ByteBuffer.position
    40888566    0.02%        4  kotlin.coroutines.ContinuationInterceptor$DefaultImpls.get
    40000564    0.02%        4  io.ktor.utils.io.ByteBufferChannel.getWriteByteOrder
    40000379    0.02%        4  java.nio.MappedByteBuffer.<init>
    39999829    0.02%        4  io.ktor.utils.io.internal.WriteSessionImpl.request
    32067339    0.01%        2  java.nio.ByteBuffer.limit
    31510516    0.01%        2  kotlin.jvm.internal.Intrinsics.checkNotNullParameter
    31480277    0.01%        3  java.nio.DirectByteBuffer.get
    31397049    0.01%        3  kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
    31271796    0.01%        2  kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
    31253041    0.01%        2  io.ktor.utils.io.ByteBufferChannel.getReadOp
    31220802    0.01%        3  io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
    31160601    0.01%        3  kotlinx.coroutines.scheduling.Task.<init>
    31071799    0.01%        3  java.nio.HeapByteBuffer.put
    31052773    0.01%        3  kotlinx.coroutines.internal.DispatchedContinuation.awaitReusability
    31007228    0.01%        3  kotlin.coroutines.jvm.internal.ContinuationImpl.<init>
    30939278    0.01%        3  vtable stub
    30325854    0.01%        2  kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
    30001794    0.01%        3  /usr/lib/jvm/java-11-openjdk-amd64/lib/libnio.so
    30001682    0.01%        3  java.nio.channels.spi.AbstractInterruptibleChannel.begin
    30001243    0.01%        1  java.nio.Buffer.<init>
    29999828    0.01%        2  sun.nio.ch.NativeThreadSet.add
    29999623    0.01%        3  pthread_mutex_unlock
    21011851    0.01%        2  io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
    20997081    0.01%        2  kotlin.coroutines.CombinedContext.fold
    20923361    0.01%        2  kotlinx.coroutines.EventLoopImplBase.processNextEvent
    20732188    0.01%        2  jdk.internal.misc.Unsafe.checkPrimitiveArray
    20690756    0.01%        2  kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt.getCOROUTINE_SUSPENDED
    20657963    0.01%        1  io.ktor.utils.io.ByteBufferChannel.readSuspend
    20593258    0.01%        2  pthread_cond_timedwait
    20278800    0.01%        2  __tls_get_addr@plt
    20001611    0.01%        2  java.nio.DirectByteBuffer.<init>
    20001223    0.01%        1  java.lang.Object.<init>
    20000819    0.01%        1  kotlinx.coroutines.internal.LockFreeLinkedListNode.addOneIfEmpty
    20000670    0.01%        1  kotlinx.coroutines.Job$DefaultImpls.get
    20000440    0.01%        1  io.ktor.util.BufferViewJvmKt.read
    20000307    0.01%        2  java.nio.channels.spi.AbstractInterruptibleChannel.blockedOn
    10630448    0.00%        1  java.lang.Integer.valueOf
    10564832    0.00%        1  java.lang.Integer.intValue
    10563810    0.00%        1  Interpreter
    10556101    0.00%        1  io.ktor.utils.io.ByteBufferChannel.isClosedForRead
    10552161    0.00%        1  kotlinx.coroutines.EventLoopImplBase.rescheduleAllDelayed
    10516036    0.00%        1  kotlinx.coroutines.BlockingCoroutine.joinBlocking
    10411815    0.00%        1  io.ktor.utils.io.internal.CancellableReusableContinuation$JobRelation.<init>
    10409559    0.00%        1  kotlinx.coroutines.internal.ThreadContextKt.threadContextElements
    10372228    0.00%        1  kotlin.coroutines.jvm.internal.Boxing.boxInt
    10341334    0.00%        1  kotlin.coroutines.CoroutineContext$Element$DefaultImpls.get
    10337020    0.00%        1  io.ktor.utils.io.core.ByteOrder.getNioOrder
    10327041    0.00%        1  __vdso_clock_gettime
    10303615    0.00%        1  kotlinx.coroutines.JobSupport.isCompleted
    10002180    0.00%        1  java.io.RandomAccessFile.getChannel
    10001905    0.00%        1  sun.nio.ch.FileDispatcherImpl.read
    10001286    0.00%        1  io.ktor.utils.io.core.Buffer.getStartGap
    10001249    0.00%        1  pthread_mutex_unlock@plt
    10000734    0.00%        1  io.ktor.util.cio.FileChannelsKt$readChannel$1.invokeSuspend
    10000707    0.00%        1  java.util.concurrent.ConcurrentLinkedQueue.updateHead
    10000301    0.00%        1  java.nio.channels.spi.AbstractInterruptibleChannel$1.<init>
    10000105    0.00%        1  java.nio.ByteBuffer.<init>
     9999902    0.00%        1  java.lang.Thread.blockedOn
     9999865    0.00%        1  kotlin.Result.exceptionOrNull-impl
     9999764    0.00%        1  io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
     9999271    0.00%        1  kotlinx.coroutines.DispatchedTask.getExceptionalResult$kotlinx_coroutines_core

