--- Execution profile ---
Total samples       : 2038

--- 30060976003 ns (60.16%), 1222 samples
  [ 0] read
  [ 1] sun.nio.ch.FileDispatcherImpl.read0
  [ 2] sun.nio.ch.FileDispatcherImpl.read
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 5510161832 ns (11.03%), 214 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] java.nio.Buffer.position
  [ 2] java.nio.ByteBuffer.position
  [ 3] java.nio.MappedByteBuffer.position
  [ 4] java.nio.DirectByteBuffer.get
  [ 5] java.nio.HeapByteBuffer.put
  [ 6] sun.nio.ch.IOUtil.read
  [ 7] sun.nio.ch.FileChannelImpl.read
  [ 8] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 1660043550 ns (3.32%), 69 samples
  [ 0] sun.nio.ch.IOUtil.read
  [ 1] sun.nio.ch.FileChannelImpl.read
  [ 2] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 3] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 4] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 5] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 6] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 7] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 8] java.lang.reflect.Method.invoke
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.Executors$RunnableAdapter.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.ThreadPoolExecutor.runWorker
  [15] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [16] java.lang.Thread.run

--- 1570057415 ns (3.14%), 56 samples
  [ 0] sun.nio.ch.FileDispatcherImpl.read0
  [ 1] sun.nio.ch.FileDispatcherImpl.read
  [ 2] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.FileChannelImpl.read
  [ 5] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 1450032237 ns (2.90%), 60 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libc-2.33.so
  [ 1] sun.nio.ch.FileDispatcherImpl.read0
  [ 2] sun.nio.ch.FileDispatcherImpl.read
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 1220023800 ns (2.44%), 50 samples
  [ 0] java.lang.ThreadLocal.get
  [ 1] sun.nio.ch.Util.getTemporaryDirectBuffer
  [ 2] sun.nio.ch.IOUtil.read
  [ 3] sun.nio.ch.FileChannelImpl.read
  [ 4] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 5] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 7] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 9] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.run

--- 1160024386 ns (2.32%), 50 samples
  [ 0] java.nio.channels.spi.AbstractInterruptibleChannel.begin
  [ 1] sun.nio.ch.FileChannelImpl.beginBlocking
  [ 2] sun.nio.ch.FileChannelImpl.read
  [ 3] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 4] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 5] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 6] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 7] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 8] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.run

--- 1020030854 ns (2.04%), 42 samples
  [ 0] sun.nio.ch.NativeThread.current
  [ 1] sun.nio.ch.NativeThreadSet.add
  [ 2] sun.nio.ch.FileChannelImpl.read
  [ 3] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 4] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 5] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 6] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 7] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 8] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.run

--- 810034104 ns (1.62%), 33 samples
  [ 0] java.lang.Thread.blockedOn
  [ 1] java.lang.System$2.blockedOn
  [ 2] java.nio.channels.spi.AbstractInterruptibleChannel.blockedOn
  [ 3] java.nio.channels.spi.AbstractInterruptibleChannel.begin
  [ 4] sun.nio.ch.FileChannelImpl.beginBlocking
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 749994504 ns (1.50%), 31 samples
  [ 0] java.nio.channels.spi.AbstractInterruptibleChannel.end
  [ 1] sun.nio.ch.FileChannelImpl.endBlocking
  [ 2] sun.nio.ch.FileChannelImpl.read
  [ 3] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 4] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 5] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 6] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 7] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 8] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.run

--- 379999848 ns (0.76%), 17 samples
  [ 0] java.lang.ThreadLocal$ThreadLocalMap.getEntry
  [ 1] java.lang.ThreadLocal.get
  [ 2] sun.nio.ch.Util.offerFirstTemporaryDirectBuffer
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.FileChannelImpl.read
  [ 5] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 200006638 ns (0.40%), 7 samples
  [ 0] Java_sun_nio_ch_FileDispatcherImpl_read0
  [ 1] sun.nio.ch.FileDispatcherImpl.read0
  [ 2] sun.nio.ch.FileDispatcherImpl.read
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 200002347 ns (0.40%), 6 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/libnio.so
  [ 1] sun.nio.ch.FileDispatcherImpl.read0
  [ 2] sun.nio.ch.FileDispatcherImpl.read
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 170004608 ns (0.34%), 5 samples
  [ 0] java.lang.ThreadLocal$ThreadLocalMap.getEntry
  [ 1] java.lang.ThreadLocal.get
  [ 2] sun.nio.ch.Util.getTemporaryDirectBuffer
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.FileChannelImpl.read
  [ 5] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 170001575 ns (0.34%), 8 samples
  [ 0] sun.nio.ch.Util.getTemporaryDirectBuffer
  [ 1] sun.nio.ch.IOUtil.read
  [ 2] sun.nio.ch.FileChannelImpl.read
  [ 3] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 4] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 5] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 6] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 7] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 8] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.run

--- 160011891 ns (0.32%), 6 samples
  [ 0] sun.nio.ch.Util$BufferCache.get
  [ 1] sun.nio.ch.Util.getTemporaryDirectBuffer
  [ 2] sun.nio.ch.IOUtil.read
  [ 3] sun.nio.ch.FileChannelImpl.read
  [ 4] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 5] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 7] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 9] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.run

--- 139996240 ns (0.28%), 7 samples
  [ 0] java.lang.ThreadLocal$ThreadLocalMap.getEntry
  [ 1] java.lang.ThreadLocal.get
  [ 2] sun.nio.ch.Util.offerFirstTemporaryDirectBuffer
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.FileChannelImpl.read
  [ 5] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 129997740 ns (0.26%), 7 samples
  [ 0] java.lang.ThreadLocal$ThreadLocalMap.getEntry
  [ 1] java.lang.ThreadLocal.get
  [ 2] sun.nio.ch.Util.getTemporaryDirectBuffer
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.FileChannelImpl.read
  [ 5] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 120006695 ns (0.24%), 6 samples
  [ 0] java.nio.Buffer.remaining
  [ 1] sun.nio.ch.IOUtil.read
  [ 2] sun.nio.ch.FileChannelImpl.read
  [ 3] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 4] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 5] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 6] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 7] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 8] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.run

--- 110003911 ns (0.22%), 3 samples
  [ 0] sun.nio.ch.FileChannelImpl.read
  [ 1] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 2] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 3] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 4] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 5] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 6] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.run

--- 100004732 ns (0.20%), 4 samples
  [ 0] sun.nio.ch.IOUtil.read
  [ 1] sun.nio.ch.FileChannelImpl.read
  [ 2] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 3] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 4] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 5] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 6] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 7] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 8] java.lang.reflect.Method.invoke
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.Executors$RunnableAdapter.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.ThreadPoolExecutor.runWorker
  [15] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [16] java.lang.Thread.run

--- 100004084 ns (0.20%), 3 samples
  [ 0] java.lang.ThreadLocal$ThreadLocalMap.getEntry
  [ 1] java.lang.ThreadLocal.get
  [ 2] sun.nio.ch.Util.getTemporaryDirectBuffer
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.FileChannelImpl.read
  [ 5] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 100001672 ns (0.20%), 5 samples
  [ 0] sun.nio.ch.Util.offerFirstTemporaryDirectBuffer
  [ 1] sun.nio.ch.IOUtil.read
  [ 2] sun.nio.ch.FileChannelImpl.read
  [ 3] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 4] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 5] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 6] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 7] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 8] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.run

--- 90018032 ns (0.18%), 2 samples
  [ 0] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 1] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 2] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 3] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 4] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 5] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 6] java.lang.reflect.Method.invoke
  [ 7] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] java.util.concurrent.FutureTask.run
  [10] java.util.concurrent.Executors$RunnableAdapter.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.ThreadPoolExecutor.runWorker
  [13] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [14] java.lang.Thread.run

--- 90003461 ns (0.18%), 4 samples
  [ 0] jlong_arraycopy
  [ 1] java.nio.Buffer.position
  [ 2] java.nio.ByteBuffer.position
  [ 3] java.nio.MappedByteBuffer.position
  [ 4] java.nio.DirectByteBuffer.get
  [ 5] java.nio.HeapByteBuffer.put
  [ 6] sun.nio.ch.IOUtil.read
  [ 7] sun.nio.ch.FileChannelImpl.read
  [ 8] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 90003018 ns (0.18%), 2 samples
  [ 0] sun.nio.ch.NativeThreadSet.add
  [ 1] sun.nio.ch.FileChannelImpl.read
  [ 2] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 3] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 4] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 5] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 6] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 7] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 8] java.lang.reflect.Method.invoke
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.Executors$RunnableAdapter.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.ThreadPoolExecutor.runWorker
  [15] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [16] java.lang.Thread.run

--- 90002252 ns (0.18%), 3 samples
  [ 0] sun.nio.ch.FileDispatcherImpl.read0
  [ 1] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 2] sun.nio.ch.IOUtil.read
  [ 3] sun.nio.ch.FileChannelImpl.read
  [ 4] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 5] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 7] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 9] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.run

--- 80003902 ns (0.16%), 4 samples
  [ 0] sun.nio.ch.FileChannelImpl.read
  [ 1] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 2] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 3] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 4] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 5] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 6] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.run

--- 80003700 ns (0.16%), 1 sample
  [ 0] jdk.internal.misc.Unsafe.copyMemory
  [ 1] java.nio.DirectByteBuffer.get
  [ 2] java.nio.HeapByteBuffer.put
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.FileChannelImpl.read
  [ 5] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 70002150 ns (0.14%), 2 samples
  [ 0] java.nio.Buffer.remaining
  [ 1] sun.nio.ch.IOUtil.read
  [ 2] sun.nio.ch.FileChannelImpl.read
  [ 3] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 4] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 5] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 6] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 7] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 8] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.run

--- 70001311 ns (0.14%), 3 samples
  [ 0] java.nio.Buffer.limit
  [ 1] java.nio.ByteBuffer.limit
  [ 2] java.nio.MappedByteBuffer.limit
  [ 3] java.nio.MappedByteBuffer.limit
  [ 4] sun.nio.ch.Util$BufferCache.get
  [ 5] sun.nio.ch.Util.getTemporaryDirectBuffer
  [ 6] sun.nio.ch.IOUtil.read
  [ 7] sun.nio.ch.FileChannelImpl.read
  [ 8] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 70000699 ns (0.14%), 3 samples
  [ 0] sun.nio.ch.FileChannelImpl.read
  [ 1] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 2] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 3] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 4] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 5] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 6] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.run

--- 69999678 ns (0.14%), 5 samples
  [ 0] sun.nio.ch.Util$BufferCache.offerFirst
  [ 1] sun.nio.ch.Util.offerFirstTemporaryDirectBuffer
  [ 2] sun.nio.ch.IOUtil.read
  [ 3] sun.nio.ch.FileChannelImpl.read
  [ 4] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 5] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 7] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 9] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.run

--- 69999097 ns (0.14%), 5 samples
  [ 0] sun.nio.ch.NativeThread.current
  [ 1] sun.nio.ch.NativeThreadSet.add
  [ 2] sun.nio.ch.FileChannelImpl.read
  [ 3] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 4] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 5] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 6] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 7] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 8] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.run

--- 60002699 ns (0.12%), 1 sample
  [ 0] java.nio.channels.spi.AbstractInterruptibleChannel.begin
  [ 1] sun.nio.ch.FileChannelImpl.beginBlocking
  [ 2] sun.nio.ch.FileChannelImpl.read
  [ 3] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 4] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 5] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 6] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 7] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 8] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.run

--- 60002470 ns (0.12%), 3 samples
  [ 0] jdk.internal.misc.Unsafe.checkPrimitiveArray
  [ 1] jdk.internal.misc.Unsafe.checkPrimitivePointer
  [ 2] jdk.internal.misc.Unsafe.copyMemoryChecks
  [ 3] jdk.internal.misc.Unsafe.copyMemory
  [ 4] java.nio.DirectByteBuffer.get
  [ 5] java.nio.HeapByteBuffer.put
  [ 6] sun.nio.ch.IOUtil.read
  [ 7] sun.nio.ch.FileChannelImpl.read
  [ 8] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 60002426 ns (0.12%), 1 sample
  [ 0] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 1] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 2] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 3] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 4] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 5] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 6] java.lang.reflect.Method.invoke
  [ 7] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] java.util.concurrent.FutureTask.run
  [10] java.util.concurrent.Executors$RunnableAdapter.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.ThreadPoolExecutor.runWorker
  [13] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [14] java.lang.Thread.run

--- 60001317 ns (0.12%), 3 samples
  [ 0] java.lang.Thread.blockedOn
  [ 1] java.lang.System$2.blockedOn
  [ 2] java.nio.channels.spi.AbstractInterruptibleChannel.blockedOn
  [ 3] java.nio.channels.spi.AbstractInterruptibleChannel.begin
  [ 4] sun.nio.ch.FileChannelImpl.beginBlocking
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 60001043 ns (0.12%), 3 samples
  [ 0] jdk.internal.misc.Unsafe.checkSize
  [ 1] jdk.internal.misc.Unsafe.copyMemoryChecks
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] java.nio.DirectByteBuffer.get
  [ 4] java.nio.HeapByteBuffer.put
  [ 5] sun.nio.ch.IOUtil.read
  [ 6] sun.nio.ch.FileChannelImpl.read
  [ 7] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [12] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 60000364 ns (0.12%), 2 samples
  [ 0] sun.nio.ch.IOUtil.read
  [ 1] sun.nio.ch.FileChannelImpl.read
  [ 2] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 3] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 4] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 5] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 6] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 7] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 8] java.lang.reflect.Method.invoke
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.Executors$RunnableAdapter.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.ThreadPoolExecutor.runWorker
  [15] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [16] java.lang.Thread.run

--- 59999277 ns (0.12%), 3 samples
  [ 0] sun.nio.ch.FileChannelImpl.read
  [ 1] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 2] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 3] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 4] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 5] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 6] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.run

--- 50004482 ns (0.10%), 3 samples
  [ 0] sun.nio.ch.IOUtil.read
  [ 1] sun.nio.ch.FileChannelImpl.read
  [ 2] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 3] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 4] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 5] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 6] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 7] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 8] java.lang.reflect.Method.invoke
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.Executors$RunnableAdapter.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.ThreadPoolExecutor.runWorker
  [15] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [16] java.lang.Thread.run

--- 50002678 ns (0.10%), 2 samples
  [ 0] java.nio.channels.spi.AbstractInterruptibleChannel.end
  [ 1] sun.nio.ch.FileChannelImpl.endBlocking
  [ 2] sun.nio.ch.FileChannelImpl.read
  [ 3] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 4] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 5] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 6] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 7] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 8] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.run

--- 50002553 ns (0.10%), 1 sample
  [ 0] java.lang.ThreadLocal$ThreadLocalMap.getEntry
  [ 1] java.lang.ThreadLocal.get
  [ 2] sun.nio.ch.Util.offerFirstTemporaryDirectBuffer
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.FileChannelImpl.read
  [ 5] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 50002075 ns (0.10%), 1 sample
  [ 0] sun.nio.ch.Util$BufferCache.offerFirst
  [ 1] sun.nio.ch.Util.offerFirstTemporaryDirectBuffer
  [ 2] sun.nio.ch.IOUtil.read
  [ 3] sun.nio.ch.FileChannelImpl.read
  [ 4] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 5] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 7] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 9] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.run

--- 50000938 ns (0.10%), 2 samples
  [ 0] sun.nio.ch.FileChannelImpl.read
  [ 1] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 2] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 3] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 4] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 5] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 6] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.run

--- 49999803 ns (0.10%), 2 samples
  [ 0] java.nio.Buffer.position
  [ 1] java.nio.ByteBuffer.position
  [ 2] java.nio.HeapByteBuffer.put
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.FileChannelImpl.read
  [ 5] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 49998953 ns (0.10%), 3 samples
  [ 0] java.lang.Class.getComponentType
  [ 1] jdk.internal.misc.Unsafe.checkPrimitiveArray
  [ 2] jdk.internal.misc.Unsafe.checkPrimitivePointer
  [ 3] jdk.internal.misc.Unsafe.copyMemoryChecks
  [ 4] jdk.internal.misc.Unsafe.copyMemory
  [ 5] java.nio.DirectByteBuffer.get
  [ 6] java.nio.HeapByteBuffer.put
  [ 7] sun.nio.ch.IOUtil.read
  [ 8] sun.nio.ch.FileChannelImpl.read
  [ 9] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [11] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [13] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 49995818 ns (0.10%), 4 samples
  [ 0] java.lang.ThreadLocal.get
  [ 1] sun.nio.ch.Util.offerFirstTemporaryDirectBuffer
  [ 2] sun.nio.ch.IOUtil.read
  [ 3] sun.nio.ch.FileChannelImpl.read
  [ 4] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 5] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 7] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 9] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.run

--- 40004099 ns (0.08%), 2 samples
  [ 0] java.nio.Buffer.position
  [ 1] java.nio.ByteBuffer.position
  [ 2] java.nio.HeapByteBuffer.put
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.FileChannelImpl.read
  [ 5] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 40001348 ns (0.08%), 3 samples
  [ 0] sun.nio.ch.Util$BufferCache.next
  [ 1] sun.nio.ch.Util$BufferCache.get
  [ 2] sun.nio.ch.Util.getTemporaryDirectBuffer
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.FileChannelImpl.read
  [ 5] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 39997641 ns (0.08%), 3 samples
  [ 0] java.nio.Buffer.position
  [ 1] java.nio.HeapByteBuffer.put
  [ 2] sun.nio.ch.IOUtil.read
  [ 3] sun.nio.ch.FileChannelImpl.read
  [ 4] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 5] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 7] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 9] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.run

--- 39996380 ns (0.08%), 3 samples
  [ 0] java.lang.Thread.isInterrupted
  [ 1] java.nio.channels.spi.AbstractInterruptibleChannel.begin
  [ 2] sun.nio.ch.FileChannelImpl.beginBlocking
  [ 3] sun.nio.ch.FileChannelImpl.read
  [ 4] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 5] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 7] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 9] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.run

--- 30003944 ns (0.06%), 1 sample
  [ 0] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 1] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 2] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 3] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 4] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 5] java.lang.reflect.Method.invoke
  [ 6] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 7] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 8] java.util.concurrent.FutureTask.run
  [ 9] java.util.concurrent.Executors$RunnableAdapter.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 30003480 ns (0.06%), 1 sample
  [ 0] sun.nio.ch.FileChannelImpl.read
  [ 1] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 2] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 3] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 4] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 5] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 6] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.run

--- 30002338 ns (0.06%), 1 sample
  [ 0] java.lang.Thread.blockedOn
  [ 1] java.lang.System$2.blockedOn
  [ 2] java.nio.channels.spi.AbstractInterruptibleChannel.blockedOn
  [ 3] java.nio.channels.spi.AbstractInterruptibleChannel.end
  [ 4] sun.nio.ch.FileChannelImpl.endBlocking
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 30002332 ns (0.06%), 1 sample
  [ 0] java.nio.Buffer.checkBounds
  [ 1] java.nio.DirectByteBuffer.get
  [ 2] java.nio.HeapByteBuffer.put
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.FileChannelImpl.read
  [ 5] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 30002098 ns (0.06%), 1 sample
  [ 0] fstatat64
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/libjava.so
  [ 2] java.io.RandomAccessFile.open0
  [ 3] java.io.RandomAccessFile.open
  [ 4] java.io.RandomAccessFile.<init>
  [ 5] java.io.RandomAccessFile.<init>
  [ 6] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 30001593 ns (0.06%), 2 samples
  [ 0] Java_sun_nio_ch_NativeThread_current
  [ 1] sun.nio.ch.NativeThread.current
  [ 2] sun.nio.ch.NativeThreadSet.add
  [ 3] sun.nio.ch.FileChannelImpl.read
  [ 4] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 5] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 7] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 9] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.run

--- 30001418 ns (0.06%), 1 sample
  [ 0] sun.nio.ch.FileChannelImpl.read
  [ 1] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 2] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 3] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 4] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 5] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 6] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.run

--- 30000771 ns (0.06%), 1 sample
  [ 0] java.lang.Thread.blockedOn
  [ 1] java.lang.System$2.blockedOn
  [ 2] java.nio.channels.spi.AbstractInterruptibleChannel.blockedOn
  [ 3] java.nio.channels.spi.AbstractInterruptibleChannel.end
  [ 4] sun.nio.ch.FileChannelImpl.endBlocking
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 30000456 ns (0.06%), 1 sample
  [ 0] java.lang.ThreadLocal.get
  [ 1] sun.nio.ch.Util.offerFirstTemporaryDirectBuffer
  [ 2] sun.nio.ch.IOUtil.read
  [ 3] sun.nio.ch.FileChannelImpl.read
  [ 4] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 5] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 7] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 9] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.run

--- 29999082 ns (0.06%), 1 sample
  [ 0] sun.nio.ch.FileChannelImpl.read
  [ 1] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 2] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 3] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 4] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 5] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 6] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.run

--- 29998982 ns (0.06%), 2 samples
  [ 0] sun.nio.ch.Util$BufferCache.offerFirst
  [ 1] sun.nio.ch.Util.offerFirstTemporaryDirectBuffer
  [ 2] sun.nio.ch.IOUtil.read
  [ 3] sun.nio.ch.FileChannelImpl.read
  [ 4] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 5] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 7] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 9] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.run

--- 29998862 ns (0.06%), 2 samples
  [ 0] java.nio.Buffer.remaining
  [ 1] java.nio.HeapByteBuffer.put
  [ 2] sun.nio.ch.IOUtil.read
  [ 3] sun.nio.ch.FileChannelImpl.read
  [ 4] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 5] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 7] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 9] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.run

--- 29998664 ns (0.06%), 2 samples
  [ 0] java.nio.Buffer.limit
  [ 1] java.nio.ByteBuffer.limit
  [ 2] java.nio.MappedByteBuffer.limit
  [ 3] java.nio.MappedByteBuffer.limit
  [ 4] sun.nio.ch.Util$BufferCache.get
  [ 5] sun.nio.ch.Util.getTemporaryDirectBuffer
  [ 6] sun.nio.ch.IOUtil.read
  [ 7] sun.nio.ch.FileChannelImpl.read
  [ 8] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 29998141 ns (0.06%), 1 sample
  [ 0] java.lang.ThreadLocal$ThreadLocalMap.getEntry
  [ 1] java.lang.ThreadLocal.get
  [ 2] sun.nio.ch.Util.offerFirstTemporaryDirectBuffer
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.FileChannelImpl.read
  [ 5] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 29996387 ns (0.06%), 2 samples
  [ 0] sun.nio.ch.Util$BufferCache.get
  [ 1] sun.nio.ch.Util.getTemporaryDirectBuffer
  [ 2] sun.nio.ch.IOUtil.read
  [ 3] sun.nio.ch.FileChannelImpl.read
  [ 4] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 5] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 7] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 9] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.run

--- 20004594 ns (0.04%), 1 sample
  [ 0] java.nio.Buffer.limit
  [ 1] java.nio.HeapByteBuffer.put
  [ 2] sun.nio.ch.IOUtil.read
  [ 3] sun.nio.ch.FileChannelImpl.read
  [ 4] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 5] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 7] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 9] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.run

--- 20003374 ns (0.04%), 1 sample
  [ 0] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 1] sun.nio.ch.IOUtil.read
  [ 2] sun.nio.ch.FileChannelImpl.read
  [ 3] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 4] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 5] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 6] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 7] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 8] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.run

--- 20002825 ns (0.04%), 1 sample
  [ 0] sun.nio.ch.FileDispatcherImpl.read
  [ 1] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 2] sun.nio.ch.IOUtil.read
  [ 3] sun.nio.ch.FileChannelImpl.read
  [ 4] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 5] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 7] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 9] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.run

--- 20002754 ns (0.04%), 1 sample
  [ 0] sun.nio.ch.NativeThreadSet.add
  [ 1] sun.nio.ch.FileChannelImpl.read
  [ 2] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 3] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 4] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 5] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 6] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 7] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 8] java.lang.reflect.Method.invoke
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.Executors$RunnableAdapter.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.ThreadPoolExecutor.runWorker
  [15] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [16] java.lang.Thread.run

--- 20001756 ns (0.04%), 1 sample
  [ 0] java.nio.HeapByteBuffer.put
  [ 1] sun.nio.ch.IOUtil.read
  [ 2] sun.nio.ch.FileChannelImpl.read
  [ 3] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 4] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 5] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 6] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 7] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 8] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.run

--- 20001701 ns (0.04%), 1 sample
  [ 0] java.nio.Buffer.position
  [ 1] java.nio.ByteBuffer.position
  [ 2] java.nio.HeapByteBuffer.put
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.FileChannelImpl.read
  [ 5] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 20000620 ns (0.04%), 1 sample
  [ 0] java.lang.ThreadLocal.getMap
  [ 1] java.lang.ThreadLocal.get
  [ 2] sun.nio.ch.Util.getTemporaryDirectBuffer
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.FileChannelImpl.read
  [ 5] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 20000531 ns (0.04%), 2 samples
  [ 0] java.nio.Buffer.checkBounds
  [ 1] java.nio.DirectByteBuffer.get
  [ 2] java.nio.HeapByteBuffer.put
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.FileChannelImpl.read
  [ 5] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 19999890 ns (0.04%), 1 sample
  [ 0] pthread_self
  [ 1] sun.nio.ch.NativeThread.current
  [ 2] sun.nio.ch.NativeThreadSet.add
  [ 3] sun.nio.ch.FileChannelImpl.read
  [ 4] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 5] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 7] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 9] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.run

--- 19999655 ns (0.04%), 1 sample
  [ 0] sun.nio.ch.FileChannelImpl.read
  [ 1] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 2] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 3] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 4] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 5] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 6] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.run

--- 19999003 ns (0.04%), 1 sample
  [ 0] sun.nio.ch.NativeThreadSet.add
  [ 1] sun.nio.ch.FileChannelImpl.read
  [ 2] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 3] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 4] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 5] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 6] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 7] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 8] java.lang.reflect.Method.invoke
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.Executors$RunnableAdapter.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.ThreadPoolExecutor.runWorker
  [15] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [16] java.lang.Thread.run

--- 10002386 ns (0.02%), 1 sample
  [ 0] unsafe_arraycopy
  [ 1] java.nio.Buffer.position
  [ 2] java.nio.ByteBuffer.position
  [ 3] java.nio.MappedByteBuffer.position
  [ 4] java.nio.DirectByteBuffer.get
  [ 5] java.nio.HeapByteBuffer.put
  [ 6] sun.nio.ch.IOUtil.read
  [ 7] sun.nio.ch.FileChannelImpl.read
  [ 8] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 10000952 ns (0.02%), 1 sample
  [ 0] java.nio.Buffer.rewind
  [ 1] java.nio.ByteBuffer.rewind
  [ 2] java.nio.MappedByteBuffer.rewind
  [ 3] java.nio.MappedByteBuffer.rewind
  [ 4] sun.nio.ch.Util$BufferCache.get
  [ 5] sun.nio.ch.Util.getTemporaryDirectBuffer
  [ 6] sun.nio.ch.IOUtil.read
  [ 7] sun.nio.ch.FileChannelImpl.read
  [ 8] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 10000924 ns (0.02%), 1 sample
  [ 0] sun.nio.ch.NativeThreadSet.remove
  [ 1] sun.nio.ch.FileChannelImpl.read
  [ 2] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 3] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 4] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 5] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 6] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 7] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 8] java.lang.reflect.Method.invoke
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.Executors$RunnableAdapter.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.ThreadPoolExecutor.runWorker
  [15] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [16] java.lang.Thread.run

--- 10000766 ns (0.02%), 1 sample
  [ 0] sun.nio.ch.NativeThreadSet.add
  [ 1] sun.nio.ch.FileChannelImpl.read
  [ 2] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 3] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 4] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 5] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 6] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 7] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 8] java.lang.reflect.Method.invoke
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.Executors$RunnableAdapter.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.ThreadPoolExecutor.runWorker
  [15] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [16] java.lang.Thread.run

--- 10000653 ns (0.02%), 1 sample
  [ 0] java.nio.Buffer.rewind
  [ 1] java.nio.ByteBuffer.rewind
  [ 2] java.nio.MappedByteBuffer.rewind
  [ 3] java.nio.MappedByteBuffer.rewind
  [ 4] sun.nio.ch.Util$BufferCache.get
  [ 5] sun.nio.ch.Util.getTemporaryDirectBuffer
  [ 6] sun.nio.ch.IOUtil.read
  [ 7] sun.nio.ch.FileChannelImpl.read
  [ 8] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [10] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [12] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 10000612 ns (0.02%), 1 sample
  [ 0] jdk.internal.misc.SharedSecrets.getJavaLangAccess
  [ 1] java.nio.channels.spi.AbstractInterruptibleChannel.blockedOn
  [ 2] java.nio.channels.spi.AbstractInterruptibleChannel.begin
  [ 3] sun.nio.ch.FileChannelImpl.beginBlocking
  [ 4] sun.nio.ch.FileChannelImpl.read
  [ 5] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 10000482 ns (0.02%), 1 sample
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/libnio.so
  [ 1] sun.nio.ch.NativeThread.current
  [ 2] sun.nio.ch.NativeThreadSet.add
  [ 3] sun.nio.ch.FileChannelImpl.read
  [ 4] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 5] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 7] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 9] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.run

--- 10000206 ns (0.02%), 1 sample
  [ 0] sun.nio.ch.FileChannelImpl.read
  [ 1] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 2] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 3] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 4] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 5] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 6] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.run

--- 9999784 ns (0.02%), 1 sample
  [ 0] java.nio.Buffer.position
  [ 1] java.nio.ByteBuffer.position
  [ 2] java.nio.MappedByteBuffer.position
  [ 3] java.nio.MappedByteBuffer.position
  [ 4] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 5] sun.nio.ch.IOUtil.read
  [ 6] sun.nio.ch.FileChannelImpl.read
  [ 7] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 9] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [11] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [12] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 9999441 ns (0.02%), 1 sample
  [ 0] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 1] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 2] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 3] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 4] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 5] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 6] java.lang.reflect.Method.invoke
  [ 7] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] java.util.concurrent.FutureTask.run
  [10] java.util.concurrent.Executors$RunnableAdapter.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.ThreadPoolExecutor.runWorker
  [13] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [14] java.lang.Thread.run

--- 9999121 ns (0.02%), 1 sample
  [ 0] java.lang.ThreadLocal$ThreadLocalMap.getEntry
  [ 1] java.lang.ThreadLocal.get
  [ 2] sun.nio.ch.Util.getTemporaryDirectBuffer
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.FileChannelImpl.read
  [ 5] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 9999013 ns (0.02%), 1 sample
  [ 0] java.nio.Buffer.position
  [ 1] java.nio.ByteBuffer.position
  [ 2] java.nio.HeapByteBuffer.put
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.FileChannelImpl.read
  [ 5] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 9998820 ns (0.02%), 1 sample
  [ 0] sun.nio.ch.Util$BufferCache.get
  [ 1] sun.nio.ch.Util.getTemporaryDirectBuffer
  [ 2] sun.nio.ch.IOUtil.read
  [ 3] sun.nio.ch.FileChannelImpl.read
  [ 4] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 5] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 7] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 9] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.run

--- 9998233 ns (0.02%), 1 sample
  [ 0] sun.nio.ch.FileDispatcherImpl.read
  [ 1] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 2] sun.nio.ch.IOUtil.read
  [ 3] sun.nio.ch.FileChannelImpl.read
  [ 4] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 5] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 6] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 7] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 8] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 9] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.run

--- 9998217 ns (0.02%), 1 sample
  [ 0] java.nio.Buffer.flip
  [ 1] java.nio.ByteBuffer.flip
  [ 2] java.nio.MappedByteBuffer.flip
  [ 3] java.nio.MappedByteBuffer.flip
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 7] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 8] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 9] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [10] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 9998146 ns (0.02%), 1 sample
  [ 0] sun.nio.ch.NativeThreadSet.remove
  [ 1] sun.nio.ch.FileChannelImpl.read
  [ 2] io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
  [ 3] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
  [ 4] io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_AverageTime
  [ 5] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [ 6] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [ 7] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 8] java.lang.reflect.Method.invoke
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.Executors$RunnableAdapter.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.ThreadPoolExecutor.runWorker
  [15] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [16] java.lang.Thread.run

          ns  percent  samples  top
  ----------  -------  -------  ---
 30060976003   60.16%     1222  read
  5510161832   11.03%      214  jlong_disjoint_arraycopy
  1870053128    3.74%       78  sun.nio.ch.IOUtil.read
  1660059667    3.32%       59  sun.nio.ch.FileDispatcherImpl.read0
  1450032237    2.90%       60  /usr/lib/x86_64-linux-gnu/libc-2.33.so
  1300020074    2.60%       55  java.lang.ThreadLocal.get
  1220027085    2.44%       51  java.nio.channels.spi.AbstractInterruptibleChannel.begin
  1090029951    2.18%       47  sun.nio.ch.NativeThread.current
  1010002335    2.02%       42  java.lang.ThreadLocal$ThreadLocalMap.getEntry
   930038530    1.86%       38  java.lang.Thread.blockedOn
   799997182    1.60%       33  java.nio.channels.spi.AbstractInterruptibleChannel.end
   490012568    0.98%       20  sun.nio.ch.FileChannelImpl.read
   220007707    0.44%       10  java.nio.Buffer.remaining
   210002829    0.42%        7  /usr/lib/jvm/java-11-openjdk-amd64/lib/libnio.so
   200007098    0.40%        9  sun.nio.ch.Util$BufferCache.get
   200006638    0.40%        7  Java_sun_nio_ch_FileDispatcherImpl_read0
   170002041    0.34%       10  java.nio.Buffer.position
   170001575    0.34%        8  sun.nio.ch.Util.getTemporaryDirectBuffer
   160019899    0.32%        4  io.ktor.benchmarks.FileBenchmarks.testJvmRandomFileRead
   150000735    0.30%        8  sun.nio.ch.Util$BufferCache.offerFirst
   140005541    0.28%        5  sun.nio.ch.NativeThreadSet.add
   120004569    0.24%        6  java.nio.Buffer.limit
   100001672    0.20%        5  sun.nio.ch.Util.offerFirstTemporaryDirectBuffer
    90003461    0.18%        4  jlong_arraycopy
    80003700    0.16%        1  jdk.internal.misc.Unsafe.copyMemory
    60002470    0.12%        3  jdk.internal.misc.Unsafe.checkPrimitiveArray
    60001043    0.12%        3  jdk.internal.misc.Unsafe.checkSize
    50002863    0.10%        3  java.nio.Buffer.checkBounds
    49998953    0.10%        3  java.lang.Class.getComponentType
    40001348    0.08%        3  sun.nio.ch.Util$BufferCache.next
    39996380    0.08%        3  java.lang.Thread.isInterrupted
    30003944    0.06%        1  io.ktor.benchmarks.jmh_generated.FileBenchmarks_testJvmRandomFileRead_jmhTest.testJvmRandomFileRead_avgt_jmhStub
    30002098    0.06%        1  fstatat64
    30001593    0.06%        2  Java_sun_nio_ch_NativeThread_current
    30001058    0.06%        2  sun.nio.ch.FileDispatcherImpl.read
    20003374    0.04%        1  sun.nio.ch.IOUtil.readIntoNativeBuffer
    20001756    0.04%        1  java.nio.HeapByteBuffer.put
    20001605    0.04%        2  java.nio.Buffer.rewind
    20000620    0.04%        1  java.lang.ThreadLocal.getMap
    19999890    0.04%        1  pthread_self
    19999070    0.04%        2  sun.nio.ch.NativeThreadSet.remove
    10002386    0.02%        1  unsafe_arraycopy
    10000612    0.02%        1  jdk.internal.misc.SharedSecrets.getJavaLangAccess
     9998217    0.02%        1  java.nio.Buffer.flip

