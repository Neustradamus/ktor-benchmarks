--- Execution profile ---
Total samples       : 18343
unknown_Java        : 2 (0.01%)

--- 85992618625 ns (42.79%), 8598 samples
  [ 0] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 16290505268 ns (8.11%), 1370 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 3] java.lang.Thread.run

--- 15230488300 ns (7.58%), 1285 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 3] java.lang.Thread.run

--- 8010345948 ns (3.99%), 532 samples
  [ 0] read
  [ 1] sun.nio.ch.FileDispatcherImpl.read0
  [ 2] sun.nio.ch.FileDispatcherImpl.read
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 7350250048 ns (3.66%), 593 samples
  [ 0] java.lang.invoke.VarHandleObjects$FieldInstanceReadWrite.compareAndSet
  [ 1] java.lang.invoke.VarHandleGuards.guard_LLL_Z
  [ 2] java.util.concurrent.ConcurrentLinkedQueue$Node.casItem
  [ 3] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 6] java.lang.Thread.run

--- 6910263804 ns (3.44%), 690 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] java.nio.MappedByteBuffer.position
  [ 2] java.nio.MappedByteBuffer.position
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [12] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [13] java.lang.Thread.run

--- 6860336040 ns (3.41%), 686 samples
  [ 0] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 6600153637 ns (3.28%), 567 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 3] java.lang.Thread.run

--- 6350163743 ns (3.16%), 519 samples
  [ 0] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.getQueue
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 3] java.lang.Thread.run

--- 3920107370 ns (1.95%), 392 samples
  [ 0] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 3680132394 ns (1.83%), 368 samples
  [ 0] io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run

--- 2150082542 ns (1.07%), 215 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [11] java.lang.Thread.run

--- 2050054257 ns (1.02%), 177 samples
  [ 0] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 2] java.lang.Thread.run

--- 1880046181 ns (0.94%), 125 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 1] io.ktor.utils.io.ByteBufferChannel.flush
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 7] java.lang.Thread.run

--- 1850038007 ns (0.92%), 141 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 3] java.lang.Thread.run

--- 1600039530 ns (0.80%), 119 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 3] java.lang.Thread.run

--- 1240030917 ns (0.62%), 76 samples
  [ 0] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.flush
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 9] java.lang.Thread.run

--- 980027397 ns (0.49%), 60 samples
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.tryWriteAtLeast
  [ 1] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 7] java.lang.Thread.run

--- 820019987 ns (0.41%), 57 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.internal.RingBufferCapacity.tryWriteAtLeast
  [ 2] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 8] java.lang.Thread.run

--- 770013735 ns (0.38%), 77 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 700020938 ns (0.35%), 70 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 700015203 ns (0.35%), 70 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 670013821 ns (0.33%), 44 samples
  [ 0] java.nio.MappedByteBuffer.limit
  [ 1] java.nio.Buffer.<init>
  [ 2] java.nio.ByteBuffer.<init>
  [ 3] java.nio.ByteBuffer.<init>
  [ 4] java.nio.MappedByteBuffer.<init>
  [ 5] java.nio.DirectByteBuffer.<init>
  [ 6] java.nio.DirectByteBuffer.duplicate
  [ 7] io.ktor.util.BufferViewJvmKt.read
  [ 8] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [12] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [13] java.lang.Thread.run

--- 560021014 ns (0.28%), 56 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 2] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 7] java.lang.Thread.run

--- 550011947 ns (0.27%), 38 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.offer
  [ 1] java.util.concurrent.ConcurrentLinkedQueue.add
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.dispatch
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.flush
  [ 8] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [12] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [13] java.lang.Thread.run

--- 480015102 ns (0.24%), 31 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.internal.RingBufferCapacity.completeWrite
  [ 2] io.ktor.utils.io.ByteBufferChannel.bytesWritten
  [ 3] io.ktor.utils.io.ByteBufferChannel.bytesWrittenFromSession$ktor_io
  [ 4] io.ktor.utils.io.internal.WriteSessionImpl.written
  [ 5] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [10] java.lang.Thread.run

--- 470013786 ns (0.23%), 28 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libc-2.33.so
  [ 1] sun.nio.ch.FileDispatcherImpl.read0
  [ 2] sun.nio.ch.FileDispatcherImpl.read
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 450009900 ns (0.22%), 27 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 3] java.lang.Thread.run

--- 440009828 ns (0.22%), 27 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.offer
  [ 1] java.util.concurrent.ConcurrentLinkedQueue.add
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.dispatch
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.flush
  [ 8] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [12] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [13] java.lang.Thread.run

--- 420016544 ns (0.21%), 42 samples
  [ 0] kotlin.coroutines.CombinedContext.fold
  [ 1] kotlinx.coroutines.internal.ThreadContextKt.threadContextElements
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 3] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 4] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 5] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 6] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [11] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [15] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [16] java.lang.Thread.run

--- 410030892 ns (0.20%), 24 samples
  [ 0] sun.nio.ch.FileDispatcherImpl.read0
  [ 1] sun.nio.ch.FileDispatcherImpl.read
  [ 2] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.FileChannelImpl.read
  [ 5] io.ktor.util.BufferViewJvmKt.read
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [11] java.lang.Thread.run

--- 400025093 ns (0.20%), 40 samples
  [ 0] kotlinx.coroutines.internal.ThreadContextKt$countAll$1.invoke
  [ 1] kotlinx.coroutines.internal.ThreadContextKt$countAll$1.invoke
  [ 2] kotlin.coroutines.CombinedContext.fold
  [ 3] kotlinx.coroutines.internal.ThreadContextKt.threadContextElements
  [ 4] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 5] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 6] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 7] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 8] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [12] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [13] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [14] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [15] kotlinx.coroutines.DispatchedTask.run
  [16] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [17] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [18] java.lang.Thread.run

--- 350009930 ns (0.17%), 35 samples
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.tryReadAtMost
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [11] java.lang.Thread.run

--- 350007582 ns (0.17%), 35 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 1] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 340009596 ns (0.17%), 19 samples
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 1] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 2] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 3] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.flush
  [ 5] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [10] java.lang.Thread.run

--- 300019059 ns (0.15%), 22 samples
  [ 0] java.nio.Buffer.position
  [ 1] java.nio.ByteBuffer.position
  [ 2] java.nio.MappedByteBuffer.position
  [ 3] java.nio.MappedByteBuffer.position
  [ 4] java.nio.Buffer.<init>
  [ 5] java.nio.ByteBuffer.<init>
  [ 6] java.nio.ByteBuffer.<init>
  [ 7] java.nio.MappedByteBuffer.<init>
  [ 8] java.nio.DirectByteBuffer.<init>
  [ 9] java.nio.DirectByteBuffer.duplicate
  [10] io.ktor.util.BufferViewJvmKt.read
  [11] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [15] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [16] java.lang.Thread.run

--- 280007116 ns (0.14%), 28 samples
  [ 0] java.nio.DirectByteBuffer.get
  [ 1] java.nio.HeapByteBuffer.put
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 250004014 ns (0.12%), 25 samples
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.completeRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 240008077 ns (0.12%), 19 samples
  [ 0] itable stub
  [ 1] kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 5] java.lang.Thread.run

--- 230004976 ns (0.11%), 15 samples
  [ 0] kotlin.coroutines.CombinedContext.get
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.releaseIntercepted
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 5] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 6] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 229998763 ns (0.11%), 23 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 220004714 ns (0.11%), 14 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 1] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 7] java.lang.Thread.run

--- 220002849 ns (0.11%), 22 samples
  [ 0] kotlin.coroutines.CombinedContext.get
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 2] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [12] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [13] java.lang.Thread.run

--- 200008887 ns (0.10%), 20 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 200005167 ns (0.10%), 13 samples
  [ 0] sun.nio.ch.NativeThread.current
  [ 1] sun.nio.ch.NativeThreadSet.add
  [ 2] sun.nio.ch.FileChannelImpl.read
  [ 3] io.ktor.util.BufferViewJvmKt.read
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 9] java.lang.Thread.run

--- 190001221 ns (0.09%), 19 samples
  [ 0] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 1] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [11] java.lang.Thread.run

--- 170002672 ns (0.08%), 16 samples
  [ 0] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 5] java.lang.Thread.run

--- 160010499 ns (0.08%), 12 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.getAndSet
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.access$flushImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 5] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 6] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 7] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 8] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [12] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [13] java.lang.Thread.run

--- 160006128 ns (0.08%), 16 samples
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.tryReadAtMost
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [11] java.lang.Thread.run

--- 160002144 ns (0.08%), 13 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.getAndAdd
  [ 1] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.addAndGet
  [ 2] io.ktor.utils.io.internal.RingBufferCapacity.flush
  [ 3] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.access$flushImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 6] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 7] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 8] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 9] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [13] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [14] java.lang.Thread.run

--- 150003209 ns (0.07%), 15 samples
  [ 0] java.nio.Buffer.position
  [ 1] java.nio.ByteBuffer.position
  [ 2] java.nio.MappedByteBuffer.position
  [ 3] java.nio.DirectByteBuffer.get
  [ 4] java.nio.HeapByteBuffer.put
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [10] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [14] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [15] java.lang.Thread.run

--- 150002339 ns (0.07%), 9 samples
  [ 0] io.ktor.utils.io.internal.WriteSessionImpl.written
  [ 1] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 6] java.lang.Thread.run

--- 140009220 ns (0.07%), 10 samples
  [ 0] itable stub
  [ 1] kotlinx.coroutines.internal.DispatchedContinuation.takeState$kotlinx_coroutines_core
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 5] java.lang.Thread.run

--- 140008451 ns (0.07%), 5 samples
  [ 0] kotlinx.coroutines.DispatchedTask.run
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 3] java.lang.Thread.run

--- 140006708 ns (0.07%), 11 samples
  [ 0] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 1] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 6] java.lang.Thread.run

--- 140004305 ns (0.07%), 14 samples
  [ 0] jdk.internal.misc.Unsafe.checkPrimitivePointer
  [ 1] jdk.internal.misc.Unsafe.copyMemoryChecks
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] java.nio.DirectByteBuffer.get
  [ 4] java.nio.HeapByteBuffer.put
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [10] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [14] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [15] java.lang.Thread.run

--- 140003436 ns (0.07%), 11 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.addAndGet
  [ 1] io.ktor.utils.io.internal.RingBufferCapacity.flush
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.flush
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 9] java.lang.Thread.run

--- 130009677 ns (0.06%), 13 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [10] java.lang.Thread.run

--- 130005443 ns (0.06%), 13 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 1] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [11] java.lang.Thread.run

--- 130003993 ns (0.06%), 13 samples
  [ 0] java.nio.Buffer.limit
  [ 1] java.nio.ByteBuffer.limit
  [ 2] java.nio.MappedByteBuffer.limit
  [ 3] java.nio.MappedByteBuffer.limit
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [13] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [14] java.lang.Thread.run

--- 130003488 ns (0.06%), 8 samples
  [ 0] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 5] java.lang.Thread.run

--- 130003426 ns (0.06%), 13 samples
  [ 0] kotlinx.coroutines.internal.ThreadContextKt$countAll$1.invoke
  [ 1] kotlin.coroutines.CombinedContext.fold
  [ 2] kotlinx.coroutines.internal.ThreadContextKt.threadContextElements
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 4] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 5] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 6] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 7] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [11] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [12] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [16] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [17] java.lang.Thread.run

--- 130002346 ns (0.06%), 13 samples
  [ 0] io.ktor.utils.io.core.ByteOrder.getNioOrder
  [ 1] io.ktor.utils.io.ByteBufferChannel.prepareBuffer
  [ 2] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 3] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [13] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [14] java.lang.Thread.run

--- 120009192 ns (0.06%), 9 samples
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.getContext
  [ 1] kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 5] java.lang.Thread.run

--- 120004774 ns (0.06%), 12 samples
  [ 0] jdk.internal.misc.Unsafe.checkOffset
  [ 1] jdk.internal.misc.Unsafe.checkPointer
  [ 2] jdk.internal.misc.Unsafe.checkPrimitivePointer
  [ 3] jdk.internal.misc.Unsafe.copyMemoryChecks
  [ 4] jdk.internal.misc.Unsafe.copyMemory
  [ 5] java.nio.DirectByteBuffer.get
  [ 6] java.nio.HeapByteBuffer.put
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [11] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [12] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [16] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [17] java.lang.Thread.run

--- 120001755 ns (0.06%), 8 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getWriteByteOrder
  [ 1] io.ktor.utils.io.ByteBufferChannel.prepareWriteBuffer$ktor_io
  [ 2] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 8] java.lang.Thread.run

--- 119999235 ns (0.06%), 12 samples
  [ 0] jdk.internal.misc.Unsafe.copyMemory
  [ 1] java.nio.DirectByteBuffer.get
  [ 2] java.nio.HeapByteBuffer.put
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [12] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [13] java.lang.Thread.run

--- 110006294 ns (0.05%), 9 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.getAndAdd
  [ 1] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.addAndGet
  [ 2] io.ktor.utils.io.internal.RingBufferCapacity.flush
  [ 3] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.flush
  [ 5] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [10] java.lang.Thread.run

--- 110002444 ns (0.05%), 9 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.getAndSet
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.flush
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 9] java.lang.Thread.run

--- 109997356 ns (0.05%), 11 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 100007768 ns (0.05%), 10 samples
  [ 0] java.nio.Buffer.position
  [ 1] java.nio.ByteBuffer.position
  [ 2] java.nio.MappedByteBuffer.position
  [ 3] java.nio.DirectByteBuffer.get
  [ 4] java.nio.HeapByteBuffer.put
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [10] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [14] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [15] java.lang.Thread.run

--- 100005689 ns (0.05%), 5 samples
  [ 0] java.lang.Thread.blockedOn
  [ 1] java.lang.System$2.blockedOn
  [ 2] java.nio.channels.spi.AbstractInterruptibleChannel.blockedOn
  [ 3] java.nio.channels.spi.AbstractInterruptibleChannel.begin
  [ 4] sun.nio.ch.FileChannelImpl.beginBlocking
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 100002719 ns (0.05%), 5 samples
  [ 0] java.nio.channels.spi.AbstractInterruptibleChannel.blockedOn
  [ 1] java.nio.channels.spi.AbstractInterruptibleChannel.begin
  [ 2] sun.nio.ch.FileChannelImpl.beginBlocking
  [ 3] sun.nio.ch.FileChannelImpl.read
  [ 4] io.ktor.util.BufferViewJvmKt.read
  [ 5] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [10] java.lang.Thread.run

--- 99999374 ns (0.05%), 10 samples
  [ 0] io.ktor.utils.io.internal.CancellableReusableContinuation.parent
  [ 1] io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 90002941 ns (0.04%), 9 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
  [ 2] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [12] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [13] java.lang.Thread.run

--- 80006534 ns (0.04%), 8 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 3] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 8] java.lang.Thread.run

--- 80005859 ns (0.04%), 7 samples
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.takeState$kotlinx_coroutines_core
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 4] java.lang.Thread.run

--- 80005405 ns (0.04%), 8 samples
  [ 0] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 2] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [12] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [13] java.lang.Thread.run

--- 80004434 ns (0.04%), 8 samples
  [ 0] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 1] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 6] java.lang.Thread.run

--- 80003397 ns (0.04%), 8 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [10] java.lang.Thread.run

--- 80002474 ns (0.04%), 5 samples
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.takeState$kotlinx_coroutines_core
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 4] java.lang.Thread.run

--- 80002411 ns (0.04%), 4 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 3] java.lang.Thread.run

--- 80001363 ns (0.04%), 8 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$getState
  [ 2] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [12] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [13] java.lang.Thread.run

--- 80000373 ns (0.04%), 5 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 1] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.flush
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 8] java.lang.Thread.run

--- 70004244 ns (0.03%), 7 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.<init>
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 2] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 8] java.lang.Thread.run

--- 70002707 ns (0.03%), 4 samples
  [ 0] itable stub
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 4] java.lang.Thread.run

--- 70002368 ns (0.03%), 4 samples
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.completeWrite
  [ 1] io.ktor.utils.io.ByteBufferChannel.bytesWritten
  [ 2] io.ktor.utils.io.ByteBufferChannel.bytesWrittenFromSession$ktor_io
  [ 3] io.ktor.utils.io.internal.WriteSessionImpl.written
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 9] java.lang.Thread.run

--- 70002115 ns (0.03%), 3 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.prepareBuffer
  [ 1] io.ktor.utils.io.ByteBufferChannel.prepareWriteBuffer$ktor_io
  [ 2] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 8] java.lang.Thread.run

--- 70000892 ns (0.03%), 1 sample
  [ 0] java.nio.ByteBuffer.position
  [ 1] java.nio.MappedByteBuffer.position
  [ 2] java.nio.MappedByteBuffer.position
  [ 3] java.nio.Buffer.<init>
  [ 4] java.nio.ByteBuffer.<init>
  [ 5] java.nio.ByteBuffer.<init>
  [ 6] java.nio.MappedByteBuffer.<init>
  [ 7] java.nio.DirectByteBuffer.<init>
  [ 8] java.nio.DirectByteBuffer.duplicate
  [ 9] io.ktor.util.BufferViewJvmKt.read
  [10] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [14] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [15] java.lang.Thread.run

--- 69997979 ns (0.03%), 7 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$getState
  [ 2] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [12] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [13] java.lang.Thread.run

--- 60006620 ns (0.03%), 4 samples
  [ 0] sun.nio.ch.FileDispatcherImpl.read0
  [ 1] java.nio.ByteBuffer.<init>
  [ 2] java.nio.ByteBuffer.<init>
  [ 3] java.nio.MappedByteBuffer.<init>
  [ 4] java.nio.DirectByteBuffer.<init>
  [ 5] java.nio.DirectByteBuffer.duplicate
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 60003299 ns (0.03%), 6 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/libnio.so
  [ 1] sun.nio.ch.FileDispatcherImpl.read0
  [ 2] sun.nio.ch.FileDispatcherImpl.read
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 60002117 ns (0.03%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 1] io.ktor.utils.io.ByteBufferChannel.flush
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 7] java.lang.Thread.run

--- 60001955 ns (0.03%), 5 samples
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.getContext
  [ 1] kotlinx.coroutines.internal.DispatchedContinuation.takeState$kotlinx_coroutines_core
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 5] java.lang.Thread.run

--- 60001479 ns (0.03%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.flush
  [ 1] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 6] java.lang.Thread.run

--- 60001068 ns (0.03%), 1 sample
  [ 0] java.nio.Buffer.limit
  [ 1] java.nio.DirectByteBuffer.duplicate
  [ 2] io.ktor.util.BufferViewJvmKt.read
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 8] java.lang.Thread.run

--- 60000294 ns (0.03%), 6 samples
  [ 0] kotlin.coroutines.jvm.internal.BaseContinuationImpl.<init>
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.<init>
  [ 2] kotlin.coroutines.jvm.internal.ContinuationImpl.<init>
  [ 3] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.<init>
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 60000049 ns (0.03%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 1] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 2] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 3] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 9] java.lang.Thread.run

--- 59999392 ns (0.03%), 6 samples
  [ 0] java.nio.Buffer.position
  [ 1] java.nio.ByteBuffer.position
  [ 2] java.nio.MappedByteBuffer.position
  [ 3] java.nio.DirectByteBuffer.get
  [ 4] java.nio.HeapByteBuffer.put
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [10] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [14] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [15] java.lang.Thread.run

--- 50010333 ns (0.02%), 5 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] start_thread

--- 50004486 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 5] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [11] java.lang.Thread.run

--- 50003943 ns (0.02%), 5 samples
  [ 0] kotlinx.coroutines.CoroutineDispatcher.releaseInterceptedContinuation
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.releaseIntercepted
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 6] java.lang.Thread.run

--- 50003463 ns (0.02%), 2 samples
  [ 0] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 1] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 2] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 3] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 4] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 5] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [10] java.lang.Thread.run

--- 50002782 ns (0.02%), 5 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.carryIndex
  [ 1] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 50002266 ns (0.02%), 2 samples
  [ 0] java.lang.invoke.VarHandleObjects$FieldInstanceReadWrite.setRelease
  [ 1] java.lang.invoke.VarHandleGuards.guard_LL_V
  [ 2] java.util.concurrent.ConcurrentLinkedQueue.updateHead
  [ 3] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 6] java.lang.Thread.run

--- 50002032 ns (0.02%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.bytesWritten
  [ 1] io.ktor.utils.io.ByteBufferChannel.bytesWrittenFromSession$ktor_io
  [ 2] io.ktor.utils.io.internal.WriteSessionImpl.written
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 8] java.lang.Thread.run

--- 50001689 ns (0.02%), 5 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 2] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 7] java.lang.Thread.run

--- 50000515 ns (0.02%), 5 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 3] java.lang.Thread.run

--- 49999245 ns (0.02%), 4 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.flush
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 8] java.lang.Thread.run

--- 49998784 ns (0.02%), 5 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 1] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [10] java.lang.Thread.run

--- 49996077 ns (0.02%), 3 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.carryIndex
  [ 1] io.ktor.utils.io.ByteBufferChannel.bytesWritten
  [ 2] io.ktor.utils.io.ByteBufferChannel.bytesWrittenFromSession$ktor_io
  [ 3] io.ktor.utils.io.internal.WriteSessionImpl.written
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 9] java.lang.Thread.run

--- 40003463 ns (0.02%), 4 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 3] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 8] java.lang.Thread.run

--- 40002763 ns (0.02%), 3 samples
  [ 0] kotlinx.coroutines.DispatchedTask.run
  [ 1] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 4] java.lang.Thread.run

--- 40002011 ns (0.02%), 4 samples
  [ 0] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 5] java.lang.Thread.run

--- 40001745 ns (0.02%), 4 samples
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.tryReadAtMost
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [11] java.lang.Thread.run

--- 40001606 ns (0.02%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.access$flushImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 5] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 6] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 40001567 ns (0.02%), 4 samples
  [ 0] java.nio.Buffer.limit
  [ 1] java.nio.ByteBuffer.limit
  [ 2] java.nio.MappedByteBuffer.limit
  [ 3] java.nio.MappedByteBuffer.limit
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [13] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [14] java.lang.Thread.run

--- 40001403 ns (0.02%), 1 sample
  [ 0] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 5] java.lang.Thread.run

--- 40001306 ns (0.02%), 1 sample
  [ 0] java.nio.Buffer.limit
  [ 1] java.nio.ByteBuffer.limit
  [ 2] java.nio.MappedByteBuffer.limit
  [ 3] java.nio.MappedByteBuffer.limit
  [ 4] io.ktor.utils.io.ByteBufferChannel.prepareBuffer
  [ 5] io.ktor.utils.io.ByteBufferChannel.prepareWriteBuffer$ktor_io
  [ 6] io.ktor.utils.io.internal.WriteSessionImpl.request
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 40001206 ns (0.02%), 4 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 1] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [11] java.lang.Thread.run

--- 40001183 ns (0.02%), 4 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.accessCheck
  [ 1] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet
  [ 2] io.ktor.utils.io.internal.RingBufferCapacity.completeRead
  [ 3] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [13] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [14] java.lang.Thread.run

--- 40000743 ns (0.02%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 1] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 7] java.lang.Thread.run

--- 40000687 ns (0.02%), 3 samples
  [ 0] kotlinx.coroutines.DispatchedTask.run
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 3] java.lang.Thread.run

--- 40000644 ns (0.02%), 3 samples
  [ 0] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 4] java.lang.Thread.run

--- 40000638 ns (0.02%), 4 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [10] java.lang.Thread.run

--- 40000290 ns (0.02%), 2 samples
  [ 0] java.nio.Buffer.<init>
  [ 1] java.nio.ByteBuffer.<init>
  [ 2] java.nio.ByteBuffer.<init>
  [ 3] java.nio.MappedByteBuffer.<init>
  [ 4] java.nio.DirectByteBuffer.<init>
  [ 5] java.nio.DirectByteBuffer.duplicate
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 39998413 ns (0.02%), 4 samples
  [ 0] java.nio.Buffer.limit
  [ 1] java.nio.ByteBuffer.limit
  [ 2] java.nio.MappedByteBuffer.limit
  [ 3] java.nio.MappedByteBuffer.limit
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [13] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [14] java.lang.Thread.run

--- 30016857 ns (0.01%), 3 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] start_thread

--- 30014347 ns (0.01%), 3 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [12] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [13] start_thread

--- 30010168 ns (0.01%), 3 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [12] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [13] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [14] start_thread

--- 30004048 ns (0.01%), 3 samples
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 1] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 30003441 ns (0.01%), 1 sample
  [ 0] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 1] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 7] java.lang.Thread.run

--- 30002762 ns (0.01%), 3 samples
  [ 0] kotlin.coroutines.CombinedContext.get
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 2] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 8] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [12] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [13] java.lang.Thread.run

--- 30002402 ns (0.01%), 3 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.bytesRead
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [11] java.lang.Thread.run

--- 30002259 ns (0.01%), 3 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [10] java.lang.Thread.run

--- 30002224 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 1] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 2] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 8] java.lang.Thread.run

--- 30002028 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.carryIndex
  [ 1] io.ktor.utils.io.ByteBufferChannel.bytesWritten
  [ 2] io.ktor.utils.io.ByteBufferChannel.bytesWrittenFromSession$ktor_io
  [ 3] io.ktor.utils.io.internal.WriteSessionImpl.written
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 9] java.lang.Thread.run

--- 30001817 ns (0.01%), 2 samples
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 1] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 2] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 5] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 6] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [11] java.lang.Thread.run

--- 30001662 ns (0.01%), 2 samples
  [ 0] java.nio.DirectByteBuffer.duplicate
  [ 1] io.ktor.util.BufferViewJvmKt.read
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 7] java.lang.Thread.run

--- 30001504 ns (0.01%), 3 samples
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.awaitReusability
  [ 1] kotlinx.coroutines.internal.DispatchedContinuation.release
  [ 2] kotlinx.coroutines.CoroutineDispatcher.releaseInterceptedContinuation
  [ 3] kotlin.coroutines.jvm.internal.ContinuationImpl.releaseIntercepted
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 8] java.lang.Thread.run

--- 30001306 ns (0.01%), 2 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so

--- 30001189 ns (0.01%), 3 samples
  [ 0] kotlin.coroutines.CombinedContext.get
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.releaseIntercepted
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 5] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 6] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 30001171 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ChannelScope.getChannel
  [ 1] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 6] java.lang.Thread.run

--- 30001107 ns (0.01%), 1 sample
  [ 0] java.nio.DirectByteBuffer.duplicate
  [ 1] io.ktor.util.BufferViewJvmKt.read
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 7] java.lang.Thread.run

--- 30001034 ns (0.01%), 1 sample
  [ 0] kotlinx.coroutines.DispatchedTask.run
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 3] java.lang.Thread.run

--- 30001031 ns (0.01%), 3 samples
  [ 0] vtable stub
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 5] java.lang.Thread.run

--- 30000952 ns (0.01%), 1 sample
  [ 0] java.nio.MappedByteBuffer.limit
  [ 1] java.nio.MappedByteBuffer.limit
  [ 2] java.nio.Buffer.<init>
  [ 3] java.nio.ByteBuffer.<init>
  [ 4] java.nio.ByteBuffer.<init>
  [ 5] java.nio.MappedByteBuffer.<init>
  [ 6] java.nio.DirectByteBuffer.<init>
  [ 7] java.nio.DirectByteBuffer.duplicate
  [ 8] io.ktor.util.BufferViewJvmKt.read
  [ 9] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [13] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [14] java.lang.Thread.run

--- 30000906 ns (0.01%), 2 samples
  [ 0] kotlin.coroutines.CombinedContext.get
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.releaseIntercepted
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 4] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 5] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 6] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 30000734 ns (0.01%), 3 samples
  [ 0] java.nio.Buffer.limit
  [ 1] java.nio.ByteBuffer.limit
  [ 2] java.nio.MappedByteBuffer.limit
  [ 3] java.nio.MappedByteBuffer.limit
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [10] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [11] kotlinx.coroutines.DispatchedTask.run
  [12] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [13] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [14] java.lang.Thread.run

--- 30000605 ns (0.01%), 3 samples
  [ 0] java.nio.HeapByteBuffer.put
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [11] java.lang.Thread.run

--- 30000506 ns (0.01%), 2 samples
  [ 0] kotlin.jvm.internal.Intrinsics.checkNotNull
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.getContext
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 5] java.lang.Thread.run

--- 30000481 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.internal.WriteSessionImpl.written
  [ 1] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 6] java.lang.Thread.run

--- 30000478 ns (0.01%), 3 samples
  [ 0] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 4] java.lang.Thread.run

--- 30000411 ns (0.01%), 2 samples
  [ 0] kotlinx.coroutines.CoroutineDispatcher.get
  [ 1] kotlin.coroutines.CombinedContext.get
  [ 2] kotlin.coroutines.jvm.internal.ContinuationImpl.releaseIntercepted
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 5] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 6] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 7] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 8] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [12] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [13] java.lang.Thread.run

--- 30000038 ns (0.01%), 3 samples
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.getContext
  [ 1] io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 29999987 ns (0.01%), 2 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.offer
  [ 1] java.util.concurrent.ConcurrentLinkedQueue.add
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.dispatch
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.flush
  [ 8] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [12] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [13] java.lang.Thread.run

--- 29999930 ns (0.01%), 3 samples
  [ 0] kotlin.coroutines.CombinedContext.fold
  [ 1] kotlinx.coroutines.internal.ThreadContextKt.threadContextElements
  [ 2] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 3] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 4] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 5] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 6] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [11] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [15] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [16] java.lang.Thread.run

--- 29999797 ns (0.01%), 3 samples
  [ 0] Java_sun_nio_ch_FileDispatcherImpl_read0
  [ 1] sun.nio.ch.FileDispatcherImpl.read0
  [ 2] sun.nio.ch.FileDispatcherImpl.read
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 29999685 ns (0.01%), 3 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 2] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 7] java.lang.Thread.run

--- 29999653 ns (0.01%), 2 samples
  [ 0] java.nio.DirectByteBuffer.duplicate
  [ 1] io.ktor.util.BufferViewJvmKt.read
  [ 2] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 7] java.lang.Thread.run

--- 29999447 ns (0.01%), 3 samples
  [ 0] io.ktor.utils.io.internal.RingBufferCapacity.tryReadAtMost
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [11] java.lang.Thread.run

--- 29999149 ns (0.01%), 3 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 1] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 29996687 ns (0.01%), 2 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.offer
  [ 1] java.util.concurrent.ConcurrentLinkedQueue.add
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.dispatch
  [ 3] kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
  [ 4] io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  [ 5] io.ktor.utils.io.ByteBufferChannel.resumeReadOp
  [ 6] io.ktor.utils.io.ByteBufferChannel.flushImpl
  [ 7] io.ktor.utils.io.ByteBufferChannel.flush
  [ 8] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [12] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [13] java.lang.Thread.run

--- 20005560 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 4] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 9] java.lang.Thread.run

--- 20005230 ns (0.01%), 2 samples
  [ 0] java.nio.Buffer.limit
  [ 1] java.nio.ByteBuffer.limit
  [ 2] java.nio.MappedByteBuffer.limit
  [ 3] java.nio.MappedByteBuffer.limit
  [ 4] io.ktor.utils.io.ByteBufferChannel.prepareBuffer
  [ 5] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [10] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [11] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [12] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [13] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [14] kotlinx.coroutines.DispatchedTask.run
  [15] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [16] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [17] java.lang.Thread.run

--- 20005050 ns (0.01%), 2 samples
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 4] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 5] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 6] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 7] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 8] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 9] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [10] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [11] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [12] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [13] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [14] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [15] start_thread

--- 20005004 ns (0.01%), 2 samples
  [ 0] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 4] java.lang.Thread.run

--- 20003508 ns (0.01%), 1 sample
  [ 0] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 1] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 2] /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
  [ 3] JVM_FillInStackTrace
  [ 4] Java_java_lang_Throwable_fillInStackTrace
  [ 5] java.lang.Throwable.fillInStackTrace
  [ 6] java.lang.Throwable.fillInStackTrace
  [ 7] java.lang.Throwable.<init>
  [ 8] java.lang.Exception.<init>
  [ 9] java.lang.RuntimeException.<init>
  [10] java.lang.IllegalStateException.<init>
  [11] java.util.concurrent.CancellationException.<init>
  [12] io.ktor.utils.io.ClosedWriteChannelException.<init>
  [13] io.ktor.utils.io.ByteBufferChannel.close
  [14] io.ktor.utils.io.CoroutinesKt$launchChannel$1.invoke
  [15] io.ktor.utils.io.CoroutinesKt$launchChannel$1.invoke
  [16] kotlinx.coroutines.InvokeOnCompletion.invoke
  [17] kotlinx.coroutines.JobSupport.notifyCompletion
  [18] kotlinx.coroutines.JobSupport.completeStateFinalization
  [19] kotlinx.coroutines.JobSupport.finalizeFinishingState
  [20] kotlinx.coroutines.JobSupport.tryMakeCompletingSlowPath
  [21] kotlinx.coroutines.JobSupport.tryMakeCompleting
  [22] kotlinx.coroutines.JobSupport.makeCompletingOnce$kotlinx_coroutines_core
  [23] kotlinx.coroutines.AbstractCoroutine.resumeWith
  [24] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [25] kotlinx.coroutines.DispatchedTask.run
  [26] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [27] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [28] java.lang.Thread.run

--- 20003184 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 5] java.lang.Thread.run

--- 20003094 ns (0.01%), 2 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.internal.RingBufferCapacity.tryReadAtMost
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 20002992 ns (0.01%), 2 samples
  [ 0] kotlin.coroutines.jvm.internal.ContinuationImpl.releaseIntercepted
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 5] java.lang.Thread.run

--- 20002974 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.internal.CancellableReusableContinuation.parent
  [ 1] io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 20002701 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.writeSuspendPredicate
  [ 2] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 3] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 4] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 5] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 6] kotlinx.coroutines.DispatchedTask.run
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 9] java.lang.Thread.run

--- 20002367 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 2] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [ 3] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 4] kotlinx.coroutines.DispatchedTask.run
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 7] java.lang.Thread.run

--- 20002170 ns (0.01%), 2 samples
  [ 0] kotlin.coroutines.CombinedContext.get
  [ 1] kotlin.coroutines.jvm.internal.ContinuationImpl.releaseIntercepted
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 6] java.lang.Thread.run

--- 20002039 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.writeSuspendPredicate
  [ 1] io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
  [ 2] io.ktor.utils.io.internal.WriteSessionImpl.tryAwait
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 8] java.lang.Thread.run

--- 20001860 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.access$getJoining$p
  [ 1] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [11] java.lang.Thread.run

--- 20001743 ns (0.01%), 2 samples
  [ 0] java.nio.HeapByteBuffer.put
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [11] java.lang.Thread.run

--- 20001674 ns (0.01%), 2 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] java.nio.Buffer.position
  [ 2] java.nio.ByteBuffer.position
  [ 3] java.nio.MappedByteBuffer.position
  [ 4] java.nio.DirectByteBuffer.get
  [ 5] java.nio.HeapByteBuffer.put
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [10] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [11] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [12] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [13] kotlinx.coroutines.DispatchedTask.run
  [14] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [15] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [16] java.lang.Thread.run

--- 20001627 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getClosed
  [ 1] io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  [ 2] io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [11] java.lang.Thread.run

--- 20001594 ns (0.01%), 2 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 3] java.lang.Thread.run

--- 20001546 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 5] java.lang.Thread.run

--- 20001479 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 1] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 2] kotlinx.coroutines.DispatchedTask.run
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 5] java.lang.Thread.run

--- 20001449 ns (0.01%), 2 samples
  [ 0] kotlinx.coroutines.internal.DispatchedContinuation.getContext
  [ 1] kotlinx.coroutines.internal.DispatchedContinuation.<init>
  [ 2] kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
  [ 3] kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
  [ 4] kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
  [ 5] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 9] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [10] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [11] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [12] kotlinx.coroutines.DispatchedTask.run
  [13] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [14] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [15] java.lang.Thread.run

--- 20001438 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 1] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [11] java.lang.Thread.run

--- 20001435 ns (0.01%), 2 samples
  [ 0] kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
  [ 1] kotlinx.coroutines.DispatchedTask.run
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 3] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 4] java.lang.Thread.run

--- 20001267 ns (0.01%), 1 sample
  [ 0] sun.nio.ch.NativeThreadSet.add
  [ 1] sun.nio.ch.FileChannelImpl.read
  [ 2] io.ktor.util.BufferViewJvmKt.read
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 8] java.lang.Thread.run

--- 20001238 ns (0.01%), 2 samples
  [ 0] java.nio.Buffer.<init>
  [ 1] java.nio.ByteBuffer.<init>
  [ 2] java.nio.ByteBuffer.<init>
  [ 3] java.nio.MappedByteBuffer.<init>
  [ 4] java.nio.DirectByteBuffer.<init>
  [ 5] java.nio.DirectByteBuffer.duplicate
  [ 6] io.ktor.util.BufferViewJvmKt.read
  [ 7] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 20001207 ns (0.01%), 1 sample
  [ 0] java.nio.Buffer.markValue
  [ 1] java.nio.DirectByteBuffer.duplicate
  [ 2] io.ktor.util.BufferViewJvmKt.read
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 8] java.lang.Thread.run

--- 20001141 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.suspensionForSize
  [ 1] io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readSuspend
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [ 7] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 8] kotlinx.coroutines.DispatchedTask.run
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [11] java.lang.Thread.run

--- 20001040 ns (0.01%), 2 samples
  [ 0] java.nio.ByteBuffer.position
  [ 1] java.nio.MappedByteBuffer.position
  [ 2] java.nio.DirectByteBuffer.get
  [ 3] java.nio.HeapByteBuffer.put
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 7] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 20000928 ns (0.01%), 1 sample
  [ 0] kotlin.jvm.internal.Intrinsics.checkNotNullParameter
  [ 1] io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
  [ 2] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 3] kotlinx.coroutines.DispatchedTask.run
  [ 4] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 5] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 6] java.lang.Thread.run

--- 20000898 ns (0.01%), 2 samples
  [ 0] java.nio.ByteBuffer.limit
  [ 1] java.nio.MappedByteBuffer.limit
  [ 2] java.nio.MappedByteBuffer.limit
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 6] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 8] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 9] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [10] kotlinx.coroutines.DispatchedTask.run
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [12] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [13] java.lang.Thread.run

--- 20000888 ns (0.01%), 2 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet
  [ 1] io.ktor.utils.io.internal.RingBufferCapacity.tryReadAtMost
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 6] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 7] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 8] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 9] kotlinx.coroutines.DispatchedTask.run
  [10] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [11] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [12] java.lang.Thread.run

--- 20000848 ns (0.01%), 2 samples
  [ 0] kotlinx.coroutines.DispatchedTask.run
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 3] java.lang.Thread.run

--- 20000803 ns (0.01%), 2 samples
  [ 0] io.ktor.utils.io.ByteBufferChannel.getState
  [ 1] io.ktor.utils.io.ByteBufferChannel.access$getState
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [10] java.lang.Thread.run

--- 20000765 ns (0.01%), 1 sample
  [ 0] io.ktor.utils.io.core.BufferSharedState.getWritePosition
  [ 1] io.ktor.utils.io.core.Buffer.getWritePosition
  [ 2] io.ktor.util.BufferViewJvmKt.read
  [ 3] io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
  [ 4] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 5] kotlinx.coroutines.DispatchedTask.run
  [ 6] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 7] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 8] java.lang.Thread.run

--- 20000752 ns (0.01%), 2 samples
  [ 0] kotlin.coroutines.jvm.internal.Boxing.boxInt
  [ 1] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
  [ 4] io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
  [ 5] io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [10] java.lang.Thread.run

--- 20000747 ns (0.01%), 2 samples
  [ 0] java.nio.DirectByteBuffer.get
  [ 1] java.nio.HeapByteBuffer.put
  [ 2] io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
  [ 3] io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
  [ 4] io.ktor.utils.io.ByteBufferChannel.readAvailable
  [ 5] io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
  [ 6] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 7] kotlinx.coroutines.DispatchedTask.run
  [ 8] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 9] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [10] java.lang.Thread.run

--- 20000718 ns (0.01%), 1 sample
  [ 0] kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
  [ 1] io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  [ 2] io.ktor.benchmarks.dispatchers.HotLoopDispatcher$$Lambda$35.1596076014.run
  [ 3] java.lang.Thread.run

          ns  percent  samples  top
  ----------  -------  -------  ---
100453194429   49.98%    10044  io.ktor.benchmarks.dispatchers.IOCoroutineDispatcher$IOThread.run
 42181239206   20.99%     3521  java.util.concurrent.ConcurrentLinkedQueue.poll
  9080348020    4.52%      907  jlong_disjoint_arraycopy
  8010345948    3.99%      532  read
  7350250048    3.66%      593  java.lang.invoke.VarHandleObjects$FieldInstanceReadWrite.compareAndSet
  6350163743    3.16%      519  io.ktor.benchmarks.dispatchers.HotLoopDispatcher.getQueue
  2070053724    1.03%      179  io.ktor.benchmarks.dispatchers.HotLoopDispatcher.thread$lambda-0
  2040053164    1.02%      133  io.ktor.utils.io.ByteBufferChannel.flushImpl
  1570031685    0.78%      157  java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
  1360027650    0.68%      136  io.ktor.utils.io.ByteBufferChannel.setupStateForRead
  1340039071    0.67%       92  java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet
  1270031286    0.63%       79  io.ktor.utils.io.internal.CancellableReusableContinuation.resumeWith
  1090019405    0.54%       73  java.util.concurrent.ConcurrentLinkedQueue.offer
   980027397    0.49%       60  io.ktor.utils.io.internal.RingBufferCapacity.tryWriteAtLeast
   860032296    0.43%       86  io.ktor.utils.io.ByteBufferChannel.readAvailableSuspend
   700014773    0.35%       45  java.nio.MappedByteBuffer.limit
   690032976    0.34%       61  java.nio.Buffer.position
   610019706    0.30%       61  io.ktor.utils.io.internal.RingBufferCapacity.tryReadAtMost
   610015335    0.30%       52  kotlin.coroutines.CombinedContext.get
   550028898    0.27%       55  kotlinx.coroutines.internal.ThreadContextKt$countAll$1.invoke
   470108701    0.23%       35  itable stub
   470037512    0.23%       28  sun.nio.ch.FileDispatcherImpl.read0
   470013786    0.23%       28  /usr/lib/x86_64-linux-gnu/libc-2.33.so
   460016459    0.23%       46  kotlin.coroutines.CombinedContext.fold
   400012964    0.20%       32  java.nio.Buffer.limit
   380005172    0.19%       34  io.ktor.utils.io.ByteBufferChannel.getState
   370008536    0.18%       37  io.ktor.utils.io.ByteBufferChannel.resumeWriteOp
   350013752    0.17%       35  java.nio.DirectByteBuffer.get
   350009944    0.17%       20  kotlinx.coroutines.internal.DispatchedContinuation.resumeWith
   350004910    0.17%       26  io.ktor.util.cio.FileChannelsKt$readChannel$1$3$1.invokeSuspend
   300014774    0.15%       17  kotlinx.coroutines.DispatchedTask.run
   290008898    0.14%       17  io.ktor.utils.io.ByteBufferChannel.tryWriteSuspend$ktor_io
   280184032    0.14%       26  /usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so
   280015848    0.14%       28  io.ktor.utils.io.ByteBufferChannel.readAsMuchAsPossible
   270012943    0.13%       21  java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.getAndSet
   270008438    0.13%       22  java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.getAndAdd
   270007980    0.13%       27  io.ktor.utils.io.ByteBufferChannel.suspensionForSize
   270002920    0.13%       27  io.ktor.utils.io.internal.RingBufferCapacity.completeRead
   220011142    0.11%       19  io.ktor.utils.io.internal.WriteSessionImpl.request
   209999841    0.10%       13  io.ktor.utils.io.internal.WriteSessionImpl.written
   200011469    0.10%       16  kotlin.coroutines.jvm.internal.ContinuationImpl.getContext
   200010564    0.10%       15  kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith
   200005167    0.10%       13  sun.nio.ch.NativeThread.current
   200001318    0.10%       20  kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.intercepted
   160008333    0.08%       12  kotlinx.coroutines.internal.DispatchedContinuation.takeState$kotlinx_coroutines_core
   150004338    0.07%       15  jdk.internal.misc.Unsafe.checkPrimitivePointer
   140003436    0.07%       11  java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.addAndGet
   140000043    0.07%       11  io.ktor.utils.io.ByteBufferChannel.carryIndex
   130004856    0.06%       13  jdk.internal.misc.Unsafe.checkOffset
   130002346    0.06%       13  io.ktor.utils.io.core.ByteOrder.getNioOrder
   130001730    0.06%       13  io.ktor.utils.io.internal.CancellableReusableContinuation.parent
   120001755    0.06%        8  io.ktor.utils.io.ByteBufferChannel.getWriteByteOrder
   119999235    0.06%       12  jdk.internal.misc.Unsafe.copyMemory
   110001333    0.05%        7  io.ktor.utils.io.ByteBufferChannel.prepareBuffer
   100005689    0.05%        5  java.lang.Thread.blockedOn
   100003113    0.05%        5  io.ktor.utils.io.ByteBufferChannel$writeSuspension$1.invoke
   100003060    0.05%        4  java.nio.ByteBuffer.position
   100002808    0.05%        6  java.nio.DirectByteBuffer.duplicate
   100002719    0.05%        5  java.nio.channels.spi.AbstractInterruptibleChannel.blockedOn
    90010745    0.04%        8  kotlin.coroutines.jvm.internal.ContinuationImpl.intercepted
    90005672    0.04%        9  kotlinx.coroutines.CoroutineDispatcher.interceptContinuation
    90002097    0.04%        9  java.nio.HeapByteBuffer.put
    90000755    0.04%        6  io.ktor.utils.io.ByteBufferChannel.resumeReadOp
    80005156    0.04%        8  io.ktor.utils.io.ByteBufferChannel.readAvailable$suspendImpl
    80001171    0.04%        5  io.ktor.utils.io.internal.RingBufferCapacity.completeWrite
    70004244    0.03%        7  io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.<init>
    70001235    0.03%        6  io.ktor.utils.io.ByteBufferChannel.writeSuspendPredicate
    70000661    0.03%        7  kotlin.coroutines.jvm.internal.BaseContinuationImpl.<init>
    69997511    0.03%        7  io.ktor.utils.io.ByteBufferChannel.readSuspendImpl
    60008940    0.03%        6  io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$2.invokeSuspend
    60003487    0.03%        6  io.ktor.utils.io.ByteBufferChannel.getClosed
    60003299    0.03%        6  /usr/lib/jvm/java-11-openjdk-amd64/lib/libnio.so
    60002705    0.03%        6  kotlinx.coroutines.internal.DispatchedContinuation.getContext
    60001528    0.03%        4  java.nio.Buffer.<init>
    60001479    0.03%        2  io.ktor.utils.io.ByteBufferChannel.flush
    60000973    0.03%        6  java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.accessCheck
    50007251    0.02%        5  io.ktor.utils.io.ByteBufferChannel.readSuspend
    50003943    0.02%        5  kotlinx.coroutines.CoroutineDispatcher.releaseInterceptedContinuation
    50002266    0.02%        2  java.lang.invoke.VarHandleObjects$FieldInstanceReadWrite.setRelease
    50002226    0.02%        5  io.ktor.benchmarks.FileBenchmarks$testKtorFileReadInHot2HotDispatcher$1.invokeSuspend
    50002032    0.02%        2  io.ktor.utils.io.ByteBufferChannel.bytesWritten
    49998848    0.02%        4  kotlin.jvm.internal.Intrinsics.checkNotNullParameter
    40001625    0.02%        2  sun.nio.ch.NativeThreadSet.add
    40001145    0.02%        3  kotlin.jvm.internal.Intrinsics.checkNotNull
    30003846    0.01%        3  kotlin.coroutines.jvm.internal.ContinuationImpl.releaseIntercepted
    30002740    0.01%        3  kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext
    30002402    0.01%        3  io.ktor.utils.io.ByteBufferChannel.bytesRead
    30001504    0.01%        3  kotlinx.coroutines.internal.DispatchedContinuation.awaitReusability
    30001171    0.01%        2  io.ktor.utils.io.ChannelScope.getChannel
    30001031    0.01%        3  vtable stub
    30000866    0.01%        2  io.ktor.utils.io.core.BufferSharedState.getWritePosition
    30000411    0.01%        2  kotlinx.coroutines.CoroutineDispatcher.get
    29999797    0.01%        3  Java_sun_nio_ch_FileDispatcherImpl_read0
    29999510    0.01%        3  kotlin.ResultKt.throwOnFailure
    20010139    0.01%        2  io.ktor.utils.io.ByteBufferChannel.setupStateForWrite$ktor_io
    20001860    0.01%        2  io.ktor.utils.io.ByteBufferChannel.access$getJoining$p
    20001207    0.01%        1  java.nio.Buffer.markValue
    20001134    0.01%        2  java.nio.ByteBuffer.order
    20001041    0.01%        2  io.ktor.utils.io.ByteBufferChannel.access$setupStateForRead
    20000898    0.01%        2  java.nio.ByteBuffer.limit
    20000752    0.01%        2  kotlin.coroutines.jvm.internal.Boxing.boxInt
    20000648    0.01%        1  sun.nio.ch.FileDispatcherImpl.read
    20000100    0.01%        2  unsafe_arraycopy
    19998992    0.01%        2  io.ktor.utils.io.ByteBufferChannel.getReadOp
    19998586    0.01%        1  io.ktor.utils.io.ByteBufferChannel.access$writeSuspendPredicate
    19997387    0.01%        2  java.nio.channels.spi.AbstractInterruptibleChannel.begin
    10287617    0.01%        1  __futex_abstimed_wait_cancelable64
    10001731    0.00%        1  kotlin.coroutines.jvm.internal.ContinuationImpl.<init>
    10001608    0.00%        1  kotlinx.coroutines.JobImpl.<init>
    10001293    0.00%        1  io.ktor.utils.io.ByteBufferChannel.access$readAvailableSuspend
    10001127    0.00%        1  java.lang.Object.equals
    10001111    0.00%        1  io.ktor.utils.io.ByteBufferChannel.tryReleaseBuffer
    10001105    0.00%        1  io.ktor.utils.io.ByteBufferChannel.readAvailable
    10000968    0.00%        1  stat
    10000889    0.00%        1  io.ktor.utils.io.ByteBufferChannel.close
    10000825    0.00%        1  io.ktor.utils.io.ByteBufferChannel.getWriteOp
    10000719    0.00%        1  kotlinx.coroutines.internal.DispatchedContinuation.getDelegate$kotlinx_coroutines_core
    10000649    0.00%        1  io.ktor.utils.io.internal.CancellableReusableContinuation.completeSuspendBlock
    10000590    0.00%        1  java.nio.DirectByteBuffer.ix
    10000578    0.00%        1  io.ktor.benchmarks.FileBenchmarks.access$getBuffer$p
    10000458    0.00%        1  jdk.internal.ref.PhantomCleanable.<init>
    10000402    0.00%        1  kotlin.jvm.internal.Intrinsics.areEqual
    10000400    0.00%        1  kotlinx.coroutines.internal.DispatchedContinuation.<init>
    10000384    0.00%        1  java.nio.ByteBuffer.<init>
    10000333    0.00%        1  java.nio.MappedByteBuffer.<init>
    10000302    0.00%        1  kotlinx.coroutines.InvokeOnCancelling.invoke
    10000288    0.00%        1  sun.nio.ch.FileChannelImpl.beginBlocking
    10000182    0.00%        1  io.ktor.utils.io.core.Buffer.getStartGap
    10000072    0.00%        1  Java_sun_nio_ch_NativeThread_current
    10000024    0.00%        1  java.nio.DirectByteBuffer.<init>
    10000019    0.00%        1  kotlin.Result.constructor-impl
    10000014    0.00%        1  jlong_arraycopy
     9999951    0.00%        1  io.ktor.utils.io.core.BufferSharedState.getStartGap
     9999913    0.00%        1  io.ktor.util.BufferViewJvmKt.read
     9999885    0.00%        1  java.nio.Buffer.capacity
     9999514    0.00%        1  java.lang.Class.getComponentType
     9999023    0.00%        1  java.lang.Class.cast
     9996458    0.00%        1  io.ktor.utils.io.internal.WriteSessionImpl.tryAwait

